{"version":3,"sources":["webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/components/autosuggest_emoji.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/components/emoji_picker_dropdown.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/components/character_counter.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/components/reply_indicator.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/containers/reply_indicator_container.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/components/autosuggest_account.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/containers/autosuggest_account_container.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/components/autosuggest_textarea.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/components/poll_button.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/containers/poll_button_container.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/components/upload_button.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/containers/upload_button_container.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/components/text_icon_button.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/containers/spoiler_button_container.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/components/privacy_dropdown.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/containers/privacy_dropdown_container.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/containers/sensitive_button_container.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/containers/emoji_picker_dropdown_container.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/components/poll_form.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/containers/poll_form_container.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/components/upload_progress.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/containers/upload_progress_container.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/components/upload.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/containers/upload_container.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/components/upload_form.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/containers/upload_form_container.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/components/warning.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/containers/warning_container.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/components/compose_form.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/containers/compose_form_container.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/containers/navigation_container.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/components/search.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/containers/search_container.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/components/hashtag.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/components/search_results.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/containers/search_results_container.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/mastodon/features/compose/index.js"],"names":["assetHost","process","env","CDN_HOST","AutosuggestEmoji","render","url","emoji","this","props","custom","imageUrl","mapping","unicodeMapping","native","replace","filename","Object","_babel_runtime_helpers_esm_jsx__WEBPACK_IMPORTED_MODULE_0__","className","src","alt","colons","React","PureComponent","EmojiPicker","Emoji","messages","defineMessages","id","defaultMessage","emoji_search","emoji_not_found","recent","search_results","people","nature","food","activity","travel","objects","symbols","flags","backgroundImageFn","listenerOptions","detectPassiveEvents","hasSupport","passive","categoriesSort","ModifierPickerMenu","e","_this","onSelect","currentTarget","getAttribute","node","contains","target","onClose","c","componentWillReceiveProps","nextProps","active","attachListeners","removeListeners","componentWillUnmount","document","addEventListener","handleDocumentClick","removeEventListener","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","style","display","ref","setRef","onClick","handleClick","data-index","set","size","sheetSize","skin","ModifierPicker","_this2","onOpen","modifier","onChange","_this$props","handleSelect","EmojiPickerMenu","injectIntl","modifierOpen","placement","_this3","intl","search","formatMessage","notfound","categories","foods","places","onPick","setState","onSkinTone","componentDidMount","_this$props2","loading","custom_emojis","skinTone","frequentlyUsedEmojis","width","title","state","classNames","selecting","perLine","emojiSize","buildCustomEmojis","color","i18n","getI18n","include","showPreview","autoFocus","emojiTooltip","handleModifierOpen","handleModifierClose","handleModifierChange","EmojiPickerDropdown","_this4","dropdown","_ref","EmojiPickerAsync","then","EmojiMart","Picker","catch","top","getBoundingClientRect","innerHeight","key","onHideDropdown","onShowDropdown","_this$props3","onPickEmoji","_this$state","onKeyDown","handleKeyDown","setTargetRef","aria-label","aria-expanded","role","onToggle","tabIndex","pulse-loading","react_overlays_lib_Overlay__WEBPACK_IMPORTED_MODULE_7___default","show","findTarget","CharacterCounter","checkRemainingText","diff","jsx","max","length","text","cancel","ReplyIndicator","onCancel","button","ctrlKey","metaKey","preventDefault","context","router","history","push","status","getIn","content","__html","get","direction","isRtl","icon_button","icon","inverted","href","handleAccountClick","avatar","account","display_name","dangerouslySetInnerHTML","ImmutablePureComponent","PropTypes","object","ImmutablePropTypes","map","func","isRequired","connect","getStatus","makeGetStatus","dispatch","cancelReplyCompose","AutosuggestAccount","getAccount","makeGetAccount","AutosuggestTextarea","suggestionsHidden","selectedSuggestion","lastToken","tokenStart","str","caretPosition","word","left","right","_textAtCursorMatchesT","value","selectionStart","slice","trim","indexOf","toLowerCase","token","onSuggestionsFetchRequested","onSuggestionsClearRequested","suggestions","disabled","which","isComposing","querySelector","parentElement","focus","Math","min","stopPropagation","onSuggestionSelected","defaultPrevented","suggestion","textarea","clipboardData","files","onPaste","i","inner","autosuggest_emoji","autosuggest_account_container","selected","onMouseDown","onSuggestionClick","placeholder","onKeyUp","react_textarea_autosize_esm_browser","inputRef","setTextarea","onBlur","aria-autocomplete","isEmpty","renderSuggestion","string","list","bool","add_poll","remove_poll","iconStyle","height","lineHeight","PollButton","unavailable","_","getState","removePoll","addPoll","upload","UploadButton","acceptContentTypes","onSelectFile","fileElement","click","resetFileKey","react_default","type","multiple","accept","toArray","join","handleChange","number","listOf","some","m","uploadCompose","TextIconButton","label","ariaControls","aria-controls","marked","unmarked","changeComposeSpoilerness","public_short","public_long","unlisted_short","unlisted_long","private_short","private_long","direct_short","direct_long","change_privacy","PrivacyDropdownMenu","mounted","element","items","index","findIndex","item","childNodes","firstChild","lastChild","focusedItem","optional_motion","defaultStyle","opacity","scaleX","scaleY","spring","damping","stiffness","objectSpread","transform","aria-selected","setFocusRef","components_icon","fixedWidth","meta","PrivacyDropdown","open","_ref2","isUserTouching","onModalClose","onModalOpen","actions","options","option","handleModalActionClick","handleClose","componentWillMount","valueOption","find","expanded","handleToggle","Overlay_default","privacy_dropdown_PrivacyDropdownMenu","isModalOpen","modalType","changeComposeVisibility","openModal","closeModal","SensitiveButton","visible","scale","compose-form__sensitive-button--visible","changeComposeSensitivity","DEFAULTS","getFrequentlyUsedEmojis","createSelector","ImmutableMap","emojiCounters","emojis","keySeq","sort","b","reverse","uniqueDefaults","filter","includes","concat","getCustomEmojis","aShort","bShort","changeSetting","useEmoji","option_placeholder","add_option","remove_option","poll_duration","minutes","hours","days","Option","onRemove","onToggleMultiple","isPollMultiple","checkbox","handleToggleMultiple","maxLength","handleOptionTitleChange","handleOptionRemove","PollForm","onAddOption","onChangeSettings","isMultiple","expiresIn","onChangeOption","onRemoveOption","poll_form_Option","handleAddOption","index_es","handleSelectDuration","addPollOption","removePollOption","changePollOption","changePollSettings","UploadProgress","progress","description","Upload","hovered","focused","dirtyDescription","keyCode","handleSubmit","handleInputBlur","onSubmit","onUndo","media","onOpenFocalPoint","onDescriptionChange","focusX","focusY","x","y","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","backgroundImage","backgroundPosition","handleUndoClick","handleFocalPointClick","onFocus","handleInputFocus","handleInputChange","undoUploadCompose","changeUploadCompose","submitCompose","UploadForm","mediaIds","upload_progress_container","upload_container","Warning","message","APPROX_HASHTAG_RE","needsLockWarning","me","hashtagWarning","test","directMessageWarning","warning_Warning","values","locked","spoiler_placeholder","publish","publishLoud","ComposeForm","autosuggestTextarea","isSubmitting","isChangingUpload","isUploading","anyMedia","fulltext","spoilerText","maxChars","onClearSuggestions","onFetchSuggestions","onChangeSpoilerText","data","position","needsSpace","componentDidUpdate","prevProps","selectionEnd","focusDate","preselectDate","setSelectionRange","spoiler","showSearch","disabledButton","publishText","privacy","warning_container","reply_indicator_container","handleChangeSpoilerText","setSpoilerText","autosuggest_textarea_AutosuggestTextarea","setAutosuggestTextarea","isMobile","window","innerWidth","emoji_picker_dropdown_container","handleEmojiPick","upload_form_container","poll_form_container","upload_button_container","poll_button_container","privacy_dropdown_container","sensitive_button_container","spoiler_button_container","character_counter_CharacterCounter","components_button","block","instanceOf","Date","is_submitting","changeCompose","clearComposeSuggestions","fetchComposeSuggestions","selectComposeSuggestion","checked","changeComposeSpoilerText","insertEmojiCompose","NavigationBar","SearchPopout","extraInformation","searchEnabled","Search","submitted","onClear","onShow","hasValue","handleKeyUp","handleFocus","handleBlur","handleClear","search_SearchPopout","changeSearch","clearSearch","submitSearch","Hashtag","hashtag","permalink","to","rawCount","count","shortNumberFormat","build","day","fill","dismissSuggestion","SearchResults","fetchSuggestions","accounts","statuses","hashtags","results","accountId","account_container","actionIcon","actionTitle","onActionClick","statusId","status_container","components_hashtag","start","home_timeline","notifications","public","community","preferences","logout","compose","Compose","ownProps","columns","multiColumn","isSearchPage","changeComposing","mountCompose","unmountCompose","header","Link","column","data-method","search_container","navigation_container","compose_form_container","visibility","search_results_container"],"mappings":"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","file":"features/compose.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport unicodeMapping from '../features/emoji/emoji_unicode_mapping_light';\n\nconst assetHost = process.env.CDN_HOST || '';\n\nexport default class AutosuggestEmoji extends React.PureComponent {\n\n  static propTypes = {\n    emoji: PropTypes.object.isRequired,\n  };\n\n  render () {\n    const { emoji } = this.props;\n    let url;\n\n    if (emoji.custom) {\n      url = emoji.imageUrl;\n    } else {\n      const mapping = unicodeMapping[emoji.native] || unicodeMapping[emoji.native.replace(/\\uFE0F$/, '')];\n\n      if (!mapping) {\n        return null;\n      }\n\n      url = `${assetHost}/emoji/${mapping.filename}.svg`;\n    }\n\n    return (\n      <div className='autosuggest-emoji'>\n        <img\n          className='emojione'\n          src={url}\n          alt={emoji.native || emoji.colons}\n        />\n\n        {emoji.colons}\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { EmojiPicker as EmojiPickerAsync } from '../../ui/util/async-components';\nimport Overlay from 'react-overlays/lib/Overlay';\nimport classNames from 'classnames';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport detectPassiveEvents from 'detect-passive-events';\nimport { buildCustomEmojis } from '../../emoji/emoji';\n\nconst messages = defineMessages({\n  emoji: { id: 'emoji_button.label', defaultMessage: 'Insert emoji' },\n  emoji_search: { id: 'emoji_button.search', defaultMessage: 'Search...' },\n  emoji_not_found: { id: 'emoji_button.not_found', defaultMessage: 'No emojos!! (╯°□°）╯︵ ┻━┻' },\n  custom: { id: 'emoji_button.custom', defaultMessage: 'Custom' },\n  recent: { id: 'emoji_button.recent', defaultMessage: 'Frequently used' },\n  search_results: { id: 'emoji_button.search_results', defaultMessage: 'Search results' },\n  people: { id: 'emoji_button.people', defaultMessage: 'People' },\n  nature: { id: 'emoji_button.nature', defaultMessage: 'Nature' },\n  food: { id: 'emoji_button.food', defaultMessage: 'Food & Drink' },\n  activity: { id: 'emoji_button.activity', defaultMessage: 'Activity' },\n  travel: { id: 'emoji_button.travel', defaultMessage: 'Travel & Places' },\n  objects: { id: 'emoji_button.objects', defaultMessage: 'Objects' },\n  symbols: { id: 'emoji_button.symbols', defaultMessage: 'Symbols' },\n  flags: { id: 'emoji_button.flags', defaultMessage: 'Flags' },\n});\n\nconst assetHost = process.env.CDN_HOST || '';\nlet EmojiPicker, Emoji; // load asynchronously\n\nconst backgroundImageFn = () => `${assetHost}/emoji/sheet_10.png`;\nconst listenerOptions = detectPassiveEvents.hasSupport ? { passive: true } : false;\n\nconst categoriesSort = [\n  'recent',\n  'custom',\n  'people',\n  'nature',\n  'foods',\n  'activity',\n  'places',\n  'objects',\n  'symbols',\n  'flags',\n];\n\nclass ModifierPickerMenu extends React.PureComponent {\n\n  static propTypes = {\n    active: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n  };\n\n  handleClick = e => {\n    this.props.onSelect(e.currentTarget.getAttribute('data-index') * 1);\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.active) {\n      this.attachListeners();\n    } else {\n      this.removeListeners();\n    }\n  }\n\n  componentWillUnmount () {\n    this.removeListeners();\n  }\n\n  handleDocumentClick = e => {\n    if (this.node && !this.node.contains(e.target)) {\n      this.props.onClose();\n    }\n  }\n\n  attachListeners () {\n    document.addEventListener('click', this.handleDocumentClick, false);\n    document.addEventListener('touchend', this.handleDocumentClick, listenerOptions);\n  }\n\n  removeListeners () {\n    document.removeEventListener('click', this.handleDocumentClick, false);\n    document.removeEventListener('touchend', this.handleDocumentClick, listenerOptions);\n  }\n\n  setRef = c => {\n    this.node = c;\n  }\n\n  render () {\n    const { active } = this.props;\n\n    return (\n      <div className='emoji-picker-dropdown__modifiers__menu' style={{ display: active ? 'block' : 'none' }} ref={this.setRef}>\n        <button onClick={this.handleClick} data-index={1}><Emoji emoji='fist' set='twitter' size={22} sheetSize={32} skin={1} backgroundImageFn={backgroundImageFn} /></button>\n        <button onClick={this.handleClick} data-index={2}><Emoji emoji='fist' set='twitter' size={22} sheetSize={32} skin={2} backgroundImageFn={backgroundImageFn} /></button>\n        <button onClick={this.handleClick} data-index={3}><Emoji emoji='fist' set='twitter' size={22} sheetSize={32} skin={3} backgroundImageFn={backgroundImageFn} /></button>\n        <button onClick={this.handleClick} data-index={4}><Emoji emoji='fist' set='twitter' size={22} sheetSize={32} skin={4} backgroundImageFn={backgroundImageFn} /></button>\n        <button onClick={this.handleClick} data-index={5}><Emoji emoji='fist' set='twitter' size={22} sheetSize={32} skin={5} backgroundImageFn={backgroundImageFn} /></button>\n        <button onClick={this.handleClick} data-index={6}><Emoji emoji='fist' set='twitter' size={22} sheetSize={32} skin={6} backgroundImageFn={backgroundImageFn} /></button>\n      </div>\n    );\n  }\n\n}\n\nclass ModifierPicker extends React.PureComponent {\n\n  static propTypes = {\n    active: PropTypes.bool,\n    modifier: PropTypes.number,\n    onChange: PropTypes.func,\n    onClose: PropTypes.func,\n    onOpen: PropTypes.func,\n  };\n\n  handleClick = () => {\n    if (this.props.active) {\n      this.props.onClose();\n    } else {\n      this.props.onOpen();\n    }\n  }\n\n  handleSelect = modifier => {\n    this.props.onChange(modifier);\n    this.props.onClose();\n  }\n\n  render () {\n    const { active, modifier } = this.props;\n\n    return (\n      <div className='emoji-picker-dropdown__modifiers'>\n        <Emoji emoji='fist' set='twitter' size={22} sheetSize={32} skin={modifier} onClick={this.handleClick} backgroundImageFn={backgroundImageFn} />\n        <ModifierPickerMenu active={active} onSelect={this.handleSelect} onClose={this.props.onClose} />\n      </div>\n    );\n  }\n\n}\n\n@injectIntl\nclass EmojiPickerMenu extends React.PureComponent {\n\n  static propTypes = {\n    custom_emojis: ImmutablePropTypes.list,\n    frequentlyUsedEmojis: PropTypes.arrayOf(PropTypes.string),\n    loading: PropTypes.bool,\n    onClose: PropTypes.func.isRequired,\n    onPick: PropTypes.func.isRequired,\n    style: PropTypes.object,\n    placement: PropTypes.string,\n    arrowOffsetLeft: PropTypes.string,\n    arrowOffsetTop: PropTypes.string,\n    intl: PropTypes.object.isRequired,\n    skinTone: PropTypes.number.isRequired,\n    onSkinTone: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    style: {},\n    loading: true,\n    frequentlyUsedEmojis: [],\n  };\n\n  state = {\n    modifierOpen: false,\n    placement: null,\n  };\n\n  handleDocumentClick = e => {\n    if (this.node && !this.node.contains(e.target)) {\n      this.props.onClose();\n    }\n  }\n\n  componentDidMount () {\n    document.addEventListener('click', this.handleDocumentClick, false);\n    document.addEventListener('touchend', this.handleDocumentClick, listenerOptions);\n  }\n\n  componentWillUnmount () {\n    document.removeEventListener('click', this.handleDocumentClick, false);\n    document.removeEventListener('touchend', this.handleDocumentClick, listenerOptions);\n  }\n\n  setRef = c => {\n    this.node = c;\n  }\n\n  getI18n = () => {\n    const { intl } = this.props;\n\n    return {\n      search: intl.formatMessage(messages.emoji_search),\n      notfound: intl.formatMessage(messages.emoji_not_found),\n      categories: {\n        search: intl.formatMessage(messages.search_results),\n        recent: intl.formatMessage(messages.recent),\n        people: intl.formatMessage(messages.people),\n        nature: intl.formatMessage(messages.nature),\n        foods: intl.formatMessage(messages.food),\n        activity: intl.formatMessage(messages.activity),\n        places: intl.formatMessage(messages.travel),\n        objects: intl.formatMessage(messages.objects),\n        symbols: intl.formatMessage(messages.symbols),\n        flags: intl.formatMessage(messages.flags),\n        custom: intl.formatMessage(messages.custom),\n      },\n    };\n  }\n\n  handleClick = emoji => {\n    if (!emoji.native) {\n      emoji.native = emoji.colons;\n    }\n\n    this.props.onClose();\n    this.props.onPick(emoji);\n  }\n\n  handleModifierOpen = () => {\n    this.setState({ modifierOpen: true });\n  }\n\n  handleModifierClose = () => {\n    this.setState({ modifierOpen: false });\n  }\n\n  handleModifierChange = modifier => {\n    this.props.onSkinTone(modifier);\n  }\n\n  render () {\n    const { loading, style, intl, custom_emojis, skinTone, frequentlyUsedEmojis } = this.props;\n\n    if (loading) {\n      return <div style={{ width: 299 }} />;\n    }\n\n    const title = intl.formatMessage(messages.emoji);\n    const { modifierOpen } = this.state;\n\n    return (\n      <div className={classNames('emoji-picker-dropdown__menu', { selecting: modifierOpen })} style={style} ref={this.setRef}>\n        <EmojiPicker\n          perLine={8}\n          emojiSize={22}\n          sheetSize={32}\n          custom={buildCustomEmojis(custom_emojis)}\n          color=''\n          emoji=''\n          set='twitter'\n          title={title}\n          i18n={this.getI18n()}\n          onClick={this.handleClick}\n          include={categoriesSort}\n          recent={frequentlyUsedEmojis}\n          skin={skinTone}\n          showPreview={false}\n          backgroundImageFn={backgroundImageFn}\n          autoFocus\n          emojiTooltip\n        />\n\n        <ModifierPicker\n          active={modifierOpen}\n          modifier={skinTone}\n          onOpen={this.handleModifierOpen}\n          onClose={this.handleModifierClose}\n          onChange={this.handleModifierChange}\n        />\n      </div>\n    );\n  }\n\n}\n\nexport default @injectIntl\nclass EmojiPickerDropdown extends React.PureComponent {\n\n  static propTypes = {\n    custom_emojis: ImmutablePropTypes.list,\n    frequentlyUsedEmojis: PropTypes.arrayOf(PropTypes.string),\n    intl: PropTypes.object.isRequired,\n    onPickEmoji: PropTypes.func.isRequired,\n    onSkinTone: PropTypes.func.isRequired,\n    skinTone: PropTypes.number.isRequired,\n  };\n\n  state = {\n    active: false,\n    loading: false,\n  };\n\n  setRef = (c) => {\n    this.dropdown = c;\n  }\n\n  onShowDropdown = ({ target }) => {\n    this.setState({ active: true });\n\n    if (!EmojiPicker) {\n      this.setState({ loading: true });\n\n      EmojiPickerAsync().then(EmojiMart => {\n        EmojiPicker = EmojiMart.Picker;\n        Emoji       = EmojiMart.Emoji;\n\n        this.setState({ loading: false });\n      }).catch(() => {\n        this.setState({ loading: false });\n      });\n    }\n\n    const { top } = target.getBoundingClientRect();\n    this.setState({ placement: top * 2 < innerHeight ? 'bottom' : 'top' });\n  }\n\n  onHideDropdown = () => {\n    this.setState({ active: false });\n  }\n\n  onToggle = (e) => {\n    if (!this.state.loading && (!e.key || e.key === 'Enter')) {\n      if (this.state.active) {\n        this.onHideDropdown();\n      } else {\n        this.onShowDropdown(e);\n      }\n    }\n  }\n\n  handleKeyDown = e => {\n    if (e.key === 'Escape') {\n      this.onHideDropdown();\n    }\n  }\n\n  setTargetRef = c => {\n    this.target = c;\n  }\n\n  findTarget = () => {\n    return this.target;\n  }\n\n  render () {\n    const { intl, onPickEmoji, onSkinTone, skinTone, frequentlyUsedEmojis } = this.props;\n    const title = intl.formatMessage(messages.emoji);\n    const { active, loading, placement } = this.state;\n\n    return (\n      <div className='emoji-picker-dropdown' onKeyDown={this.handleKeyDown}>\n        <div ref={this.setTargetRef} className='emoji-button' title={title} aria-label={title} aria-expanded={active} role='button' onClick={this.onToggle} onKeyDown={this.onToggle} tabIndex={0}>\n          <img\n            className={classNames('emojione', { 'pulse-loading': active && loading })}\n            alt='🙂'\n            src={`${assetHost}/emoji/1f602.svg`}\n          />\n        </div>\n\n        <Overlay show={active} placement={placement} target={this.findTarget}>\n          <EmojiPickerMenu\n            custom_emojis={this.props.custom_emojis}\n            loading={loading}\n            onClose={this.onHideDropdown}\n            onPick={onPickEmoji}\n            onSkinTone={onSkinTone}\n            skinTone={skinTone}\n            frequentlyUsedEmojis={frequentlyUsedEmojis}\n          />\n        </Overlay>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { length } from 'stringz';\n\nexport default class CharacterCounter extends React.PureComponent {\n\n  static propTypes = {\n    text: PropTypes.string.isRequired,\n    max: PropTypes.number.isRequired,\n  };\n\n  checkRemainingText (diff) {\n    if (diff < 0) {\n      return <span className='character-counter character-counter--over'>{diff}</span>;\n    }\n\n    return <span className='character-counter'>{diff}</span>;\n  }\n\n  render () {\n    const diff = this.props.max - length(this.props.text);\n    return this.checkRemainingText(diff);\n  }\n\n}\n","import React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport Avatar from '../../../components/avatar';\nimport IconButton from '../../../components/icon_button';\nimport DisplayName from '../../../components/display_name';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { isRtl } from '../../../rtl';\n\nconst messages = defineMessages({\n  cancel: { id: 'reply_indicator.cancel', defaultMessage: 'Cancel' },\n});\n\nexport default @injectIntl\nclass ReplyIndicator extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    status: ImmutablePropTypes.map,\n    onCancel: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleClick = () => {\n    this.props.onCancel();\n  }\n\n  handleAccountClick = (e) => {\n    if (e.button === 0 && !(e.ctrlKey || e.metaKey)) {\n      e.preventDefault();\n      this.context.router.history.push(`/accounts/${this.props.status.getIn(['account', 'id'])}`);\n    }\n  }\n\n  render () {\n    const { status, intl } = this.props;\n\n    if (!status) {\n      return null;\n    }\n\n    const content = { __html: status.get('contentHtml') };\n    const style   = {\n      direction: isRtl(status.get('search_index')) ? 'rtl' : 'ltr',\n    };\n\n    return (\n      <div className='reply-indicator'>\n        <div className='reply-indicator__header'>\n          <div className='reply-indicator__cancel'><IconButton title={intl.formatMessage(messages.cancel)} icon='times' onClick={this.handleClick} inverted /></div>\n\n          <a href={status.getIn(['account', 'url'])} onClick={this.handleAccountClick} className='reply-indicator__display-name'>\n            <div className='reply-indicator__display-avatar'><Avatar account={status.get('account')} size={24} /></div>\n            <DisplayName account={status.get('account')} />\n          </a>\n        </div>\n\n        <div className='reply-indicator__content' style={style} dangerouslySetInnerHTML={content} />\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport { cancelReplyCompose } from '../../../actions/compose';\nimport { makeGetStatus } from '../../../selectors';\nimport ReplyIndicator from '../components/reply_indicator';\n\nconst makeMapStateToProps = () => {\n  const getStatus = makeGetStatus();\n\n  const mapStateToProps = state => ({\n    status: getStatus(state, { id: state.getIn(['compose', 'in_reply_to']) }),\n  });\n\n  return mapStateToProps;\n};\n\nconst mapDispatchToProps = dispatch => ({\n\n  onCancel () {\n    dispatch(cancelReplyCompose());\n  },\n\n});\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(ReplyIndicator);\n","import React from 'react';\nimport Avatar from '../../../components/avatar';\nimport DisplayName from '../../../components/display_name';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nexport default class AutosuggestAccount extends ImmutablePureComponent {\n\n  static propTypes = {\n    account: ImmutablePropTypes.map.isRequired,\n  };\n\n  render () {\n    const { account } = this.props;\n\n    return (\n      <div className='autosuggest-account' title={account.get('acct')}>\n        <div className='autosuggest-account-icon'><Avatar account={account} size={18} /></div>\n        <DisplayName account={account} />\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport AutosuggestAccount from '../components/autosuggest_account';\nimport { makeGetAccount } from '../../../selectors';\n\nconst makeMapStateToProps = () => {\n  const getAccount = makeGetAccount();\n\n  const mapStateToProps = (state, { id }) => ({\n    account: getAccount(state, id),\n  });\n\n  return mapStateToProps;\n};\n\nexport default connect(makeMapStateToProps)(AutosuggestAccount);\n","import React from 'react';\nimport AutosuggestAccountContainer from '../features/compose/containers/autosuggest_account_container';\nimport AutosuggestEmoji from './autosuggest_emoji';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport { isRtl } from '../rtl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport Textarea from 'react-textarea-autosize';\nimport classNames from 'classnames';\n\nconst textAtCursorMatchesToken = (str, caretPosition) => {\n  let word;\n\n  let left  = str.slice(0, caretPosition).search(/\\S+$/);\n  let right = str.slice(caretPosition).search(/\\s/);\n\n  if (right < 0) {\n    word = str.slice(left);\n  } else {\n    word = str.slice(left, right + caretPosition);\n  }\n\n  if (!word || word.trim().length < 3 || ['@', ':', '#'].indexOf(word[0]) === -1) {\n    return [null, null];\n  }\n\n  word = word.trim().toLowerCase();\n\n  if (word.length > 0) {\n    return [left + 1, word];\n  } else {\n    return [null, null];\n  }\n};\n\nexport default class AutosuggestTextarea extends ImmutablePureComponent {\n\n  static propTypes = {\n    value: PropTypes.string,\n    suggestions: ImmutablePropTypes.list,\n    disabled: PropTypes.bool,\n    placeholder: PropTypes.string,\n    onSuggestionSelected: PropTypes.func.isRequired,\n    onSuggestionsClearRequested: PropTypes.func.isRequired,\n    onSuggestionsFetchRequested: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onKeyUp: PropTypes.func,\n    onKeyDown: PropTypes.func,\n    onPaste: PropTypes.func.isRequired,\n    autoFocus: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    autoFocus: true,\n  };\n\n  state = {\n    suggestionsHidden: false,\n    selectedSuggestion: 0,\n    lastToken: null,\n    tokenStart: 0,\n  };\n\n  onChange = (e) => {\n    const [ tokenStart, token ] = textAtCursorMatchesToken(e.target.value, e.target.selectionStart);\n\n    if (token !== null && this.state.lastToken !== token) {\n      this.setState({ lastToken: token, selectedSuggestion: 0, tokenStart });\n      this.props.onSuggestionsFetchRequested(token);\n    } else if (token === null) {\n      this.setState({ lastToken: null });\n      this.props.onSuggestionsClearRequested();\n    }\n\n    this.props.onChange(e);\n  }\n\n  onKeyDown = (e) => {\n    const { suggestions, disabled } = this.props;\n    const { selectedSuggestion, suggestionsHidden } = this.state;\n\n    if (disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (e.which === 229 || e.isComposing) {\n      // Ignore key events during text composition\n      // e.key may be a name of the physical key even in this case (e.x. Safari / Chrome on Mac)\n      return;\n    }\n\n    switch(e.key) {\n    case 'Escape':\n      if (suggestions.size === 0 || suggestionsHidden) {\n        document.querySelector('.ui').parentElement.focus();\n      } else {\n        e.preventDefault();\n        this.setState({ suggestionsHidden: true });\n      }\n\n      break;\n    case 'ArrowDown':\n      if (suggestions.size > 0 && !suggestionsHidden) {\n        e.preventDefault();\n        this.setState({ selectedSuggestion: Math.min(selectedSuggestion + 1, suggestions.size - 1) });\n      }\n\n      break;\n    case 'ArrowUp':\n      if (suggestions.size > 0 && !suggestionsHidden) {\n        e.preventDefault();\n        this.setState({ selectedSuggestion: Math.max(selectedSuggestion - 1, 0) });\n      }\n\n      break;\n    case 'Enter':\n    case 'Tab':\n      // Select suggestion\n      if (this.state.lastToken !== null && suggestions.size > 0 && !suggestionsHidden) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.props.onSuggestionSelected(this.state.tokenStart, this.state.lastToken, suggestions.get(selectedSuggestion));\n      }\n\n      break;\n    }\n\n    if (e.defaultPrevented || !this.props.onKeyDown) {\n      return;\n    }\n\n    this.props.onKeyDown(e);\n  }\n\n  onBlur = () => {\n    this.setState({ suggestionsHidden: true });\n  }\n\n  onSuggestionClick = (e) => {\n    const suggestion = this.props.suggestions.get(e.currentTarget.getAttribute('data-index'));\n    e.preventDefault();\n    this.props.onSuggestionSelected(this.state.tokenStart, this.state.lastToken, suggestion);\n    this.textarea.focus();\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.suggestions !== this.props.suggestions && nextProps.suggestions.size > 0 && this.state.suggestionsHidden) {\n      this.setState({ suggestionsHidden: false });\n    }\n  }\n\n  setTextarea = (c) => {\n    this.textarea = c;\n  }\n\n  onPaste = (e) => {\n    if (e.clipboardData && e.clipboardData.files.length === 1) {\n      this.props.onPaste(e.clipboardData.files);\n      e.preventDefault();\n    }\n  }\n\n  renderSuggestion = (suggestion, i) => {\n    const { selectedSuggestion } = this.state;\n    let inner, key;\n\n    if (typeof suggestion === 'object') {\n      inner = <AutosuggestEmoji emoji={suggestion} />;\n      key   = suggestion.id;\n    } else if (suggestion[0] === '#') {\n      inner = suggestion;\n      key   = suggestion;\n    } else {\n      inner = <AutosuggestAccountContainer id={suggestion} />;\n      key   = suggestion;\n    }\n\n    return (\n      <div role='button' tabIndex='0' key={key} data-index={i} className={classNames('autosuggest-textarea__suggestions__item', { selected: i === selectedSuggestion })} onMouseDown={this.onSuggestionClick}>\n        {inner}\n      </div>\n    );\n  }\n\n  render () {\n    const { value, suggestions, disabled, placeholder, onKeyUp, autoFocus } = this.props;\n    const { suggestionsHidden } = this.state;\n    const style = { direction: 'ltr' };\n\n    if (isRtl(value)) {\n      style.direction = 'rtl';\n    }\n\n    return (\n      <div className='autosuggest-textarea'>\n        <label>\n          <span style={{ display: 'none' }}>{placeholder}</span>\n\n          <Textarea\n            inputRef={this.setTextarea}\n            className='autosuggest-textarea__textarea'\n            disabled={disabled}\n            placeholder={placeholder}\n            autoFocus={autoFocus}\n            value={value}\n            onChange={this.onChange}\n            onKeyDown={this.onKeyDown}\n            onKeyUp={onKeyUp}\n            onBlur={this.onBlur}\n            onPaste={this.onPaste}\n            style={style}\n            aria-autocomplete='list'\n          />\n        </label>\n\n        <div className={`autosuggest-textarea__suggestions ${suggestionsHidden || suggestions.isEmpty() ? '' : 'autosuggest-textarea__suggestions--visible'}`}>\n          {suggestions.map(this.renderSuggestion)}\n        </div>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport IconButton from '../../../components/icon_button';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  add_poll: { id: 'poll_button.add_poll', defaultMessage: 'Add a poll' },\n  remove_poll: { id: 'poll_button.remove_poll', defaultMessage: 'Remove poll' },\n});\n\nconst iconStyle = {\n  height: null,\n  lineHeight: '27px',\n};\n\nexport default\n@injectIntl\nclass PollButton extends React.PureComponent {\n\n  static propTypes = {\n    disabled: PropTypes.bool,\n    unavailable: PropTypes.bool,\n    active: PropTypes.bool,\n    onClick: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleClick = () => {\n    this.props.onClick();\n  }\n\n  render () {\n    const { intl, active, unavailable, disabled } = this.props;\n\n    if (unavailable) {\n      return null;\n    }\n\n    return (\n      <div className='compose-form__poll-button'>\n        <IconButton\n          icon='tasks'\n          title={intl.formatMessage(active ? messages.remove_poll : messages.add_poll)}\n          disabled={disabled}\n          onClick={this.handleClick}\n          className={`compose-form__poll-button-icon ${active ? 'active' : ''}`}\n          size={18}\n          inverted\n          style={iconStyle}\n        />\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport PollButton from '../components/poll_button';\nimport { addPoll, removePoll } from '../../../actions/compose';\n\nconst mapStateToProps = state => ({\n  unavailable: state.getIn(['compose', 'is_uploading']) || (state.getIn(['compose', 'media_attachments']).size > 0),\n  active: state.getIn(['compose', 'poll']) !== null,\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n  onClick () {\n    dispatch((_, getState) => {\n      if (getState().getIn(['compose', 'poll'])) {\n        dispatch(removePoll());\n      } else {\n        dispatch(addPoll());\n      }\n    });\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PollButton);\n","import React from 'react';\nimport IconButton from '../../../components/icon_button';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\n\nconst messages = defineMessages({\n  upload: { id: 'upload_button.label', defaultMessage: 'Add media (JPEG, PNG, GIF, WebM, MP4, MOV)' },\n});\n\nconst makeMapStateToProps = () => {\n  const mapStateToProps = state => ({\n    acceptContentTypes: state.getIn(['media_attachments', 'accept_content_types']),\n  });\n\n  return mapStateToProps;\n};\n\nconst iconStyle = {\n  height: null,\n  lineHeight: '27px',\n};\n\nexport default @connect(makeMapStateToProps)\n@injectIntl\nclass UploadButton extends ImmutablePureComponent {\n\n  static propTypes = {\n    disabled: PropTypes.bool,\n    unavailable: PropTypes.bool,\n    onSelectFile: PropTypes.func.isRequired,\n    style: PropTypes.object,\n    resetFileKey: PropTypes.number,\n    acceptContentTypes: ImmutablePropTypes.listOf(PropTypes.string).isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleChange = (e) => {\n    if (e.target.files.length > 0) {\n      this.props.onSelectFile(e.target.files);\n    }\n  }\n\n  handleClick = () => {\n    this.fileElement.click();\n  }\n\n  setRef = (c) => {\n    this.fileElement = c;\n  }\n\n  render () {\n    const { intl, resetFileKey, unavailable, disabled, acceptContentTypes } = this.props;\n\n    if (unavailable) {\n      return null;\n    }\n\n    return (\n      <div className='compose-form__upload-button'>\n        <IconButton icon='camera' title={intl.formatMessage(messages.upload)} disabled={disabled} onClick={this.handleClick} className='compose-form__upload-button-icon' size={18} inverted style={iconStyle} />\n        <label>\n          <span style={{ display: 'none' }}>{intl.formatMessage(messages.upload)}</span>\n          <input\n            key={resetFileKey}\n            ref={this.setRef}\n            type='file'\n            multiple\n            accept={acceptContentTypes.toArray().join(',')}\n            onChange={this.handleChange}\n            disabled={disabled}\n            style={{ display: 'none' }}\n          />\n        </label>\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport UploadButton from '../components/upload_button';\nimport { uploadCompose } from '../../../actions/compose';\n\nconst mapStateToProps = state => ({\n  disabled: state.getIn(['compose', 'is_uploading']) || (state.getIn(['compose', 'media_attachments']).size > 3 || state.getIn(['compose', 'media_attachments']).some(m => m.get('type') === 'video')),\n  unavailable: state.getIn(['compose', 'poll']) !== null,\n  resetFileKey: state.getIn(['compose', 'resetFileKey']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n  onSelectFile (files) {\n    dispatch(uploadCompose(files));\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class TextIconButton extends React.PureComponent {\n\n  static propTypes = {\n    label: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    active: PropTypes.bool,\n    onClick: PropTypes.func.isRequired,\n    ariaControls: PropTypes.string,\n  };\n\n  handleClick = (e) => {\n    e.preventDefault();\n    this.props.onClick();\n  }\n\n  render () {\n    const { label, title, active, ariaControls } = this.props;\n\n    return (\n      <button title={title} aria-label={title} className={`text-icon-button ${active ? 'active' : ''}`} aria-expanded={active} onClick={this.handleClick} aria-controls={ariaControls}>\n        {label}\n      </button>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport TextIconButton from '../components/text_icon_button';\nimport { changeComposeSpoilerness } from '../../../actions/compose';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n  marked: { id: 'compose_form.spoiler.marked', defaultMessage: 'Text is hidden behind warning' },\n  unmarked: { id: 'compose_form.spoiler.unmarked', defaultMessage: 'Text is not hidden' },\n});\n\nconst mapStateToProps = (state, { intl }) => ({\n  label: 'CW',\n  title: intl.formatMessage(state.getIn(['compose', 'spoiler']) ? messages.marked : messages.unmarked),\n  active: state.getIn(['compose', 'spoiler']),\n  ariaControls: 'cw-spoiler-input',\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n  onClick () {\n    dispatch(changeComposeSpoilerness());\n  },\n\n});\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(TextIconButton));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, defineMessages } from 'react-intl';\nimport IconButton from '../../../components/icon_button';\nimport Overlay from 'react-overlays/lib/Overlay';\nimport Motion from '../../ui/util/optional_motion';\nimport spring from 'react-motion/lib/spring';\nimport detectPassiveEvents from 'detect-passive-events';\nimport classNames from 'classnames';\nimport Icon from 'mastodon/components/icon';\n\nconst messages = defineMessages({\n  public_short: { id: 'privacy.public.short', defaultMessage: 'Public' },\n  public_long: { id: 'privacy.public.long', defaultMessage: 'Post to public timelines' },\n  unlisted_short: { id: 'privacy.unlisted.short', defaultMessage: 'Unlisted' },\n  unlisted_long: { id: 'privacy.unlisted.long', defaultMessage: 'Do not show in public timelines' },\n  private_short: { id: 'privacy.private.short', defaultMessage: 'Followers-only' },\n  private_long: { id: 'privacy.private.long', defaultMessage: 'Post to followers only' },\n  direct_short: { id: 'privacy.direct.short', defaultMessage: 'Direct' },\n  direct_long: { id: 'privacy.direct.long', defaultMessage: 'Post to mentioned users only' },\n  change_privacy: { id: 'privacy.change', defaultMessage: 'Adjust status privacy' },\n});\n\nconst listenerOptions = detectPassiveEvents.hasSupport ? { passive: true } : false;\n\nclass PrivacyDropdownMenu extends React.PureComponent {\n\n  static propTypes = {\n    style: PropTypes.object,\n    items: PropTypes.array.isRequired,\n    value: PropTypes.string.isRequired,\n    placement: PropTypes.string.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n  };\n\n  state = {\n    mounted: false,\n  };\n\n  handleDocumentClick = e => {\n    if (this.node && !this.node.contains(e.target)) {\n      this.props.onClose();\n    }\n  }\n\n  handleKeyDown = e => {\n    const { items } = this.props;\n    const value = e.currentTarget.getAttribute('data-index');\n    const index = items.findIndex(item => {\n      return (item.value === value);\n    });\n    let element;\n\n    switch(e.key) {\n    case 'Escape':\n      this.props.onClose();\n      break;\n    case 'Enter':\n      this.handleClick(e);\n      break;\n    case 'ArrowDown':\n      element = this.node.childNodes[index + 1];\n      if (element) {\n        element.focus();\n        this.props.onChange(element.getAttribute('data-index'));\n      }\n      break;\n    case 'ArrowUp':\n      element = this.node.childNodes[index - 1];\n      if (element) {\n        element.focus();\n        this.props.onChange(element.getAttribute('data-index'));\n      }\n      break;\n    case 'Home':\n      element = this.node.firstChild;\n      if (element) {\n        element.focus();\n        this.props.onChange(element.getAttribute('data-index'));\n      }\n      break;\n    case 'End':\n      element = this.node.lastChild;\n      if (element) {\n        element.focus();\n        this.props.onChange(element.getAttribute('data-index'));\n      }\n      break;\n    }\n  }\n\n  handleClick = e => {\n    const value = e.currentTarget.getAttribute('data-index');\n\n    e.preventDefault();\n\n    this.props.onClose();\n    this.props.onChange(value);\n  }\n\n  componentDidMount () {\n    document.addEventListener('click', this.handleDocumentClick, false);\n    document.addEventListener('touchend', this.handleDocumentClick, listenerOptions);\n    if (this.focusedItem) this.focusedItem.focus();\n    this.setState({ mounted: true });\n  }\n\n  componentWillUnmount () {\n    document.removeEventListener('click', this.handleDocumentClick, false);\n    document.removeEventListener('touchend', this.handleDocumentClick, listenerOptions);\n  }\n\n  setRef = c => {\n    this.node = c;\n  }\n\n  setFocusRef = c => {\n    this.focusedItem = c;\n  }\n\n  render () {\n    const { mounted } = this.state;\n    const { style, items, placement, value } = this.props;\n\n    return (\n      <Motion defaultStyle={{ opacity: 0, scaleX: 0.85, scaleY: 0.75 }} style={{ opacity: spring(1, { damping: 35, stiffness: 400 }), scaleX: spring(1, { damping: 35, stiffness: 400 }), scaleY: spring(1, { damping: 35, stiffness: 400 }) }}>\n        {({ opacity, scaleX, scaleY }) => (\n          // It should not be transformed when mounting because the resulting\n          // size will be used to determine the coordinate of the menu by\n          // react-overlays\n          <div className={`privacy-dropdown__dropdown ${placement}`} style={{ ...style, opacity: opacity, transform: mounted ? `scale(${scaleX}, ${scaleY})` : null }} role='listbox' ref={this.setRef}>\n            {items.map(item => (\n              <div role='option' tabIndex='0' key={item.value} data-index={item.value} onKeyDown={this.handleKeyDown} onClick={this.handleClick} className={classNames('privacy-dropdown__option', { active: item.value === value })} aria-selected={item.value === value} ref={item.value === value ? this.setFocusRef : null}>\n                <div className='privacy-dropdown__option__icon'>\n                  <Icon id={item.icon} fixedWidth />\n                </div>\n\n                <div className='privacy-dropdown__option__content'>\n                  <strong>{item.text}</strong>\n                  {item.meta}\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </Motion>\n    );\n  }\n\n}\n\nexport default @injectIntl\nclass PrivacyDropdown extends React.PureComponent {\n\n  static propTypes = {\n    isUserTouching: PropTypes.func,\n    isModalOpen: PropTypes.bool.isRequired,\n    onModalOpen: PropTypes.func,\n    onModalClose: PropTypes.func,\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  state = {\n    open: false,\n    placement: 'bottom',\n  };\n\n  handleToggle = ({ target }) => {\n    if (this.props.isUserTouching()) {\n      if (this.state.open) {\n        this.props.onModalClose();\n      } else {\n        this.props.onModalOpen({\n          actions: this.options.map(option => ({ ...option, active: option.value === this.props.value })),\n          onClick: this.handleModalActionClick,\n        });\n      }\n    } else {\n      const { top } = target.getBoundingClientRect();\n      this.setState({ placement: top * 2 < innerHeight ? 'bottom' : 'top' });\n      this.setState({ open: !this.state.open });\n    }\n  }\n\n  handleModalActionClick = (e) => {\n    e.preventDefault();\n\n    const { value } = this.options[e.currentTarget.getAttribute('data-index')];\n\n    this.props.onModalClose();\n    this.props.onChange(value);\n  }\n\n  handleKeyDown = e => {\n    switch(e.key) {\n    case 'Escape':\n      this.handleClose();\n      break;\n    }\n  }\n\n  handleClose = () => {\n    this.setState({ open: false });\n  }\n\n  handleChange = value => {\n    this.props.onChange(value);\n  }\n\n  componentWillMount () {\n    const { intl: { formatMessage } } = this.props;\n\n    this.options = [\n      { icon: 'globe', value: 'public', text: formatMessage(messages.public_short), meta: formatMessage(messages.public_long) },\n      { icon: 'unlock', value: 'unlisted', text: formatMessage(messages.unlisted_short), meta: formatMessage(messages.unlisted_long) },\n      { icon: 'lock', value: 'private', text: formatMessage(messages.private_short), meta: formatMessage(messages.private_long) },\n      { icon: 'envelope', value: 'direct', text: formatMessage(messages.direct_short), meta: formatMessage(messages.direct_long) },\n    ];\n  }\n\n  render () {\n    const { value, intl } = this.props;\n    const { open, placement } = this.state;\n\n    const valueOption = this.options.find(item => item.value === value);\n\n    return (\n      <div className={classNames('privacy-dropdown', placement, { active: open })} onKeyDown={this.handleKeyDown}>\n        <div className={classNames('privacy-dropdown__value', { active: this.options.indexOf(valueOption) === 0 })}>\n          <IconButton\n            className='privacy-dropdown__value-icon'\n            icon={valueOption.icon}\n            title={intl.formatMessage(messages.change_privacy)}\n            size={18}\n            expanded={open}\n            active={open}\n            inverted\n            onClick={this.handleToggle}\n            style={{ height: null, lineHeight: '27px' }}\n          />\n        </div>\n\n        <Overlay show={open} placement={placement} target={this}>\n          <PrivacyDropdownMenu\n            items={this.options}\n            value={value}\n            onClose={this.handleClose}\n            onChange={this.handleChange}\n            placement={placement}\n          />\n        </Overlay>\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport PrivacyDropdown from '../components/privacy_dropdown';\nimport { changeComposeVisibility } from '../../../actions/compose';\nimport { openModal, closeModal } from '../../../actions/modal';\nimport { isUserTouching } from '../../../is_mobile';\n\nconst mapStateToProps = state => ({\n  isModalOpen: state.get('modal').modalType === 'ACTIONS',\n  value: state.getIn(['compose', 'privacy']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n  onChange (value) {\n    dispatch(changeComposeVisibility(value));\n  },\n\n  isUserTouching,\n  onModalOpen: props => dispatch(openModal('ACTIONS', props)),\n  onModalClose: () => dispatch(closeModal()),\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrivacyDropdown);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport IconButton from '../../../components/icon_button';\nimport { changeComposeSensitivity } from '../../../actions/compose';\nimport Motion from '../../ui/util/optional_motion';\nimport spring from 'react-motion/lib/spring';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n  marked: { id: 'compose_form.sensitive.marked', defaultMessage: 'Media is marked as sensitive' },\n  unmarked: { id: 'compose_form.sensitive.unmarked', defaultMessage: 'Media is not marked as sensitive' },\n});\n\nconst mapStateToProps = state => ({\n  visible: state.getIn(['compose', 'media_attachments']).size > 0,\n  active: state.getIn(['compose', 'sensitive']),\n  disabled: state.getIn(['compose', 'spoiler']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n  onClick () {\n    dispatch(changeComposeSensitivity());\n  },\n\n});\n\nclass SensitiveButton extends React.PureComponent {\n\n  static propTypes = {\n    visible: PropTypes.bool,\n    active: PropTypes.bool,\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  render () {\n    const { visible, active, disabled, onClick, intl } = this.props;\n\n    return (\n      <Motion defaultStyle={{ scale: 0.87 }} style={{ scale: spring(visible ? 1 : 0.87, { stiffness: 200, damping: 3 }) }}>\n        {({ scale }) => {\n          const icon = active ? 'eye-slash' : 'eye';\n          const className = classNames('compose-form__sensitive-button', {\n            'compose-form__sensitive-button--visible': visible,\n          });\n          return (\n            <div className={className} style={{ transform: `scale(${scale})` }}>\n              <IconButton\n                className='compose-form__sensitive-button__icon'\n                title={intl.formatMessage(active ? messages.marked : messages.unmarked)}\n                icon={icon}\n                onClick={onClick}\n                size={18}\n                active={active}\n                disabled={disabled}\n                style={{ lineHeight: null, height: null }}\n                inverted\n              />\n            </div>\n          );\n        }}\n      </Motion>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(SensitiveButton));\n","import { connect } from 'react-redux';\nimport EmojiPickerDropdown from '../components/emoji_picker_dropdown';\nimport { changeSetting } from '../../../actions/settings';\nimport { createSelector } from 'reselect';\nimport { Map as ImmutableMap } from 'immutable';\nimport { useEmoji } from '../../../actions/emojis';\n\nconst perLine = 8;\nconst lines   = 2;\n\nconst DEFAULTS = [\n  '+1',\n  'grinning',\n  'kissing_heart',\n  'heart_eyes',\n  'laughing',\n  'stuck_out_tongue_winking_eye',\n  'sweat_smile',\n  'joy',\n  'yum',\n  'disappointed',\n  'thinking_face',\n  'weary',\n  'sob',\n  'sunglasses',\n  'heart',\n  'ok_hand',\n];\n\nconst getFrequentlyUsedEmojis = createSelector([\n  state => state.getIn(['settings', 'frequentlyUsedEmojis'], ImmutableMap()),\n], emojiCounters => {\n  let emojis = emojiCounters\n    .keySeq()\n    .sort((a, b) => emojiCounters.get(a) - emojiCounters.get(b))\n    .reverse()\n    .slice(0, perLine * lines)\n    .toArray();\n\n  if (emojis.length < DEFAULTS.length) {\n    let uniqueDefaults = DEFAULTS.filter(emoji => !emojis.includes(emoji));\n    emojis = emojis.concat(uniqueDefaults.slice(0, DEFAULTS.length - emojis.length));\n  }\n\n  return emojis;\n});\n\nconst getCustomEmojis = createSelector([\n  state => state.get('custom_emojis'),\n], emojis => emojis.filter(e => e.get('visible_in_picker')).sort((a, b) => {\n  const aShort = a.get('shortcode').toLowerCase();\n  const bShort = b.get('shortcode').toLowerCase();\n\n  if (aShort < bShort) {\n    return -1;\n  } else if (aShort > bShort ) {\n    return 1;\n  } else {\n    return 0;\n  }\n}));\n\nconst mapStateToProps = state => ({\n  custom_emojis: getCustomEmojis(state),\n  skinTone: state.getIn(['settings', 'skinTone']),\n  frequentlyUsedEmojis: getFrequentlyUsedEmojis(state),\n});\n\nconst mapDispatchToProps = (dispatch, { onPickEmoji }) => ({\n  onSkinTone: skinTone => {\n    dispatch(changeSetting(['skinTone'], skinTone));\n  },\n\n  onPickEmoji: emoji => {\n    dispatch(useEmoji(emoji));\n\n    if (onPickEmoji) {\n      onPickEmoji(emoji);\n    }\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmojiPickerDropdown);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport IconButton from 'mastodon/components/icon_button';\nimport Icon from 'mastodon/components/icon';\nimport classNames from 'classnames';\n\nconst messages = defineMessages({\n  option_placeholder: { id: 'compose_form.poll.option_placeholder', defaultMessage: 'Choice {number}' },\n  add_option: { id: 'compose_form.poll.add_option', defaultMessage: 'Add a choice' },\n  remove_option: { id: 'compose_form.poll.remove_option', defaultMessage: 'Remove this choice' },\n  poll_duration: { id: 'compose_form.poll.duration', defaultMessage: 'Poll duration' },\n  minutes: { id: 'intervals.full.minutes', defaultMessage: '{number, plural, one {# minute} other {# minutes}}' },\n  hours: { id: 'intervals.full.hours', defaultMessage: '{number, plural, one {# hour} other {# hours}}' },\n  days: { id: 'intervals.full.days', defaultMessage: '{number, plural, one {# day} other {# days}}' },\n});\n\n@injectIntl\nclass Option extends React.PureComponent {\n\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    index: PropTypes.number.isRequired,\n    isPollMultiple: PropTypes.bool,\n    onChange: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n    onToggleMultiple: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleOptionTitleChange = e => {\n    this.props.onChange(this.props.index, e.target.value);\n  };\n\n  handleOptionRemove = () => {\n    this.props.onRemove(this.props.index);\n  };\n\n  handleToggleMultiple = e => {\n    this.props.onToggleMultiple();\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  render () {\n    const { isPollMultiple, title, index, intl } = this.props;\n\n    return (\n      <li>\n        <label className='poll__text editable'>\n          <span\n            className={classNames('poll__input', { checkbox: isPollMultiple })}\n            onClick={this.handleToggleMultiple}\n            role='button'\n            tabIndex='0'\n          />\n\n          <input\n            type='text'\n            placeholder={intl.formatMessage(messages.option_placeholder, { number: index + 1 })}\n            maxLength={25}\n            value={title}\n            onChange={this.handleOptionTitleChange}\n          />\n        </label>\n\n        <div className='poll__cancel'>\n          <IconButton disabled={index <= 1} title={intl.formatMessage(messages.remove_option)} icon='times' onClick={this.handleOptionRemove} />\n        </div>\n      </li>\n    );\n  }\n\n}\n\nexport default\n@injectIntl\nclass PollForm extends ImmutablePureComponent {\n\n  static propTypes = {\n    options: ImmutablePropTypes.list,\n    expiresIn: PropTypes.number,\n    isMultiple: PropTypes.bool,\n    onChangeOption: PropTypes.func.isRequired,\n    onAddOption: PropTypes.func.isRequired,\n    onRemoveOption: PropTypes.func.isRequired,\n    onChangeSettings: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleAddOption = () => {\n    this.props.onAddOption('');\n  };\n\n  handleSelectDuration = e => {\n    this.props.onChangeSettings(e.target.value, this.props.isMultiple);\n  };\n\n  handleToggleMultiple = () => {\n    this.props.onChangeSettings(this.props.expiresIn, !this.props.isMultiple);\n  };\n\n  render () {\n    const { options, expiresIn, isMultiple, onChangeOption, onRemoveOption, intl } = this.props;\n\n    if (!options) {\n      return null;\n    }\n\n    return (\n      <div className='compose-form__poll-wrapper'>\n        <ul>\n          {options.map((title, i) => <Option title={title} key={i} index={i} onChange={onChangeOption} onRemove={onRemoveOption} isPollMultiple={isMultiple} onToggleMultiple={this.handleToggleMultiple} />)}\n        </ul>\n\n        <div className='poll__footer'>\n          {options.size < 4 && (\n            <button className='button button-secondary' onClick={this.handleAddOption}><Icon id='plus' /> <FormattedMessage {...messages.add_option} /></button>\n          )}\n\n          <select value={expiresIn} onChange={this.handleSelectDuration}>\n            <option value={300}>{intl.formatMessage(messages.minutes, { number: 5 })}</option>\n            <option value={1800}>{intl.formatMessage(messages.minutes, { number: 30 })}</option>\n            <option value={3600}>{intl.formatMessage(messages.hours, { number: 1 })}</option>\n            <option value={21600}>{intl.formatMessage(messages.hours, { number: 6 })}</option>\n            <option value={86400}>{intl.formatMessage(messages.days, { number: 1 })}</option>\n            <option value={259200}>{intl.formatMessage(messages.days, { number: 3 })}</option>\n            <option value={604800}>{intl.formatMessage(messages.days, { number: 7 })}</option>\n          </select>\n        </div>\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport PollForm from '../components/poll_form';\nimport { addPollOption, removePollOption, changePollOption, changePollSettings } from '../../../actions/compose';\n\nconst mapStateToProps = state => ({\n  options: state.getIn(['compose', 'poll', 'options']),\n  expiresIn: state.getIn(['compose', 'poll', 'expires_in']),\n  isMultiple: state.getIn(['compose', 'poll', 'multiple']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onAddOption(title) {\n    dispatch(addPollOption(title));\n  },\n\n  onRemoveOption(index) {\n    dispatch(removePollOption(index));\n  },\n\n  onChangeOption(index, title) {\n    dispatch(changePollOption(index, title));\n  },\n\n  onChangeSettings(expiresIn, isMultiple) {\n    dispatch(changePollSettings(expiresIn, isMultiple));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PollForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Motion from '../../ui/util/optional_motion';\nimport spring from 'react-motion/lib/spring';\nimport { FormattedMessage } from 'react-intl';\nimport Icon from 'mastodon/components/icon';\n\nexport default class UploadProgress extends React.PureComponent {\n\n  static propTypes = {\n    active: PropTypes.bool,\n    progress: PropTypes.number,\n  };\n\n  render () {\n    const { active, progress } = this.props;\n\n    if (!active) {\n      return null;\n    }\n\n    return (\n      <div className='upload-progress'>\n        <div className='upload-progress__icon'>\n          <Icon id='upload' />\n        </div>\n\n        <div className='upload-progress__message'>\n          <FormattedMessage id='upload_progress.label' defaultMessage='Uploading...' />\n\n          <div className='upload-progress__backdrop'>\n            <Motion defaultStyle={{ width: 0 }} style={{ width: spring(progress) }}>\n              {({ width }) =>\n                <div className='upload-progress__tracker' style={{ width: `${width}%` }} />\n              }\n            </Motion>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport UploadProgress from '../components/upload_progress';\n\nconst mapStateToProps = state => ({\n  active: state.getIn(['compose', 'is_uploading']),\n  progress: state.getIn(['compose', 'progress']),\n});\n\nexport default connect(mapStateToProps)(UploadProgress);\n","import React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport Motion from '../../ui/util/optional_motion';\nimport spring from 'react-motion/lib/spring';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport Icon from 'mastodon/components/icon';\n\nconst messages = defineMessages({\n  description: { id: 'upload_form.description', defaultMessage: 'Describe for the visually impaired' },\n});\n\nexport default @injectIntl\nclass Upload extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    media: ImmutablePropTypes.map.isRequired,\n    intl: PropTypes.object.isRequired,\n    onUndo: PropTypes.func.isRequired,\n    onDescriptionChange: PropTypes.func.isRequired,\n    onOpenFocalPoint: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    hovered: false,\n    focused: false,\n    dirtyDescription: null,\n  };\n\n  handleKeyDown = (e) => {\n    if (e.keyCode === 13 && (e.ctrlKey || e.metaKey)) {\n      this.handleSubmit();\n    }\n  }\n\n  handleSubmit = () => {\n    this.handleInputBlur();\n    this.props.onSubmit(this.context.router.history);\n  }\n\n  handleUndoClick = e => {\n    e.stopPropagation();\n    this.props.onUndo(this.props.media.get('id'));\n  }\n\n  handleFocalPointClick = e => {\n    e.stopPropagation();\n    this.props.onOpenFocalPoint(this.props.media.get('id'));\n  }\n\n  handleInputChange = e => {\n    this.setState({ dirtyDescription: e.target.value });\n  }\n\n  handleMouseEnter = () => {\n    this.setState({ hovered: true });\n  }\n\n  handleMouseLeave = () => {\n    this.setState({ hovered: false });\n  }\n\n  handleInputFocus = () => {\n    this.setState({ focused: true });\n  }\n\n  handleClick = () => {\n    this.setState({ focused: true });\n  }\n\n  handleInputBlur = () => {\n    const { dirtyDescription } = this.state;\n\n    this.setState({ focused: false, dirtyDescription: null });\n\n    if (dirtyDescription !== null) {\n      this.props.onDescriptionChange(this.props.media.get('id'), dirtyDescription);\n    }\n  }\n\n  render () {\n    const { intl, media } = this.props;\n    const active          = this.state.hovered || this.state.focused;\n    const description     = this.state.dirtyDescription || (this.state.dirtyDescription !== '' && media.get('description')) || '';\n    const focusX = media.getIn(['meta', 'focus', 'x']);\n    const focusY = media.getIn(['meta', 'focus', 'y']);\n    const x = ((focusX /  2) + .5) * 100;\n    const y = ((focusY / -2) + .5) * 100;\n\n    return (\n      <div className='compose-form__upload' tabIndex='0' onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave} onClick={this.handleClick} role='button'>\n        <Motion defaultStyle={{ scale: 0.8 }} style={{ scale: spring(1, { stiffness: 180, damping: 12 }) }}>\n          {({ scale }) => (\n            <div className='compose-form__upload-thumbnail' style={{ transform: `scale(${scale})`, backgroundImage: `url(${media.get('preview_url')})`, backgroundPosition: `${x}% ${y}%` }}>\n              <div className={classNames('compose-form__upload__actions', { active })}>\n                <button className='icon-button' onClick={this.handleUndoClick}><Icon id='times' /> <FormattedMessage id='upload_form.undo' defaultMessage='Delete' /></button>\n                {media.get('type') === 'image' && <button className='icon-button' onClick={this.handleFocalPointClick}><Icon id='crosshairs' /> <FormattedMessage id='upload_form.focus' defaultMessage='Crop' /></button>}\n              </div>\n\n              <div className={classNames('compose-form__upload-description', { active })}>\n                <label>\n                  <span style={{ display: 'none' }}>{intl.formatMessage(messages.description)}</span>\n\n                  <textarea\n                    placeholder={intl.formatMessage(messages.description)}\n                    value={description}\n                    maxLength={420}\n                    onFocus={this.handleInputFocus}\n                    onChange={this.handleInputChange}\n                    onBlur={this.handleInputBlur}\n                    onKeyDown={this.handleKeyDown}\n                  />\n                </label>\n              </div>\n            </div>\n          )}\n        </Motion>\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport Upload from '../components/upload';\nimport { undoUploadCompose, changeUploadCompose } from '../../../actions/compose';\nimport { openModal } from '../../../actions/modal';\nimport { submitCompose } from '../../../actions/compose';\n\nconst mapStateToProps = (state, { id }) => ({\n  media: state.getIn(['compose', 'media_attachments']).find(item => item.get('id') === id),\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n  onUndo: id => {\n    dispatch(undoUploadCompose(id));\n  },\n\n  onDescriptionChange: (id, description) => {\n    dispatch(changeUploadCompose(id, { description }));\n  },\n\n  onOpenFocalPoint: id => {\n    dispatch(openModal('FOCAL_POINT', { id }));\n  },\n\n  onSubmit (router) {\n    dispatch(submitCompose(router));\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Upload);\n","import React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport UploadProgressContainer from '../containers/upload_progress_container';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport UploadContainer from '../containers/upload_container';\n\nexport default class UploadForm extends ImmutablePureComponent {\n\n  static propTypes = {\n    mediaIds: ImmutablePropTypes.list.isRequired,\n  };\n\n  render () {\n    const { mediaIds } = this.props;\n\n    return (\n      <div className='compose-form__upload-wrapper'>\n        <UploadProgressContainer />\n\n        <div className='compose-form__uploads-wrapper'>\n          {mediaIds.map(id => (\n            <UploadContainer id={id} key={id} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport UploadForm from '../components/upload_form';\n\nconst mapStateToProps = state => ({\n  mediaIds: state.getIn(['compose', 'media_attachments']).map(item => item.get('id')),\n});\n\nexport default connect(mapStateToProps)(UploadForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Motion from '../../ui/util/optional_motion';\nimport spring from 'react-motion/lib/spring';\n\nexport default class Warning extends React.PureComponent {\n\n  static propTypes = {\n    message: PropTypes.node.isRequired,\n  };\n\n  render () {\n    const { message } = this.props;\n\n    return (\n      <Motion defaultStyle={{ opacity: 0, scaleX: 0.85, scaleY: 0.75 }} style={{ opacity: spring(1, { damping: 35, stiffness: 400 }), scaleX: spring(1, { damping: 35, stiffness: 400 }), scaleY: spring(1, { damping: 35, stiffness: 400 }) }}>\n        {({ opacity, scaleX, scaleY }) => (\n          <div className='compose-form__warning' style={{ opacity: opacity, transform: `scale(${scaleX}, ${scaleY})` }}>\n            {message}\n          </div>\n        )}\n      </Motion>\n    );\n  }\n\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Warning from '../components/warning';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { me } from '../../../initial_state';\n\nconst APPROX_HASHTAG_RE = /(?:^|[^\\/\\)\\w])#(\\w*[a-zA-Z·]\\w*)/i;\n\nconst mapStateToProps = state => ({\n  needsLockWarning: state.getIn(['compose', 'privacy']) === 'private' && !state.getIn(['accounts', me, 'locked']),\n  hashtagWarning: state.getIn(['compose', 'privacy']) !== 'public' && APPROX_HASHTAG_RE.test(state.getIn(['compose', 'text'])),\n  directMessageWarning: state.getIn(['compose', 'privacy']) === 'direct',\n});\n\nconst WarningWrapper = ({ needsLockWarning, hashtagWarning, directMessageWarning }) => {\n  if (needsLockWarning) {\n    return <Warning message={<FormattedMessage id='compose_form.lock_disclaimer' defaultMessage='Your account is not {locked}. Anyone can follow you to view your follower-only posts.' values={{ locked: <a href='/user-settings'><FormattedMessage id='compose_form.lock_disclaimer.lock' defaultMessage='locked' /></a> }} />} />;\n  }\n\n  if (hashtagWarning) {\n    return <Warning message={<FormattedMessage id='compose_form.hashtag_warning' defaultMessage=\"This toot won't be listed under any hashtag as it is unlisted. Only public toots can be searched by hashtag.\" />} />;\n  }\n\n  if (directMessageWarning) {\n    const message = (\n      <span>\n        <FormattedMessage id='compose_form.direct_message_warning' defaultMessage='This toot will only be sent to all the mentioned users.' /> <a href='/terms' target='_blank'><FormattedMessage id='compose_form.direct_message_warning_learn_more' defaultMessage='Learn more' /></a>\n      </span>\n    );\n\n    return <Warning message={message} />;\n  }\n\n  return null;\n};\n\nWarningWrapper.propTypes = {\n  needsLockWarning: PropTypes.bool,\n  hashtagWarning: PropTypes.bool,\n  directMessageWarning: PropTypes.bool,\n};\n\nexport default connect(mapStateToProps)(WarningWrapper);\n","import React from 'react';\nimport CharacterCounter from './character_counter';\nimport Button from '../../../components/button';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport ReplyIndicatorContainer from '../containers/reply_indicator_container';\nimport AutosuggestTextarea from '../../../components/autosuggest_textarea';\nimport PollButtonContainer from '../containers/poll_button_container';\nimport UploadButtonContainer from '../containers/upload_button_container';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport SpoilerButtonContainer from '../containers/spoiler_button_container';\nimport PrivacyDropdownContainer from '../containers/privacy_dropdown_container';\nimport SensitiveButtonContainer from '../containers/sensitive_button_container';\nimport EmojiPickerDropdown from '../containers/emoji_picker_dropdown_container';\nimport PollFormContainer from '../containers/poll_form_container';\nimport UploadFormContainer from '../containers/upload_form_container';\nimport WarningContainer from '../containers/warning_container';\nimport { isMobile } from '../../../is_mobile';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { length } from 'stringz';\nimport Icon from 'mastodon/components/icon';\nimport { maxChars } from '../../../initial_state';\n\nconst allowedAroundShortCode = '><\\u0085\\u0020\\u00a0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029\\u0009\\u000a\\u000b\\u000c\\u000d';\n\nconst messages = defineMessages({\n  placeholder: { id: 'compose_form.placeholder', defaultMessage: 'What is on your mind?' },\n  spoiler_placeholder: { id: 'compose_form.spoiler_placeholder', defaultMessage: 'Write your warning here' },\n  publish: { id: 'compose_form.publish', defaultMessage: 'Toot' },\n  publishLoud: { id: 'compose_form.publish_loud', defaultMessage: '{publish}!' },\n});\n\nexport default @injectIntl\nclass ComposeForm extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    intl: PropTypes.object.isRequired,\n    text: PropTypes.string.isRequired,\n    suggestions: ImmutablePropTypes.list,\n    spoiler: PropTypes.bool,\n    privacy: PropTypes.string,\n    spoilerText: PropTypes.string,\n    focusDate: PropTypes.instanceOf(Date),\n    caretPosition: PropTypes.number,\n    preselectDate: PropTypes.instanceOf(Date),\n    isSubmitting: PropTypes.bool,\n    isChangingUpload: PropTypes.bool,\n    isUploading: PropTypes.bool,\n    onChange: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    onClearSuggestions: PropTypes.func.isRequired,\n    onFetchSuggestions: PropTypes.func.isRequired,\n    onSuggestionSelected: PropTypes.func.isRequired,\n    onChangeSpoilerText: PropTypes.func.isRequired,\n    onPaste: PropTypes.func.isRequired,\n    onPickEmoji: PropTypes.func.isRequired,\n    showSearch: PropTypes.bool,\n    anyMedia: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    showSearch: false,\n  };\n\n  handleChange = (e) => {\n    this.props.onChange(e.target.value);\n  }\n\n  handleKeyDown = (e) => {\n    if (e.keyCode === 13 && (e.ctrlKey || e.metaKey)) {\n      this.handleSubmit();\n    }\n  }\n\n  handleSubmit = () => {\n    if (this.props.text !== this.autosuggestTextarea.textarea.value) {\n      // Something changed the text inside the textarea (e.g. browser extensions like Grammarly)\n      // Update the state to match the current text\n      this.props.onChange(this.autosuggestTextarea.textarea.value);\n    }\n\n    // Submit disabled:\n    const { isSubmitting, isChangingUpload, isUploading, anyMedia } = this.props;\n    const fulltext = [this.props.spoilerText, this.props.text].join('');\n\n    if (isSubmitting || isUploading || isChangingUpload || length(fulltext) > maxChars || (fulltext.length !== 0 && fulltext.trim().length === 0 && !anyMedia)) {\n      return;\n    }\n\n    this.props.onSubmit(this.context.router ? this.context.router.history : null);\n  }\n\n  onSuggestionsClearRequested = () => {\n    this.props.onClearSuggestions();\n  }\n\n  onSuggestionsFetchRequested = (token) => {\n    this.props.onFetchSuggestions(token);\n  }\n\n  onSuggestionSelected = (tokenStart, token, value) => {\n    this.props.onSuggestionSelected(tokenStart, token, value);\n  }\n\n  handleChangeSpoilerText = (e) => {\n    this.props.onChangeSpoilerText(e.target.value);\n  }\n\n  componentDidUpdate (prevProps) {\n    // This statement does several things:\n    // - If we're beginning a reply, and,\n    //     - Replying to zero or one users, places the cursor at the end of the textbox.\n    //     - Replying to more than one user, selects any usernames past the first;\n    //       this provides a convenient shortcut to drop everyone else from the conversation.\n    if (this.props.focusDate !== prevProps.focusDate) {\n      let selectionEnd, selectionStart;\n\n      if (this.props.preselectDate !== prevProps.preselectDate) {\n        selectionEnd   = this.props.text.length;\n        selectionStart = this.props.text.search(/\\s/) + 1;\n      } else if (typeof this.props.caretPosition === 'number') {\n        selectionStart = this.props.caretPosition;\n        selectionEnd   = this.props.caretPosition;\n      } else {\n        selectionEnd   = this.props.text.length;\n        selectionStart = selectionEnd;\n      }\n\n      this.autosuggestTextarea.textarea.setSelectionRange(selectionStart, selectionEnd);\n      this.autosuggestTextarea.textarea.focus();\n    } else if(prevProps.isSubmitting && !this.props.isSubmitting) {\n      this.autosuggestTextarea.textarea.focus();\n    } else if (this.props.spoiler !== prevProps.spoiler) {\n      if (this.props.spoiler) {\n        this.spoilerText.focus();\n      } else {\n        this.autosuggestTextarea.textarea.focus();\n      }\n    }\n  }\n\n  setAutosuggestTextarea = (c) => {\n    this.autosuggestTextarea = c;\n  }\n\n  setSpoilerText = (c) => {\n    this.spoilerText = c;\n  }\n\n  handleEmojiPick = (data) => {\n    const { text }     = this.props;\n    const position     = this.autosuggestTextarea.textarea.selectionStart;\n    const needsSpace   = data.custom && position > 0 && !allowedAroundShortCode.includes(text[position - 1]);\n\n    this.props.onPickEmoji(position, data, needsSpace);\n  }\n\n  render () {\n    const { intl, onPaste, showSearch, anyMedia } = this.props;\n    const disabled = this.props.isSubmitting;\n    const text     = [this.props.spoilerText, this.props.text].join('');\n    const disabledButton = disabled || this.props.isUploading || this.props.isChangingUpload || length(text) > maxChars || (text.length !== 0 && text.trim().length === 0 && !anyMedia);\n    let publishText = '';\n\n    if (this.props.privacy === 'private' || this.props.privacy === 'direct') {\n      publishText = <span className='compose-form__publish-private'><Icon id='lock' /> {intl.formatMessage(messages.publish)}</span>;\n    } else {\n      publishText = this.props.privacy !== 'unlisted' ? intl.formatMessage(messages.publishLoud, { publish: intl.formatMessage(messages.publish) }) : intl.formatMessage(messages.publish);\n    }\n\n    return (\n      <div className='compose-form'>\n        <WarningContainer />\n\n        <ReplyIndicatorContainer />\n\n        <div className={`spoiler-input ${this.props.spoiler ? 'spoiler-input--visible' : ''}`}>\n          <label>\n            <span style={{ display: 'none' }}>{intl.formatMessage(messages.spoiler_placeholder)}</span>\n            <input placeholder={intl.formatMessage(messages.spoiler_placeholder)} value={this.props.spoilerText} onChange={this.handleChangeSpoilerText} onKeyDown={this.handleKeyDown} tabIndex={this.props.spoiler ? 0 : -1} type='text' className='spoiler-input__input'  id='cw-spoiler-input' ref={this.setSpoilerText} />\n          </label>\n        </div>\n\n        <div className='compose-form__autosuggest-wrapper'>\n          <AutosuggestTextarea\n            ref={this.setAutosuggestTextarea}\n            placeholder={intl.formatMessage(messages.placeholder)}\n            disabled={disabled}\n            value={this.props.text}\n            onChange={this.handleChange}\n            suggestions={this.props.suggestions}\n            onKeyDown={this.handleKeyDown}\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n            onSuggestionSelected={this.onSuggestionSelected}\n            onPaste={onPaste}\n            autoFocus={!showSearch && !isMobile(window.innerWidth)}\n          />\n\n          <EmojiPickerDropdown onPickEmoji={this.handleEmojiPick} />\n        </div>\n\n        <div className='compose-form__modifiers'>\n          <UploadFormContainer />\n          <PollFormContainer />\n        </div>\n\n        <div className='compose-form__buttons-wrapper'>\n          <div className='compose-form__buttons'>\n            <UploadButtonContainer />\n            <PollButtonContainer />\n            <PrivacyDropdownContainer />\n            <SensitiveButtonContainer />\n            <SpoilerButtonContainer />\n          </div>\n          <div className='character-counter__wrapper'><CharacterCounter max={maxChars} text={text} /></div>\n        </div>\n\n        <div className='compose-form__publish'>\n          <div className='compose-form__publish-button-wrapper'><Button text={publishText} onClick={this.handleSubmit} disabled={disabledButton} block /></div>\n        </div>\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport ComposeForm from '../components/compose_form';\nimport {\n  changeCompose,\n  submitCompose,\n  clearComposeSuggestions,\n  fetchComposeSuggestions,\n  selectComposeSuggestion,\n  changeComposeSpoilerText,\n  insertEmojiCompose,\n  uploadCompose,\n} from '../../../actions/compose';\n\nconst mapStateToProps = state => ({\n  text: state.getIn(['compose', 'text']),\n  suggestions: state.getIn(['compose', 'suggestions']),\n  spoiler: state.getIn(['compose', 'spoiler']),\n  spoilerText: state.getIn(['compose', 'spoiler_text']),\n  privacy: state.getIn(['compose', 'privacy']),\n  focusDate: state.getIn(['compose', 'focusDate']),\n  caretPosition: state.getIn(['compose', 'caretPosition']),\n  preselectDate: state.getIn(['compose', 'preselectDate']),\n  is_submitting: state.getIn(['compose', 'is_submitting']),\n  isChangingUpload: state.getIn(['compose', 'is_changing_upload']),\n  isUploading: state.getIn(['compose', 'is_uploading']),\n  showSearch: state.getIn(['search', 'submitted']) && !state.getIn(['search', 'hidden']),\n  anyMedia: state.getIn(['compose', 'media_attachments']).size > 0,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\n  onChange (text) {\n    dispatch(changeCompose(text));\n  },\n\n  onSubmit (router) {\n    dispatch(submitCompose(router));\n  },\n\n  onClearSuggestions () {\n    dispatch(clearComposeSuggestions());\n  },\n\n  onFetchSuggestions (token) {\n    dispatch(fetchComposeSuggestions(token));\n  },\n\n  onSuggestionSelected (position, token, suggestion) {\n    dispatch(selectComposeSuggestion(position, token, suggestion));\n  },\n\n  onChangeSpoilerText (checked) {\n    dispatch(changeComposeSpoilerText(checked));\n  },\n\n  onPaste (files) {\n    dispatch(uploadCompose(files));\n  },\n\n  onPickEmoji (position, data, needsSpace) {\n    dispatch(insertEmojiCompose(position, data, needsSpace));\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ComposeForm);\n","import { connect }   from 'react-redux';\nimport NavigationBar from '../components/navigation_bar';\nimport { me } from '../../../initial_state';\n\nconst mapStateToProps = state => {\n  return {\n    account: state.getIn(['accounts', me]),\n  };\n};\n\nexport default connect(mapStateToProps)(NavigationBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport Overlay from 'react-overlays/lib/Overlay';\nimport Motion from '../../ui/util/optional_motion';\nimport spring from 'react-motion/lib/spring';\nimport { searchEnabled } from '../../../initial_state';\nimport Icon from 'mastodon/components/icon';\n\nconst messages = defineMessages({\n  placeholder: { id: 'search.placeholder', defaultMessage: 'Search' },\n});\n\nclass SearchPopout extends React.PureComponent {\n\n  static propTypes = {\n    style: PropTypes.object,\n  };\n\n  render () {\n    const { style } = this.props;\n    const extraInformation = searchEnabled ? <FormattedMessage id='search_popout.tips.full_text' defaultMessage='Simple text returns statuses you have written, favourited, boosted, or have been mentioned in, as well as matching usernames, display names, and hashtags.' /> : <FormattedMessage id='search_popout.tips.text' defaultMessage='Simple text returns matching display names, usernames and hashtags' />;\n    return (\n      <div style={{ ...style, position: 'absolute', width: 315 }}>\n        <Motion defaultStyle={{ opacity: 0, scaleX: 0.85, scaleY: 0.75 }} style={{ opacity: spring(1, { damping: 35, stiffness: 400 }), scaleX: spring(1, { damping: 35, stiffness: 400 }), scaleY: spring(1, { damping: 35, stiffness: 400 }) }}>\n          {({ opacity, scaleX, scaleY }) => (\n            <div className='search-popout' style={{ opacity: opacity, transform: `scale(${scaleX}, ${scaleY})` }}>\n              <h4><FormattedMessage id='search_popout.search_format' defaultMessage='Advanced search format' /></h4>\n\n              <ul>\n                <li><em>#example</em> <FormattedMessage id='search_popout.tips.hashtag' defaultMessage='hashtag' /></li>\n                <li><em>@username@domain</em> <FormattedMessage id='search_popout.tips.user' defaultMessage='user' /></li>\n                <li><em>URL</em> <FormattedMessage id='search_popout.tips.user' defaultMessage='user' /></li>\n                <li><em>URL</em> <FormattedMessage id='search_popout.tips.status' defaultMessage='status' /></li>\n              </ul>\n\n              {extraInformation}\n            </div>\n          )}\n        </Motion>\n      </div>\n    );\n  }\n\n}\n\nexport default @injectIntl\nclass Search extends React.PureComponent {\n\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    submitted: PropTypes.bool,\n    onChange: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    onClear: PropTypes.func.isRequired,\n    onShow: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  state = {\n    expanded: false,\n  };\n\n  handleChange = (e) => {\n    this.props.onChange(e.target.value);\n  }\n\n  handleClear = (e) => {\n    e.preventDefault();\n\n    if (this.props.value.length > 0 || this.props.submitted) {\n      this.props.onClear();\n    }\n  }\n\n  handleKeyUp = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      this.props.onSubmit();\n    } else if (e.key === 'Escape') {\n      document.querySelector('.ui').parentElement.focus();\n    }\n  }\n\n  handleFocus = () => {\n    this.setState({ expanded: true });\n    this.props.onShow();\n  }\n\n  handleBlur = () => {\n    this.setState({ expanded: false });\n  }\n\n  render () {\n    const { intl, value, submitted } = this.props;\n    const { expanded } = this.state;\n    const hasValue = value.length > 0 || submitted;\n\n    return (\n      <div className='search'>\n        <label>\n          <span style={{ display: 'none' }}>{intl.formatMessage(messages.placeholder)}</span>\n          <input\n            className='search__input'\n            type='text'\n            placeholder={intl.formatMessage(messages.placeholder)}\n            value={value}\n            onChange={this.handleChange}\n            onKeyUp={this.handleKeyUp}\n            onFocus={this.handleFocus}\n            onBlur={this.handleBlur}\n          />\n        </label>\n\n        <div role='button' tabIndex='0' className='search__icon' onClick={this.handleClear}>\n          <Icon id='search' className={hasValue ? '' : 'active'} />\n          <Icon id='times-circle' className={hasValue ? 'active' : ''} aria-label={intl.formatMessage(messages.placeholder)} />\n        </div>\n\n        <Overlay show={expanded && !hasValue} placement='bottom' target={this}>\n          <SearchPopout />\n        </Overlay>\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport {\n  changeSearch,\n  clearSearch,\n  submitSearch,\n  showSearch,\n} from '../../../actions/search';\nimport Search from '../components/search';\n\nconst mapStateToProps = state => ({\n  value: state.getIn(['search', 'value']),\n  submitted: state.getIn(['search', 'submitted']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n  onChange (value) {\n    dispatch(changeSearch(value));\n  },\n\n  onClear () {\n    dispatch(clearSearch());\n  },\n\n  onSubmit () {\n    dispatch(submitSearch());\n  },\n\n  onShow () {\n    dispatch(showSearch());\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React from 'react';\nimport { Sparklines, SparklinesCurve } from 'react-sparklines';\nimport { FormattedMessage } from 'react-intl';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport Permalink from './permalink';\nimport { shortNumberFormat } from '../utils/numbers';\n\nconst Hashtag = ({ hashtag }) => (\n  <div className='trends__item'>\n    <div className='trends__item__name'>\n      <Permalink href={hashtag.get('url')} to={`/timelines/tag/${hashtag.get('name')}`}>\n        #<span>{hashtag.get('name')}</span>\n      </Permalink>\n\n      <FormattedMessage id='trends.count_by_accounts' defaultMessage='{count} {rawCount, plural, one {person} other {people}} talking' values={{ rawCount: hashtag.getIn(['history', 0, 'accounts']), count: <strong>{shortNumberFormat(hashtag.getIn(['history', 0, 'accounts']))}</strong> }} />\n    </div>\n\n    <div className='trends__item__current'>\n      {shortNumberFormat(hashtag.getIn(['history', 0, 'uses']))}\n    </div>\n\n    <div className='trends__item__sparkline'>\n      <Sparklines width={50} height={28} data={hashtag.get('history') && hashtag.get('history').reverse().map(day => day.get('uses')).toArray()}>\n        <SparklinesCurve style={{ fill: 'none' }} />\n      </Sparklines>\n    </div>\n  </div>\n);\n\nHashtag.propTypes = {\n  hashtag: ImmutablePropTypes.map.isRequired,\n};\n\nexport default Hashtag;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport AccountContainer from '../../../containers/account_container';\nimport StatusContainer from '../../../containers/status_container';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport Hashtag from '../../../components/hashtag';\nimport Icon from 'mastodon/components/icon';\n\nconst messages = defineMessages({\n  dismissSuggestion: { id: 'suggestions.dismiss', defaultMessage: 'Dismiss suggestion' },\n});\n\nexport default @injectIntl\nclass SearchResults extends ImmutablePureComponent {\n\n  static propTypes = {\n    results: ImmutablePropTypes.map.isRequired,\n    suggestions: ImmutablePropTypes.list.isRequired,\n    fetchSuggestions: PropTypes.func.isRequired,\n    dismissSuggestion: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  componentDidMount () {\n    this.props.fetchSuggestions();\n  }\n\n  render () {\n    const { intl, results, suggestions, dismissSuggestion } = this.props;\n\n    if (results.isEmpty() && !suggestions.isEmpty()) {\n      return (\n        <div className='search-results'>\n          <div className='trends'>\n            <div className='trends__header'>\n              <Icon id='user-plus' fixedWidth />\n              <FormattedMessage id='suggestions.header' defaultMessage='You might be interested in…' />\n            </div>\n\n            {suggestions && suggestions.map(accountId => (\n              <AccountContainer\n                key={accountId}\n                id={accountId}\n                actionIcon='times'\n                actionTitle={intl.formatMessage(messages.dismissSuggestion)}\n                onActionClick={dismissSuggestion}\n              />\n            ))}\n          </div>\n        </div>\n      );\n    }\n\n    let accounts, statuses, hashtags;\n    let count = 0;\n\n    if (results.get('accounts') && results.get('accounts').size > 0) {\n      count   += results.get('accounts').size;\n      accounts = (\n        <div className='search-results__section'>\n          <h5><Icon id='users' fixedWidth /><FormattedMessage id='search_results.accounts' defaultMessage='People' /></h5>\n\n          {results.get('accounts').map(accountId => <AccountContainer key={accountId} id={accountId} />)}\n        </div>\n      );\n    }\n\n    if (results.get('statuses') && results.get('statuses').size > 0) {\n      count   += results.get('statuses').size;\n      statuses = (\n        <div className='search-results__section'>\n          <h5><Icon id='quote-right' fixedWidth /><FormattedMessage id='search_results.statuses' defaultMessage='Toots' /></h5>\n\n          {results.get('statuses').map(statusId => <StatusContainer key={statusId} id={statusId} />)}\n        </div>\n      );\n    }\n\n    if (results.get('hashtags') && results.get('hashtags').size > 0) {\n      count += results.get('hashtags').size;\n      hashtags = (\n        <div className='search-results__section'>\n          <h5><Icon id='hashtag' fixedWidth /><FormattedMessage id='search_results.hashtags' defaultMessage='Hashtags' /></h5>\n\n          {results.get('hashtags').map(hashtag => <Hashtag key={hashtag.get('name')} hashtag={hashtag} />)}\n        </div>\n      );\n    }\n\n    return (\n      <div className='search-results'>\n        <div className='search-results__header'>\n          <Icon id='search' fixedWidth />\n          <FormattedMessage id='search_results.total' defaultMessage='{count, number} {count, plural, one {result} other {results}}' values={{ count }} />\n        </div>\n\n        {accounts}\n        {statuses}\n        {hashtags}\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport SearchResults from '../components/search_results';\nimport { fetchSuggestions, dismissSuggestion } from '../../../actions/suggestions';\n\nconst mapStateToProps = state => ({\n  results: state.getIn(['search', 'results']),\n  suggestions: state.getIn(['suggestions', 'items']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchSuggestions: () => dispatch(fetchSuggestions()),\n  dismissSuggestion: account => dispatch(dismissSuggestion(account.get('id'))),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResults);\n","import React from 'react';\nimport ComposeFormContainer from './containers/compose_form_container';\nimport NavigationContainer from './containers/navigation_container';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\nimport { mountCompose, unmountCompose } from '../../actions/compose';\nimport { Link } from 'react-router-dom';\nimport { injectIntl, defineMessages } from 'react-intl';\nimport SearchContainer from './containers/search_container';\nimport Motion from '../ui/util/optional_motion';\nimport spring from 'react-motion/lib/spring';\nimport SearchResultsContainer from './containers/search_results_container';\nimport { changeComposing } from '../../actions/compose';\nimport { mascot } from '../../initial_state';\nimport Icon from 'mastodon/components/icon';\n\nconst messages = defineMessages({\n  start: { id: 'getting_started.heading', defaultMessage: 'Getting started' },\n  home_timeline: { id: 'tabs_bar.home', defaultMessage: 'Home' },\n  notifications: { id: 'tabs_bar.notifications', defaultMessage: 'Notifications' },\n  public: { id: 'navigation_bar.public_timeline', defaultMessage: 'Federated timeline' },\n  community: { id: 'navigation_bar.community_timeline', defaultMessage: 'Local timeline' },\n  preferences: { id: 'navigation_bar.preferences', defaultMessage: 'Preferences' },\n  logout: { id: 'navigation_bar.logout', defaultMessage: 'Logout' },\n  compose: { id: 'navigation_bar.compose', defaultMessage: 'Compose new toot' },\n});\n\nconst mapStateToProps = (state, ownProps) => ({\n  columns: state.getIn(['settings', 'columns']),\n  showSearch: ownProps.multiColumn ? state.getIn(['search', 'submitted']) && !state.getIn(['search', 'hidden']) : ownProps.isSearchPage,\n});\n\nexport default @connect(mapStateToProps)\n@injectIntl\nclass Compose extends React.PureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    columns: ImmutablePropTypes.list.isRequired,\n    multiColumn: PropTypes.bool,\n    showSearch: PropTypes.bool,\n    isSearchPage: PropTypes.bool,\n    intl: PropTypes.object.isRequired,\n  };\n\n  componentDidMount () {\n    const { isSearchPage } = this.props;\n\n    if (!isSearchPage) {\n      this.props.dispatch(mountCompose());\n    }\n  }\n\n  componentWillUnmount () {\n    const { isSearchPage } = this.props;\n\n    if (!isSearchPage) {\n      this.props.dispatch(unmountCompose());\n    }\n  }\n\n  onFocus = () => {\n    this.props.dispatch(changeComposing(true));\n  }\n\n  onBlur = () => {\n    this.props.dispatch(changeComposing(false));\n  }\n\n  render () {\n    const { multiColumn, showSearch, isSearchPage, intl } = this.props;\n\n    let header = '';\n\n    if (multiColumn) {\n      const { columns } = this.props;\n      header = (\n        <nav className='drawer__header'>\n          <Link to='/getting-started' className='drawer__tab' title={intl.formatMessage(messages.start)} aria-label={intl.formatMessage(messages.start)}><Icon id='bars' fixedWidth /></Link>\n          {!columns.some(column => column.get('id') === 'HOME') && (\n            <Link to='/timelines/home' className='drawer__tab' title={intl.formatMessage(messages.home_timeline)} aria-label={intl.formatMessage(messages.home_timeline)}><Icon id='home' fixedWidth /></Link>\n          )}\n          {!columns.some(column => column.get('id') === 'NOTIFICATIONS') && (\n            <Link to='/notifications' className='drawer__tab' title={intl.formatMessage(messages.notifications)} aria-label={intl.formatMessage(messages.notifications)}><Icon id='bell' fixedWidth /></Link>\n          )}\n          {!columns.some(column => column.get('id') === 'COMMUNITY') && (\n            <Link to='/timelines/public/local' className='drawer__tab' title={intl.formatMessage(messages.community)} aria-label={intl.formatMessage(messages.community)}><Icon id='users' fixedWidth /></Link>\n          )}\n          {!columns.some(column => column.get('id') === 'PUBLIC') && (\n            <Link to='/timelines/public' className='drawer__tab' title={intl.formatMessage(messages.public)} aria-label={intl.formatMessage(messages.public)}><Icon id='globe' fixedWidth /></Link>\n          )}\n          <a href='/user-settings' className='drawer__tab' title={intl.formatMessage(messages.preferences)} aria-label={intl.formatMessage(messages.preferences)}><Icon id='cog' fixedWidth /></a>\n          <a href='/auth/sign_out' className='drawer__tab' data-method='delete' title={intl.formatMessage(messages.logout)} aria-label={intl.formatMessage(messages.logout)}><Icon id='sign-out' fixedWidth /></a>\n        </nav>\n      );\n    }\n\n    return (\n      <div className='drawer' role='region' aria-label={intl.formatMessage(messages.compose)}>\n        {header}\n\n        {(multiColumn || isSearchPage) && <SearchContainer /> }\n\n        <div className='drawer__pager'>\n          {!isSearchPage && <div className='drawer__inner' onFocus={this.onFocus}>\n            <NavigationContainer onClose={this.onBlur} />\n            <ComposeFormContainer />\n          </div>}\n\n          <Motion defaultStyle={{ x: isSearchPage ? 0 : -100 }} style={{ x: spring(showSearch || isSearchPage ? 0 : -100, { stiffness: 210, damping: 20 }) }}>\n            {({ x }) => (\n              <div className='drawer__inner darker' style={{ transform: `translateX(${x}%)`, visibility: x === -100 ? 'hidden' : 'visible' }}>\n                <SearchResultsContainer />\n              </div>\n            )}\n          </Motion>\n        </div>\n      </div>\n    );\n  }\n\n}\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/flavours/glitch/features/pinned_statuses/index.js"],"names":["messages","defineMessages","heading","id","defaultMessage","PinnedStatuses","connect","state","statusIds","getIn","hasMore","injectIntl","_this","column","scrollTop","c","componentWillMount","this","props","dispatch","fetchPinnedStatuses","render","_this$props","intl","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","flavours_glitch_features_ui_components_column__WEBPACK_IMPORTED_MODULE_9__","icon","formatMessage","ref","setRef","Object","_babel_runtime_helpers_esm_jsx__WEBPACK_IMPORTED_MODULE_0__","flavours_glitch_components_column_back_button_slim__WEBPACK_IMPORTED_MODULE_10__","flavours_glitch_components_status_list__WEBPACK_IMPORTED_MODULE_11__","scrollKey","ImmutablePureComponent","PropTypes","func","isRequired","ImmutablePropTypes","list","object","bool"],"mappings":"0RAWMA,EAAWC,YAAe,CAC9BC,QAAO,CAAAC,GAAA,cAAAC,eAAA,iBAUYC,EAFpBC,kBALuB,SAAAC,GAAK,MAAK,CAChCC,UAAWD,EAAME,MAAM,CAAC,eAAgB,OAAQ,UAChDC,UAAWH,EAAME,MAAM,CAAC,eAAgB,OAAQ,cAIjDE,mNAcqB,WAClBC,EAAKC,OAAOC,kDAGL,SAAAC,GACPH,EAAKC,OAASE,kDAThBC,mBAAA,WACEC,KAAKC,MAAMC,SAASC,kBAWtBC,OAAA,WAAU,IAAAC,EAC6BL,KAAKC,MAAlCK,EADAD,EACAC,KAAMf,EADNc,EACMd,UAAWE,EADjBY,EACiBZ,QAEzB,OACEc,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,KAAK,aAAa1B,QAASqB,EAAKM,cAAc7B,EAASE,SAAU4B,IAAKb,KAAKc,QACjFC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,IACAF,OAAAC,EAAA,EAAAD,CAACG,EAAA,EAAD,CACE3B,UAAWA,EACX4B,UAAU,kBACV1B,QAASA,SA9ByB2B,+BAEvB,CACjBlB,SAAUmB,IAAUC,KAAKC,WACzBhC,UAAWiC,IAAmBC,KAAKF,WACnCjB,KAAMe,IAAUK,OAAOH,WACvB9B,QAAS4B,IAAUM,KAAKJ","file":"flavours/glitch/async/pinned_statuses.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { fetchPinnedStatuses } from 'flavours/glitch/actions/pin_statuses';\nimport Column from 'flavours/glitch/features/ui/components/column';\nimport ColumnBackButtonSlim from 'flavours/glitch/components/column_back_button_slim';\nimport StatusList from 'flavours/glitch/components/status_list';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nconst messages = defineMessages({\n  heading: { id: 'column.pins', defaultMessage: 'Pinned toot' },\n});\n\nconst mapStateToProps = state => ({\n  statusIds: state.getIn(['status_lists', 'pins', 'items']),\n  hasMore: !!state.getIn(['status_lists', 'pins', 'next']),\n});\n\n@connect(mapStateToProps)\n@injectIntl\nexport default class PinnedStatuses extends ImmutablePureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    statusIds: ImmutablePropTypes.list.isRequired,\n    intl: PropTypes.object.isRequired,\n    hasMore: PropTypes.bool.isRequired,\n  };\n\n  componentWillMount () {\n    this.props.dispatch(fetchPinnedStatuses());\n  }\n\n  handleHeaderClick = () => {\n    this.column.scrollTop();\n  }\n\n  setRef = c => {\n    this.column = c;\n  }\n\n  render () {\n    const { intl, statusIds, hasMore } = this.props;\n\n    return (\n      <Column icon='thumb-tack' heading={intl.formatMessage(messages.heading)} ref={this.setRef}>\n        <ColumnBackButtonSlim />\n        <StatusList\n          statusIds={statusIds}\n          scrollKey='pinned_statuses'\n          hasMore={hasMore}\n        />\n      </Column>\n    );\n  }\n\n}\n"],"sourceRoot":""}
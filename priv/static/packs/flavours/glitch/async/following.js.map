{"version":3,"sources":["webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/flavours/glitch/features/following/index.js"],"names":["Following","connect","state","props","accountIds","getIn","params","accountId","hasMore","_this","column","scrollTop","e","_e$target","target","scrollHeight","clientHeight","dispatch","expandFollowing","preventDefault","prevRouterProps","_ref","location","mastodonModalOpen","c","componentWillMount","this","fetchAccount","fetchFollowing","componentWillReceiveProps","nextProps","render","_this$props","loadMore","Object","_babel_runtime_helpers_esm_jsx__WEBPACK_IMPORTED_MODULE_0__","flavours_glitch_components_load_more__WEBPACK_IMPORTED_MODULE_15__","onClick","handleLoadMore","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","flavours_glitch_features_ui_components_column__WEBPACK_IMPORTED_MODULE_12__","ref","setRef","flavours_glitch_features_account_components_profile_column_header__WEBPACK_IMPORTED_MODULE_13__","handleHeaderClick","react_router_scroll_4__WEBPACK_IMPORTED_MODULE_10__","scrollKey","shouldUpdateScroll","className","onScroll","handleScroll","flavours_glitch_features_account_timeline_containers_header_container__WEBPACK_IMPORTED_MODULE_14__","hideTabs","map","id","flavours_glitch_containers_account_container__WEBPACK_IMPORTED_MODULE_11__","withNote","flavours_glitch_components_loading_indicator__WEBPACK_IMPORTED_MODULE_8__","ImmutablePureComponent","PropTypes","object","isRequired","func","ImmutablePropTypes","list","bool"],"mappings":"sTAwBqBA,EADpBC,kBALuB,SAACC,EAAOC,GAAR,MAAmB,CACzCC,WAAYF,EAAMG,MAAM,CAAC,aAAc,YAAaF,EAAMG,OAAOC,UAAW,UAC5EC,UAAWN,EAAMG,MAAM,CAAC,aAAc,YAAaF,EAAMG,OAAOC,UAAW,mNAyBvD,WAClBE,EAAKC,OAAOC,wDAGC,SAACC,GAAM,IAAAC,EAC8BD,EAAEE,OADhCD,EACZF,YADYE,EACDE,aADCF,EACaG,cAEgBP,EAAKN,MAAMK,SAC1DC,EAAKN,MAAMc,SAASC,YAAgBT,EAAKN,MAAMG,OAAOC,0DAIzC,SAACK,GAChBA,EAAEO,iBACFV,EAAKN,MAAMc,SAASC,YAAgBT,EAAKN,MAAMG,OAAOC,8DAGnC,SAACa,EAADC,GAAmC,IAAfC,EAAeD,EAAfC,SACvC,UAAOF,GAAmB,IAAIE,UAAY,IAAIpB,OAAS,IAAIqB,qBAClDD,EAASpB,OAASoB,EAASpB,MAAMqB,yDAGnC,SAAAC,GACPf,EAAKC,OAASc,kDAnChBC,mBAAA,WACEC,KAAKvB,MAAMc,SAASU,YAAaD,KAAKvB,MAAMG,OAAOC,YACnDmB,KAAKvB,MAAMc,SAASW,YAAeF,KAAKvB,MAAMG,OAAOC,eAGvDsB,0BAAA,SAA2BC,GACrBA,EAAUxB,OAAOC,YAAcmB,KAAKvB,MAAMG,OAAOC,WAAauB,EAAUxB,OAAOC,YACjFmB,KAAKvB,MAAMc,SAASU,YAAaG,EAAUxB,OAAOC,YAClDmB,KAAKvB,MAAMc,SAASW,YAAeE,EAAUxB,OAAOC,gBA8BxDwB,OAAA,WAAU,IAAAC,EACwBN,KAAKvB,MAA7BC,EADA4B,EACA5B,WAAYI,EADZwB,EACYxB,QAEhByB,EAAW,KAEf,OAAK7B,GAQDI,IACFyB,EAAWC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CAAUC,QAASX,KAAKY,kBAInCC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,IAAKjB,KAAKkB,QAChBV,OAAAC,EAAA,EAAAD,CAACW,EAAA,EAAD,CAAqBR,QAASX,KAAKoB,oBAEnCZ,OAAAC,EAAA,EAAAD,CAACa,EAAA,EAAD,CAAiBC,UAAU,YAAYC,mBAAoBvB,KAAKuB,yBAAhE,EACEf,OAAAC,EAAA,EAAAD,CAAA,OAAKgB,UAAU,aAAaC,SAAUzB,KAAK0B,mBAA3C,EACElB,OAAAC,EAAA,EAAAD,CAAA,OAAKgB,UAAU,kBAAf,EACEhB,OAAAC,EAAA,EAAAD,CAACmB,EAAA,EAAD,CAAiB9C,UAAWmB,KAAKvB,MAAMG,OAAOC,UAAW+C,UAAQ,IAChElD,EAAWmD,IAAI,SAAAC,GAAE,OAAItB,OAAAC,EAAA,EAAAD,CAACuB,EAAA,EAAD,CAA2BD,GAAIA,EAAIE,UAAU,GAAtBF,KAC5CvB,OAnBPC,OAAAC,EAAA,EAAAD,CAACQ,EAAA,EAAD,UACER,OAAAC,EAAA,EAAAD,CAACyB,EAAA,EAAD,SAvD6BC,+BAElB,CACjBtD,OAAQuD,IAAUC,OAAOC,WACzB9C,SAAU4C,IAAUG,KAAKD,WACzB3D,WAAY6D,IAAmBC,KAC/B1D,QAASqD,IAAUM","file":"flavours/glitch/async/following.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport LoadingIndicator from 'flavours/glitch/components/loading_indicator';\nimport {\n  fetchAccount,\n  fetchFollowing,\n  expandFollowing,\n} from 'flavours/glitch/actions/accounts';\nimport { ScrollContainer } from 'react-router-scroll-4';\nimport AccountContainer from 'flavours/glitch/containers/account_container';\nimport Column from 'flavours/glitch/features/ui/components/column';\nimport ProfileColumnHeader from 'flavours/glitch/features/account/components/profile_column_header';\nimport HeaderContainer from 'flavours/glitch/features/account_timeline/containers/header_container';\nimport LoadMore from 'flavours/glitch/components/load_more';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nconst mapStateToProps = (state, props) => ({\n  accountIds: state.getIn(['user_lists', 'following', props.params.accountId, 'items']),\n  hasMore: !!state.getIn(['user_lists', 'following', props.params.accountId, 'next']),\n});\n\n@connect(mapStateToProps)\nexport default class Following extends ImmutablePureComponent {\n\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    accountIds: ImmutablePropTypes.list,\n    hasMore: PropTypes.bool,\n  };\n\n  componentWillMount () {\n    this.props.dispatch(fetchAccount(this.props.params.accountId));\n    this.props.dispatch(fetchFollowing(this.props.params.accountId));\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.params.accountId !== this.props.params.accountId && nextProps.params.accountId) {\n      this.props.dispatch(fetchAccount(nextProps.params.accountId));\n      this.props.dispatch(fetchFollowing(nextProps.params.accountId));\n    }\n  }\n\n  handleHeaderClick = () => {\n    this.column.scrollTop();\n  }\n\n  handleScroll = (e) => {\n    const { scrollTop, scrollHeight, clientHeight } = e.target;\n\n    if (scrollTop === scrollHeight - clientHeight && this.props.hasMore) {\n      this.props.dispatch(expandFollowing(this.props.params.accountId));\n    }\n  }\n\n  handleLoadMore = (e) => {\n    e.preventDefault();\n    this.props.dispatch(expandFollowing(this.props.params.accountId));\n  }\n\n  shouldUpdateScroll = (prevRouterProps, { location }) => {\n    if ((((prevRouterProps || {}).location || {}).state || {}).mastodonModalOpen) return false;\n    return !(location.state && location.state.mastodonModalOpen);\n  }\n\n  setRef = c => {\n    this.column = c;\n  }\n\n  render () {\n    const { accountIds, hasMore } = this.props;\n\n    let loadMore = null;\n\n    if (!accountIds) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    if (hasMore) {\n      loadMore = <LoadMore onClick={this.handleLoadMore} />;\n    }\n\n    return (\n      <Column ref={this.setRef}>\n        <ProfileColumnHeader onClick={this.handleHeaderClick} />\n\n        <ScrollContainer scrollKey='following' shouldUpdateScroll={this.shouldUpdateScroll}>\n          <div className='scrollable' onScroll={this.handleScroll}>\n            <div className='following'>\n              <HeaderContainer accountId={this.props.params.accountId} hideTabs />\n              {accountIds.map(id => <AccountContainer key={id} id={id} withNote={false} />)}\n              {loadMore}\n            </div>\n          </div>\n        </ScrollContainer>\n      </Column>\n    );\n  }\n\n}\n"],"sourceRoot":""}
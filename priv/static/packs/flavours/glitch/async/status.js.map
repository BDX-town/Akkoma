{"version":3,"sources":["webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/flavours/glitch/features/status/components/detailed_status.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/flavours/glitch/features/status/components/action_bar.js","webpack:///app/javascript/builds/pleroma/mastofe/app/javascript/flavours/glitch/features/status/index.js"],"names":["DetailedStatus","height","e","button","ctrlKey","altKey","metaKey","_this","context","router","preventDefault","history","push","props","status","getIn","stopPropagation","destination","media","startTime","onOpenVideo","c","node","_measureHeight","href","target","nodeName","parentNode","window","open","heightJustChanged","_this2","this","measureHeight","scheduleIdleTask","setState","Math","ceil","scrollHeight","onHeightChange","componentDidUpdate","prevProps","prevState","state","render","get","_this$props","expanded","onToggleHidden","settings","outerStyle","boxSizing","compact","mediaIcon","applicationLink","reblogLink","reblogIcon","favouriteLink","size","some","item","Object","_babel_runtime_helpers_esm_jsx__WEBPACK_IMPORTED_MODULE_0__","flavours_glitch_components_attachment_list__WEBPACK_IMPORTED_MODULE_11__","video","flavours_glitch_features_video__WEBPACK_IMPORTED_MODULE_16__","preview","src","alt","inline","sensitive","letterbox","fullwidth","preventPlayback","handleOpenVideo","autoplay","flavours_glitch_components_media_gallery__WEBPACK_IMPORTED_MODULE_10__","standalone","hidden","onOpenMedia","_card__WEBPACK_IMPORTED_MODULE_14__","card","className","rel","react_router_dom__WEBPACK_IMPORTED_MODULE_12__","to","react_intl__WEBPACK_IMPORTED_MODULE_13__","value","onClick","handleModalLink","style","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","ref","setRef","classNames","data-status-by","handleAccountClick","flavours_glitch_components_avatar__WEBPACK_IMPORTED_MODULE_7__","account","flavours_glitch_components_display_name__WEBPACK_IMPORTED_MODULE_8__","localDomain","domain","flavours_glitch_components_status_content__WEBPACK_IMPORTED_MODULE_9__","collapsed","onExpandedToggle","parseClick","onUpdate","handleChildUpdate","Date","hour12","year","month","day","hour","minute","flavours_glitch_components_status_visibility_icon__WEBPACK_IMPORTED_MODULE_17__","visibility","ImmutablePureComponent","PropTypes","object","ImmutablePropTypes","map","isRequired","func","bool","string","messages","defineMessages","delete","id","defaultMessage","redraft","direct","mention","reply","reblog","reblog_private","cannot_reblog","favourite","bookmark","mute","muteConversation","unmuteConversation","block","report","share","pin","unpin","embed","admin_account","admin_status","copy","ActionBar","injectIntl","onReply","onReblog","onFavourite","onBookmark","onDelete","onDirect","onMention","onMute","onMuteConversation","onBlock","onReport","onPin","navigator","text","url","onEmbed","textarea","document","textContent","position","body","appendChild","select","execCommand","removeChild","intl","publicStatus","includes","mutingConversation","menu","formatMessage","action","handleCopy","handleEmbed","me","handlePinClick","handleConversationMuteClick","handleDeleteClick","name","handleMentionClick","handleDirectClick","handleMuteClick","handleBlockClick","handleReport","isStaff","accountAdminLink","statusAdminLink","undefined","shareButton","jsx","icon_button","title","icon","handleShare","reblog_disabled","reblog_message","handleReplyClick","disabled","active","handleReblogClick","animate","handleFavouriteClick","handleBookmarkClick","dropdown_menu_container","items","direction","ariaLabel","React","PureComponent","deleteConfirm","deleteMessage","redraftConfirm","redraftMessage","blockConfirm","revealAll","hideAll","detailedStatus","replyConfirm","replyMessage","Status","connect","getStatus","makeGetStatus","params","statusId","ancestorsIds","Immutable","List","descendantsIds","withMutations","mutable","unshift","ids","length","shift","replies","reverse","forEach","askReplyConfirmation","trim","fullscreen","isExpanded","threadExpanded","setExpansion","dispatch","unfavourite","shiftKey","favouriteModal","handleModalFavourite","openModal","message","confirm","onDoNotAsk","changeLocalSetting","onConfirm","replyCompose","unreblog","boostModal","handleModalReblog","unbookmark","withRedraft","_this$props2","deleteModal","deleteStatus","directCompose","mentionCompose","index","time","initMuteModal","unmuteStatus","muteStatus","_this$props3","index_es","values","blockAccount","initReport","handleMoveUp","handleMoveDown","_this$props4","_selectChild","indexOf","_this$props5","isFullscreen","prevRouterProps","_ref","location","mastodonModalOpen","componentDidMount","attachFullscreenListener","onFullScreenChange","fetchStatus","_this$props6","element","querySelectorAll","requestAnimationFrame","scrollIntoView","getDerivedStateFromProps","autoUnfoldCW","focus","renderChildren","list","status_container","onMoveUp","onMoveDown","contextType","_this$props7","componentWillUnmount","detachFullscreenListener","ancestors","descendants","_this$props8","_this$state","column","column_back_button","missing_indicator","handlers","moveUp","handleHotkeyMoveUp","moveDown","handleHotkeyMoveDown","handleHotkeyReply","handleHotkeyFavourite","boost","handleHotkeyBoost","handleHotkeyMention","openProfile","handleHotkeyOpenProfile","toggleSpoiler","handleExpandedToggle","label","column_header","showBackButton","extraButton","aria-label","handleToggleAll","aria-pressed","react_router_scroll_4_es","scrollKey","shouldUpdateScroll","react_default","react_hotkeys_index_es","tabIndex","textForScreenReader","detailed_status","handleOpenMedia","action_bar_ActionBar","handlePin"],"mappings":"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","file":"flavours/glitch/async/status.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport Avatar from 'flavours/glitch/components/avatar';\nimport DisplayName from 'flavours/glitch/components/display_name';\nimport StatusContent from 'flavours/glitch/components/status_content';\nimport MediaGallery from 'flavours/glitch/components/media_gallery';\nimport AttachmentList from 'flavours/glitch/components/attachment_list';\nimport { Link } from 'react-router-dom';\nimport { FormattedDate, FormattedNumber } from 'react-intl';\nimport Card from './card';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport Video from 'flavours/glitch/features/video';\nimport VisibilityIcon from 'flavours/glitch/components/status_visibility_icon';\nimport scheduleIdleTask from 'flavours/glitch/util/schedule_idle_task';\nimport classNames from 'classnames';\n\nexport default class DetailedStatus extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    status: ImmutablePropTypes.map.isRequired,\n    settings: ImmutablePropTypes.map.isRequired,\n    onOpenMedia: PropTypes.func.isRequired,\n    onOpenVideo: PropTypes.func.isRequired,\n    onToggleHidden: PropTypes.func,\n    expanded: PropTypes.bool,\n    measureHeight: PropTypes.bool,\n    onHeightChange: PropTypes.func,\n    domain: PropTypes.string.isRequired,\n    compact: PropTypes.bool,\n  };\n\n  state = {\n    height: null,\n  };\n\n  handleAccountClick = (e) => {\n    if (e.button === 0 && !(e.ctrlKey || e.altKey || e.metaKey) && this.context.router) {\n      e.preventDefault();\n      this.context.router.history.push(`/accounts/${this.props.status.getIn(['account', 'id'])}`);\n    }\n\n    e.stopPropagation();\n  }\n\n  parseClick = (e, destination) => {\n    if (e.button === 0 && !(e.ctrlKey || e.altKey || e.metaKey) && this.context.router) {\n      e.preventDefault();\n      this.context.router.history.push(destination);\n    }\n\n    e.stopPropagation();\n  }\n\n  handleOpenVideo = (media, startTime) => {\n    this.props.onOpenVideo(media, startTime);\n  }\n\n  _measureHeight (heightJustChanged) {\n    if (this.props.measureHeight && this.node) {\n      scheduleIdleTask(() => this.node && this.setState({ height: Math.ceil(this.node.scrollHeight) + 1 }));\n\n      if (this.props.onHeightChange && heightJustChanged) {\n        this.props.onHeightChange();\n      }\n    }\n  }\n\n  setRef = c => {\n    this.node = c;\n    this._measureHeight();\n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    this._measureHeight(prevState.height !== this.state.height);\n  }\n\n  handleChildUpdate = () => {\n    this._measureHeight();\n  }\n\n  handleModalLink = e => {\n    e.preventDefault();\n\n    let href;\n\n    if (e.target.nodeName !== 'A') {\n      href = e.target.parentNode.href;\n    } else {\n      href = e.target.href;\n    }\n\n    window.open(href, 'mastodon-intent', 'width=445,height=600,resizable=no,menubar=no,status=no,scrollbars=yes');\n  }\n\n  render () {\n    const status = (this.props.status && this.props.status.get('reblog')) ? this.props.status.get('reblog') : this.props.status;\n    const { expanded, onToggleHidden, settings } = this.props;\n    const outerStyle = { boxSizing: 'border-box' };\n    const { compact } = this.props;\n\n    if (!status) {\n      return null;\n    }\n\n    let media           = '';\n    let mediaIcon       = null;\n    let applicationLink = '';\n    let reblogLink = '';\n    let reblogIcon = 'retweet';\n    let favouriteLink = '';\n\n    if (this.props.measureHeight) {\n      outerStyle.height = `${this.state.height}px`;\n    }\n\n    if (status.get('media_attachments').size > 0) {\n      if (status.get('media_attachments').some(item => item.get('type') === 'unknown')) {\n        media = <AttachmentList media={status.get('media_attachments')} />;\n      } else if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        const video = status.getIn(['media_attachments', 0]);\n        media = (\n          <Video\n            preview={video.get('preview_url')}\n            src={video.get('url')}\n            alt={video.get('description')}\n            inline\n            sensitive={status.get('sensitive')}\n            letterbox={settings.getIn(['media', 'letterbox'])}\n            fullwidth={settings.getIn(['media', 'fullwidth'])}\n            preventPlayback={!expanded}\n            onOpenVideo={this.handleOpenVideo}\n            autoplay\n          />\n        );\n        mediaIcon = 'video-camera';\n      } else {\n        media = (\n          <MediaGallery\n            standalone\n            sensitive={status.get('sensitive')}\n            media={status.get('media_attachments')}\n            letterbox={settings.getIn(['media', 'letterbox'])}\n            fullwidth={settings.getIn(['media', 'fullwidth'])}\n            hidden={!expanded}\n            onOpenMedia={this.props.onOpenMedia}\n          />\n        );\n        mediaIcon = 'picture-o';\n      }\n    } else media = <Card onOpenMedia={this.props.onOpenMedia} card={status.get('card', null)} />;\n\n    if (status.get('application')) {\n      applicationLink = <span> · <a className='detailed-status__application' href={status.getIn(['application', 'website'])} target='_blank' rel='noopener'>{status.getIn(['application', 'name'])}</a></span>;\n    }\n\n    if (status.get('visibility') === 'direct') {\n      reblogIcon = 'envelope';\n    } else if (status.get('visibility') === 'private') {\n      reblogIcon = 'lock';\n    }\n\n    if (status.get('visibility') === 'private') {\n      reblogLink = <i className={`fa fa-${reblogIcon}`} />;\n    } else if (this.context.router) {\n      reblogLink = (\n        <Link to={`/statuses/${status.get('id')}/reblogs`} className='detailed-status__link'>\n          <i className={`fa fa-${reblogIcon}`} />\n          <span className='detailed-status__reblogs'>\n            <FormattedNumber value={status.get('reblogs_count')} />\n          </span>\n        </Link>\n      );\n    } else {\n      reblogLink = (\n        <a href={`/interact/${status.get('id')}?type=reblog`} className='detailed-status__link' onClick={this.handleModalLink}>\n          <i className={`fa fa-${reblogIcon}`} />\n          <span className='detailed-status__reblogs'>\n            <FormattedNumber value={status.get('reblogs_count')} />\n          </span>\n        </a>\n      );\n    }\n\n    if (this.context.router) {\n      favouriteLink = (\n        <Link to={`/statuses/${status.get('id')}/favourites`} className='detailed-status__link'>\n          <i className='fa fa-star' />\n          <span className='detailed-status__favorites'>\n            <FormattedNumber value={status.get('favourites_count')} />\n          </span>\n        </Link>\n      );\n    } else {\n      favouriteLink = (\n        <a href={`/interact/${status.get('id')}?type=favourite`} className='detailed-status__link' onClick={this.handleModalLink}>\n          <i className='fa fa-star' />\n          <span className='detailed-status__favorites'>\n            <FormattedNumber value={status.get('favourites_count')} />\n          </span>\n        </a>\n      );\n    }\n\n    return (\n      <div style={outerStyle}>\n        <div ref={this.setRef} className={classNames('detailed-status', { compact })} data-status-by={status.getIn(['account', 'acct'])}>\n          <a href={status.getIn(['account', 'url'])} onClick={this.handleAccountClick} className='detailed-status__display-name'>\n            <div className='detailed-status__display-avatar'><Avatar account={status.get('account')} size={48} /></div>\n            <DisplayName account={status.get('account')} localDomain={this.props.domain} />\n          </a>\n\n          <StatusContent\n            status={status}\n            media={media}\n            mediaIcon={mediaIcon}\n            expanded={expanded}\n            collapsed={false}\n            onExpandedToggle={onToggleHidden}\n            parseClick={this.parseClick}\n            onUpdate={this.handleChildUpdate}\n          />\n\n          <div className='detailed-status__meta'>\n            <a className='detailed-status__datetime' href={status.get('url')} target='_blank' rel='noopener'>\n              <FormattedDate value={new Date(status.get('created_at'))} hour12={false} year='numeric' month='short' day='2-digit' hour='2-digit' minute='2-digit' />\n            </a>{applicationLink} · {reblogLink} · {favouriteLink} · <VisibilityIcon visibility={status.get('visibility')} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from 'flavours/glitch/components/icon_button';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport DropdownMenuContainer from 'flavours/glitch/containers/dropdown_menu_container';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { me, isStaff } from 'flavours/glitch/util/initial_state';\nimport { accountAdminLink, statusAdminLink } from 'flavours/glitch/util/backend_links';\n\nconst messages = defineMessages({\n  delete: { id: 'status.delete', defaultMessage: 'Delete' },\n  redraft: { id: 'status.redraft', defaultMessage: 'Delete & re-draft' },\n  direct: { id: 'status.direct', defaultMessage: 'Direct message @{name}' },\n  mention: { id: 'status.mention', defaultMessage: 'Mention @{name}' },\n  reply: { id: 'status.reply', defaultMessage: 'Reply' },\n  reblog: { id: 'status.reblog', defaultMessage: 'Boost' },\n  reblog_private: { id: 'status.reblog_private', defaultMessage: 'Boost to original audience' },\n  cannot_reblog: { id: 'status.cannot_reblog', defaultMessage: 'This post cannot be boosted' },\n  favourite: { id: 'status.favourite', defaultMessage: 'Favourite' },\n  bookmark: { id: 'status.bookmark', defaultMessage: 'Bookmark' },\n  mute: { id: 'status.mute', defaultMessage: 'Mute @{name}' },\n  muteConversation: { id: 'status.mute_conversation', defaultMessage: 'Mute conversation' },\n  unmuteConversation: { id: 'status.unmute_conversation', defaultMessage: 'Unmute conversation' },\n  block: { id: 'status.block', defaultMessage: 'Block @{name}' },\n  report: { id: 'status.report', defaultMessage: 'Report @{name}' },\n  share: { id: 'status.share', defaultMessage: 'Share' },\n  pin: { id: 'status.pin', defaultMessage: 'Pin on profile' },\n  unpin: { id: 'status.unpin', defaultMessage: 'Unpin from profile' },\n  embed: { id: 'status.embed', defaultMessage: 'Embed' },\n  admin_account: { id: 'status.admin_account', defaultMessage: 'Open moderation interface for @{name}' },\n  admin_status: { id: 'status.admin_status', defaultMessage: 'Open this status in the moderation interface' },\n  copy: { id: 'status.copy', defaultMessage: 'Copy link to status' },\n});\n\n@injectIntl\nexport default class ActionBar extends React.PureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    status: ImmutablePropTypes.map.isRequired,\n    onReply: PropTypes.func.isRequired,\n    onReblog: PropTypes.func.isRequired,\n    onFavourite: PropTypes.func.isRequired,\n    onBookmark: PropTypes.func.isRequired,\n    onMute: PropTypes.func,\n    onMuteConversation: PropTypes.func,\n    onBlock: PropTypes.func,\n    onDelete: PropTypes.func.isRequired,\n    onDirect: PropTypes.func.isRequired,\n    onMention: PropTypes.func.isRequired,\n    onReport: PropTypes.func,\n    onPin: PropTypes.func,\n    onEmbed: PropTypes.func,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleReplyClick = () => {\n    this.props.onReply(this.props.status);\n  }\n\n  handleReblogClick = (e) => {\n    this.props.onReblog(this.props.status, e);\n  }\n\n  handleFavouriteClick = (e) => {\n    this.props.onFavourite(this.props.status, e);\n  }\n\n  handleBookmarkClick = (e) => {\n    this.props.onBookmark(this.props.status, e);\n  }\n\n  handleDeleteClick = () => {\n    this.props.onDelete(this.props.status, this.context.router.history);\n  }\n\n  handleRedraftClick = () => {\n    this.props.onDelete(this.props.status, this.context.router.history, true);\n  }\n\n  handleDirectClick = () => {\n    this.props.onDirect(this.props.status.get('account'), this.context.router.history);\n  }\n\n  handleMentionClick = () => {\n    this.props.onMention(this.props.status.get('account'), this.context.router.history);\n  }\n\n  handleMuteClick = () => {\n    this.props.onMute(this.props.status.get('account'));\n  }\n\n  handleConversationMuteClick = () => {\n    this.props.onMuteConversation(this.props.status);\n  }\n\n  handleBlockClick = () => {\n    this.props.onBlock(this.props.status.get('account'));\n  }\n\n  handleReport = () => {\n    this.props.onReport(this.props.status);\n  }\n\n  handlePinClick = () => {\n    this.props.onPin(this.props.status);\n  }\n\n  handleShare = () => {\n    navigator.share({\n      text: this.props.status.get('search_index'),\n      url: this.props.status.get('url'),\n    });\n  }\n\n  handleEmbed = () => {\n    this.props.onEmbed(this.props.status);\n  }\n\n  handleCopy = () => {\n    const url      = this.props.status.get('url');\n    const textarea = document.createElement('textarea');\n\n    textarea.textContent    = url;\n    textarea.style.position = 'fixed';\n\n    document.body.appendChild(textarea);\n\n    try {\n      textarea.select();\n      document.execCommand('copy');\n    } catch (e) {\n\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n\n  render () {\n    const { status, intl } = this.props;\n\n    const publicStatus = ['public', 'unlisted'].includes(status.get('visibility'));\n    const mutingConversation = status.get('muted');\n\n    let menu = [];\n\n    if (publicStatus) {\n      menu.push({ text: intl.formatMessage(messages.copy), action: this.handleCopy });\n      menu.push({ text: intl.formatMessage(messages.embed), action: this.handleEmbed });\n      menu.push(null);\n    }\n\n    if (me === status.getIn(['account', 'id'])) {\n      if (publicStatus) {\n        menu.push({ text: intl.formatMessage(status.get('pinned') ? messages.unpin : messages.pin), action: this.handlePinClick });\n      }\n\n      menu.push(null);\n      menu.push({ text: intl.formatMessage(mutingConversation ? messages.unmuteConversation : messages.muteConversation), action: this.handleConversationMuteClick });\n      menu.push(null);\n      menu.push({ text: intl.formatMessage(messages.delete), action: this.handleDeleteClick });\n    } else {\n      menu.push({ text: intl.formatMessage(messages.mention, { name: status.getIn(['account', 'username']) }), action: this.handleMentionClick });\n      menu.push({ text: intl.formatMessage(messages.direct, { name: status.getIn(['account', 'username']) }), action: this.handleDirectClick });\n      menu.push(null);\n      menu.push({ text: intl.formatMessage(messages.mute, { name: status.getIn(['account', 'username']) }), action: this.handleMuteClick });\n      menu.push({ text: intl.formatMessage(messages.block, { name: status.getIn(['account', 'username']) }), action: this.handleBlockClick });\n      menu.push({ text: intl.formatMessage(messages.report, { name: status.getIn(['account', 'username']) }), action: this.handleReport });\n      if (isStaff && (accountAdminLink || statusAdminLink)) {\n        menu.push(null);\n        if (accountAdminLink !== undefined) {\n          menu.push({\n            text: intl.formatMessage(messages.admin_account, { name: status.getIn(['account', 'username']) }),\n            href: accountAdminLink(status.getIn(['account', 'id'])),\n          });\n        }\n        if (statusAdminLink !== undefined) {\n          menu.push({\n            text: intl.formatMessage(messages.admin_status),\n            href: statusAdminLink(status.getIn(['account', 'id']), status.get('id')),\n          });\n        }\n      }\n    }\n\n    const shareButton = ('share' in navigator) && status.get('visibility') === 'public' && (\n      <div className='detailed-status__button'><IconButton title={intl.formatMessage(messages.share)} icon='share-alt' onClick={this.handleShare} /></div>\n    );\n\n    let reblogIcon = 'retweet';\n    //if (status.get('visibility') === 'direct') reblogIcon = 'envelope';\n    // else if (status.get('visibility') === 'private') reblogIcon = 'lock';\n\n    let reblog_disabled = (status.get('visibility') === 'direct' || (status.get('visibility') === 'private' && me !== status.getIn(['account', 'id'])));\n    let reblog_message  = status.get('visibility') === 'private' ? messages.reblog_private : messages.reblog;\n\n    return (\n      <div className='detailed-status__action-bar'>\n        <div className='detailed-status__button'><IconButton title={intl.formatMessage(messages.reply)} icon={status.get('in_reply_to_id', null) === null ? 'reply' : 'reply-all'} onClick={this.handleReplyClick} /></div>\n        <div className='detailed-status__button'><IconButton disabled={reblog_disabled} active={status.get('reblogged')} title={reblog_disabled ? intl.formatMessage(messages.cannot_reblog) : intl.formatMessage(reblog_message)} icon={reblogIcon} onClick={this.handleReblogClick} /></div>\n        <div className='detailed-status__button'><IconButton className='star-icon' animate active={status.get('favourited')} title={intl.formatMessage(messages.favourite)} icon='star' onClick={this.handleFavouriteClick} /></div>\n        {shareButton}\n        <div className='detailed-status__button'><IconButton className='bookmark-icon' active={status.get('bookmarked')} title={intl.formatMessage(messages.bookmark)} icon='bookmark' onClick={this.handleBookmarkClick} /></div>\n\n        <div className='detailed-status__action-bar-dropdown'>\n          <DropdownMenuContainer size={18} icon='ellipsis-h' items={menu} direction='left' ariaLabel='More' />\n        </div>\n      </div>\n    );\n  }\n\n}\n","import Immutable from 'immutable';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { fetchStatus } from 'flavours/glitch/actions/statuses';\nimport MissingIndicator from 'flavours/glitch/components/missing_indicator';\nimport DetailedStatus from './components/detailed_status';\nimport ActionBar from './components/action_bar';\nimport Column from 'flavours/glitch/features/ui/components/column';\nimport {\n  favourite,\n  unfavourite,\n  bookmark,\n  unbookmark,\n  reblog,\n  unreblog,\n  pin,\n  unpin,\n} from 'flavours/glitch/actions/interactions';\nimport {\n  replyCompose,\n  mentionCompose,\n  directCompose,\n} from 'flavours/glitch/actions/compose';\nimport { changeLocalSetting } from 'flavours/glitch/actions/local_settings';\nimport { blockAccount } from 'flavours/glitch/actions/accounts';\nimport { muteStatus, unmuteStatus, deleteStatus } from 'flavours/glitch/actions/statuses';\nimport { initMuteModal } from 'flavours/glitch/actions/mutes';\nimport { initReport } from 'flavours/glitch/actions/reports';\nimport { makeGetStatus } from 'flavours/glitch/selectors';\nimport { ScrollContainer } from 'react-router-scroll-4';\nimport ColumnBackButton from 'flavours/glitch/components/column_back_button';\nimport ColumnHeader from '../../components/column_header';\nimport StatusContainer from 'flavours/glitch/containers/status_container';\nimport { openModal } from 'flavours/glitch/actions/modal';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { HotKeys } from 'react-hotkeys';\nimport { boostModal, favouriteModal, deleteModal } from 'flavours/glitch/util/initial_state';\nimport { attachFullscreenListener, detachFullscreenListener, isFullscreen } from 'flavours/glitch/util/fullscreen';\nimport { autoUnfoldCW } from 'flavours/glitch/util/content_warning';\nimport { textForScreenReader } from 'flavours/glitch/components/status';\n\nconst messages = defineMessages({\n  deleteConfirm: { id: 'confirmations.delete.confirm', defaultMessage: 'Delete' },\n  deleteMessage: { id: 'confirmations.delete.message', defaultMessage: 'Are you sure you want to delete this status?' },\n  redraftConfirm: { id: 'confirmations.redraft.confirm', defaultMessage: 'Delete & redraft' },\n  redraftMessage: { id: 'confirmations.redraft.message', defaultMessage: 'Are you sure you want to delete this status and re-draft it? You will lose all replies, boosts and favourites to it.' },\n  blockConfirm: { id: 'confirmations.block.confirm', defaultMessage: 'Block' },\n  revealAll: { id: 'status.show_more_all', defaultMessage: 'Show more for all' },\n  hideAll: { id: 'status.show_less_all', defaultMessage: 'Show less for all' },\n  detailedStatus: { id: 'status.detailed_status', defaultMessage: 'Detailed conversation view' },\n  replyConfirm: { id: 'confirmations.reply.confirm', defaultMessage: 'Reply' },\n  replyMessage: { id: 'confirmations.reply.message', defaultMessage: 'Replying now will overwrite the message you are currently composing. Are you sure you want to proceed?' },\n});\n\nconst makeMapStateToProps = () => {\n  const getStatus = makeGetStatus();\n\n  const mapStateToProps = (state, props) => {\n    const status = getStatus(state, { id: props.params.statusId });\n    let ancestorsIds = Immutable.List();\n    let descendantsIds = Immutable.List();\n\n    if (status) {\n      ancestorsIds = ancestorsIds.withMutations(mutable => {\n        let id = status.get('in_reply_to_id');\n\n        while (id) {\n          mutable.unshift(id);\n          id = state.getIn(['contexts', 'inReplyTos', id]);\n        }\n      });\n\n      descendantsIds = descendantsIds.withMutations(mutable => {\n        const ids = [status.get('id')];\n\n        while (ids.length > 0) {\n          let id        = ids.shift();\n          const replies = state.getIn(['contexts', 'replies', id]);\n\n          if (status.get('id') !== id) {\n            mutable.push(id);\n          }\n\n          if (replies) {\n            replies.reverse().forEach(reply => {\n              ids.unshift(reply);\n            });\n          }\n        }\n      });\n    }\n\n    return {\n      status,\n      ancestorsIds,\n      descendantsIds,\n      settings: state.get('local_settings'),\n      askReplyConfirmation: state.getIn(['local_settings', 'confirm_before_clearing_draft']) && state.getIn(['compose', 'text']).trim().length !== 0,\n      domain: state.getIn(['meta', 'domain']),\n    };\n  };\n\n  return mapStateToProps;\n};\n\n@injectIntl\n@connect(makeMapStateToProps)\nexport default class Status extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    status: ImmutablePropTypes.map,\n    settings: ImmutablePropTypes.map.isRequired,\n    ancestorsIds: ImmutablePropTypes.list,\n    descendantsIds: ImmutablePropTypes.list,\n    intl: PropTypes.object.isRequired,\n    askReplyConfirmation: PropTypes.bool,\n    domain: PropTypes.string.isRequired,\n  };\n\n  state = {\n    fullscreen: false,\n    isExpanded: undefined,\n    threadExpanded: undefined,\n    statusId: undefined,\n  };\n\n  componentDidMount () {\n    attachFullscreenListener(this.onFullScreenChange);\n    this.props.dispatch(fetchStatus(this.props.params.statusId));\n\n    const { status, ancestorsIds } = this.props;\n\n    if (status && ancestorsIds && ancestorsIds.size > 0) {\n      const element = this.node.querySelectorAll('.focusable')[ancestorsIds.size - 1];\n\n      window.requestAnimationFrame(() => {\n        element.scrollIntoView(true);\n      });\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (state.statusId === props.params.statusId || !props.params.statusId) {\n      return null;\n    }\n\n    props.dispatch(fetchStatus(props.params.statusId));\n\n    return {\n      threadExpanded: undefined,\n      isExpanded: autoUnfoldCW(props.settings, props.status),\n      statusId: props.params.statusId,\n    };\n  }\n\n  handleExpandedToggle = () => {\n    if (this.props.status.get('spoiler_text')) {\n      this.setExpansion(!this.state.isExpanded);\n    }\n  };\n\n  handleModalFavourite = (status) => {\n    this.props.dispatch(favourite(status));\n  }\n\n  handleFavouriteClick = (status, e) => {\n    if (status.get('favourited')) {\n      this.props.dispatch(unfavourite(status));\n    } else {\n      if ((e && e.shiftKey) || !favouriteModal) {\n        this.handleModalFavourite(status);\n      } else {\n        this.props.dispatch(openModal('FAVOURITE', { status, onFavourite: this.handleModalFavourite }));\n      }\n    }\n  }\n\n  handlePin = (status) => {\n    if (status.get('pinned')) {\n      this.props.dispatch(unpin(status));\n    } else {\n      this.props.dispatch(pin(status));\n    }\n  }\n\n  handleReplyClick = (status) => {\n    let { askReplyConfirmation, dispatch, intl } = this.props;\n    if (askReplyConfirmation) {\n      dispatch(openModal('CONFIRM', {\n        message: intl.formatMessage(messages.replyMessage),\n        confirm: intl.formatMessage(messages.replyConfirm),\n        onDoNotAsk: () => dispatch(changeLocalSetting(['confirm_before_clearing_draft'], false)),\n        onConfirm: () => dispatch(replyCompose(status, this.context.router.history)),\n      }));\n    } else {\n      dispatch(replyCompose(status, this.context.router.history));\n    }\n  }\n\n  handleModalReblog = (status) => {\n    this.props.dispatch(reblog(status));\n  }\n\n  handleReblogClick = (status, e) => {\n    if (status.get('reblogged')) {\n      this.props.dispatch(unreblog(status));\n    } else {\n      if ((e && e.shiftKey) || !boostModal) {\n        this.handleModalReblog(status);\n      } else {\n        this.props.dispatch(openModal('BOOST', { status, onReblog: this.handleModalReblog }));\n      }\n    }\n  }\n\n  handleBookmarkClick = (status) => {\n    if (status.get('bookmarked')) {\n      this.props.dispatch(unbookmark(status));\n    } else {\n      this.props.dispatch(bookmark(status));\n    }\n  }\n\n  handleDeleteClick = (status, history, withRedraft = false) => {\n    const { dispatch, intl } = this.props;\n\n    if (!deleteModal) {\n      dispatch(deleteStatus(status.get('id'), history, withRedraft));\n    } else {\n      dispatch(openModal('CONFIRM', {\n        message: intl.formatMessage(withRedraft ? messages.redraftMessage : messages.deleteMessage),\n        confirm: intl.formatMessage(withRedraft ? messages.redraftConfirm : messages.deleteConfirm),\n        onConfirm: () => dispatch(deleteStatus(status.get('id'), history, withRedraft)),\n      }));\n    }\n  }\n\n  handleDirectClick = (account, router) => {\n    this.props.dispatch(directCompose(account, router));\n  }\n\n  handleMentionClick = (account, router) => {\n    this.props.dispatch(mentionCompose(account, router));\n  }\n\n  handleOpenMedia = (media, index) => {\n    this.props.dispatch(openModal('MEDIA', { media, index }));\n  }\n\n  handleOpenVideo = (media, time) => {\n    this.props.dispatch(openModal('VIDEO', { media, time }));\n  }\n\n  handleMuteClick = (account) => {\n    this.props.dispatch(initMuteModal(account));\n  }\n\n  handleConversationMuteClick = (status) => {\n    if (status.get('muted')) {\n      this.props.dispatch(unmuteStatus(status.get('id')));\n    } else {\n      this.props.dispatch(muteStatus(status.get('id')));\n    }\n  }\n\n  handleToggleAll = () => {\n    const { isExpanded } = this.state;\n    this.setState({ isExpanded: !isExpanded, threadExpanded: !isExpanded });\n  }\n\n  handleBlockClick = (account) => {\n    const { dispatch, intl } = this.props;\n\n    dispatch(openModal('CONFIRM', {\n      message: <FormattedMessage id='confirmations.block.message' defaultMessage='Are you sure you want to block {name}?' values={{ name: <strong>@{account.get('acct')}</strong> }} />,\n      confirm: intl.formatMessage(messages.blockConfirm),\n      onConfirm: () => dispatch(blockAccount(account.get('id'))),\n    }));\n  }\n\n  handleReport = (status) => {\n    this.props.dispatch(initReport(status.get('account'), status));\n  }\n\n  handleEmbed = (status) => {\n    this.props.dispatch(openModal('EMBED', { url: status.get('url') }));\n  }\n\n  handleHotkeyMoveUp = () => {\n    this.handleMoveUp(this.props.status.get('id'));\n  }\n\n  handleHotkeyMoveDown = () => {\n    this.handleMoveDown(this.props.status.get('id'));\n  }\n\n  handleHotkeyReply = e => {\n    e.preventDefault();\n    this.handleReplyClick(this.props.status);\n  }\n\n  handleHotkeyFavourite = () => {\n    this.handleFavouriteClick(this.props.status);\n  }\n\n  handleHotkeyBoost = () => {\n    this.handleReblogClick(this.props.status);\n  }\n\n  handleHotkeyMention = e => {\n    e.preventDefault();\n    this.handleMentionClick(this.props.status);\n  }\n\n  handleHotkeyOpenProfile = () => {\n    this.context.router.history.push(`/accounts/${this.props.status.getIn(['account', 'id'])}`);\n  }\n\n  handleMoveUp = id => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n\n    if (id === status.get('id')) {\n      this._selectChild(ancestorsIds.size - 1);\n    } else {\n      let index = ancestorsIds.indexOf(id);\n\n      if (index === -1) {\n        index = descendantsIds.indexOf(id);\n        this._selectChild(ancestorsIds.size + index);\n      } else {\n        this._selectChild(index - 1);\n      }\n    }\n  }\n\n  handleMoveDown = id => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n\n    if (id === status.get('id')) {\n      this._selectChild(ancestorsIds.size + 1);\n    } else {\n      let index = ancestorsIds.indexOf(id);\n\n      if (index === -1) {\n        index = descendantsIds.indexOf(id);\n        this._selectChild(ancestorsIds.size + index + 2);\n      } else {\n        this._selectChild(index + 1);\n      }\n    }\n  }\n\n  _selectChild (index) {\n    const element = this.node.querySelectorAll('.focusable')[index];\n\n    if (element) {\n      element.focus();\n    }\n  }\n\n  renderChildren (list) {\n    return list.map(id => (\n      <StatusContainer\n        key={id}\n        id={id}\n        expanded={this.state.threadExpanded}\n        onMoveUp={this.handleMoveUp}\n        onMoveDown={this.handleMoveDown}\n        contextType='thread'\n      />\n    ));\n  }\n\n  setExpansion = value => {\n    this.setState({ isExpanded: value });\n  }\n\n  setRef = c => {\n    this.node = c;\n  }\n\n  componentDidUpdate (prevProps) {\n    if (this.props.params.statusId && (this.props.params.statusId !== prevProps.params.statusId || prevProps.ancestorsIds.size < this.props.ancestorsIds.size)) {\n      const { status, ancestorsIds } = this.props;\n\n      if (status && ancestorsIds && ancestorsIds.size > 0) {\n        const element = this.node.querySelectorAll('.focusable')[ancestorsIds.size - 1];\n\n        window.requestAnimationFrame(() => {\n          element.scrollIntoView(true);\n        });\n      }\n    }\n  }\n\n  componentWillUnmount () {\n    detachFullscreenListener(this.onFullScreenChange);\n  }\n\n  onFullScreenChange = () => {\n    this.setState({ fullscreen: isFullscreen() });\n  }\n\n  shouldUpdateScroll = (prevRouterProps, { location }) => {\n    if ((((prevRouterProps || {}).location || {}).state || {}).mastodonModalOpen) return false;\n    return !(location.state && location.state.mastodonModalOpen);\n  }\n\n  render () {\n    let ancestors, descendants;\n    const { setExpansion } = this;\n    const { status, settings, ancestorsIds, descendantsIds, intl, domain } = this.props;\n    const { fullscreen, isExpanded } = this.state;\n\n    if (status === null) {\n      return (\n        <Column>\n          <ColumnBackButton />\n          <MissingIndicator />\n        </Column>\n      );\n    }\n\n    if (ancestorsIds && ancestorsIds.size > 0) {\n      ancestors = <div>{this.renderChildren(ancestorsIds)}</div>;\n    }\n\n    if (descendantsIds && descendantsIds.size > 0) {\n      descendants = <div>{this.renderChildren(descendantsIds)}</div>;\n    }\n\n    const handlers = {\n      moveUp: this.handleHotkeyMoveUp,\n      moveDown: this.handleHotkeyMoveDown,\n      reply: this.handleHotkeyReply,\n      favourite: this.handleHotkeyFavourite,\n      boost: this.handleHotkeyBoost,\n      mention: this.handleHotkeyMention,\n      openProfile: this.handleHotkeyOpenProfile,\n      toggleSpoiler: this.handleExpandedToggle,\n    };\n\n    return (\n      <Column label={intl.formatMessage(messages.detailedStatus)}>\n        <ColumnHeader\n          showBackButton\n          extraButton={(\n            <button className='column-header__button' title={intl.formatMessage(!isExpanded ? messages.revealAll : messages.hideAll)} aria-label={intl.formatMessage(!isExpanded ? messages.revealAll : messages.hideAll)} onClick={this.handleToggleAll} aria-pressed={!isExpanded ? 'false' : 'true'}><i className={`fa fa-${!isExpanded ? 'eye-slash' : 'eye'}`} /></button>\n          )}\n        />\n\n        <ScrollContainer scrollKey='thread' shouldUpdateScroll={this.shouldUpdateScroll}>\n          <div className={classNames('scrollable', 'detailed-status__wrapper', { fullscreen })} ref={this.setRef}>\n            {ancestors}\n\n            <HotKeys handlers={handlers}>\n              <div className='focusable' tabIndex='0' aria-label={textForScreenReader(intl, status, false, !status.get('hidden'))}>\n                <DetailedStatus\n                  status={status}\n                  settings={settings}\n                  onOpenVideo={this.handleOpenVideo}\n                  onOpenMedia={this.handleOpenMedia}\n                  expanded={isExpanded}\n                  onToggleHidden={this.handleExpandedToggle}\n                  domain={domain}\n                />\n\n                <ActionBar\n                  status={status}\n                  onReply={this.handleReplyClick}\n                  onFavourite={this.handleFavouriteClick}\n                  onReblog={this.handleReblogClick}\n                  onBookmark={this.handleBookmarkClick}\n                  onDelete={this.handleDeleteClick}\n                  onDirect={this.handleDirectClick}\n                  onMention={this.handleMentionClick}\n                  onMute={this.handleMuteClick}\n                  onMuteConversation={this.handleConversationMuteClick}\n                  onBlock={this.handleBlockClick}\n                  onReport={this.handleReport}\n                  onPin={this.handlePin}\n                  onEmbed={this.handleEmbed}\n                />\n              </div>\n            </HotKeys>\n\n            {descendants}\n          </div>\n        </ScrollContainer>\n      </Column>\n    );\n  }\n\n}\n"],"sourceRoot":""}
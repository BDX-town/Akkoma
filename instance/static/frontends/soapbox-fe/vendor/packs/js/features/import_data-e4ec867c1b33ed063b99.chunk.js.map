{"version":3,"sources":["webpack:///./app/soapbox/actions/import_data.js","webpack:///./app/soapbox/features/import_data/components/csv_importer.js","webpack:///./app/soapbox/features/import_data/index.js"],"names":["importFollows","params","dispatch","getState","type","api","post","then","response","snackbar","success","config","data","catch","error","importBlocks","importMutes","CSVImporter","connect","injectIntl","file","isLoading","event","props","action","FormData","append","state","setState","preventDefault","e","target","files","render","this","intl","messages","onSubmit","handleSubmit","disabled","className","accept","label","formatMessage","input_label","hint","input_hint","onChange","handleFileChange","required","name","submit","ImmutablePureComponent","PropTypes","func","isRequired","object","defineMessages","heading","followMessages","blockMessages","muteMessages","ImportData","features","getFeatures","get","icon","backBtnSlim"],"mappings":"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","file":"js/features/import_data-e4ec867c1b33ed063b99.chunk.js","sourcesContent":["import api from '../api';\nimport snackbar from 'soapbox/actions/snackbar';\n\nexport const IMPORT_FOLLOWS_REQUEST = 'IMPORT_FOLLOWS_REQUEST';\nexport const IMPORT_FOLLOWS_SUCCESS = 'IMPORT_FOLLOWS_SUCCESS';\nexport const IMPORT_FOLLOWS_FAIL    = 'IMPORT_FOLLOWS_FAIL';\n\nexport const IMPORT_BLOCKS_REQUEST = 'IMPORT_BLOCKS_REQUEST';\nexport const IMPORT_BLOCKS_SUCCESS = 'IMPORT_BLOCKS_SUCCESS';\nexport const IMPORT_BLOCKS_FAIL    = 'IMPORT_BLOCKS_FAIL';\n\nexport const IMPORT_MUTES_REQUEST = 'IMPORT_MUTES_REQUEST';\nexport const IMPORT_MUTES_SUCCESS = 'IMPORT_MUTES_SUCCESS';\nexport const IMPORT_MUTES_FAIL    = 'IMPORT_MUTES_FAIL';\n\nexport function importFollows(params) {\n  return (dispatch, getState) => {\n    dispatch({ type: IMPORT_FOLLOWS_REQUEST });\n    return api(getState)\n      .post('/api/pleroma/follow_import', params)\n      .then(response => {\n        dispatch(snackbar.success('Followers imported successfully'));\n        dispatch({ type: IMPORT_FOLLOWS_SUCCESS, config: response.data });\n      }).catch(error => {\n        dispatch({ type: IMPORT_FOLLOWS_FAIL, error });\n      });\n  };\n}\n\nexport function importBlocks(params) {\n  return (dispatch, getState) => {\n    dispatch({ type: IMPORT_BLOCKS_REQUEST });\n    return api(getState)\n      .post('/api/pleroma/blocks_import', params)\n      .then(response => {\n        dispatch(snackbar.success('Blocks imported successfully'));\n        dispatch({ type: IMPORT_BLOCKS_SUCCESS, config: response.data });\n      }).catch(error => {\n        dispatch({ type: IMPORT_BLOCKS_FAIL, error });\n      });\n  };\n}\n\nexport function importMutes(params) {\n  return (dispatch, getState) => {\n    dispatch({ type: IMPORT_MUTES_REQUEST });\n    return api(getState)\n      .post('/api/pleroma/mutes_import', params)\n      .then(response => {\n        dispatch(snackbar.success('Mutes imported successfully'));\n        dispatch({ type: IMPORT_MUTES_SUCCESS, config: response.data });\n      }).catch(error => {\n        dispatch({ type: IMPORT_MUTES_FAIL, error });\n      });\n  };\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport PropTypes from 'prop-types';\nimport {\n  SimpleInput,\n  SimpleForm,\n  FieldsGroup,\n} from 'soapbox/features/forms';\n\nexport default @connect()\n@injectIntl\nclass CSVImporter extends ImmutablePureComponent {\n\n  static propTypes = {\n    action: PropTypes.func.isRequired,\n    messages: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  state = {\n    file: null,\n    isLoading: false,\n  }\n\n  handleSubmit = (event) => {\n    const { dispatch, action } = this.props;\n\n    let params = new FormData();\n    params.append('list', this.state.file);\n\n    this.setState({ isLoading: true });\n    dispatch(action(params)).then(() => {\n      this.setState({ isLoading: false });\n    }).catch((error) => {\n      this.setState({ isLoading: false });\n    });\n\n    event.preventDefault();\n  }\n\n  handleFileChange = e => {\n    const [file] = e.target.files || [];\n    this.setState({ file });\n  }\n\n  render() {\n    const { intl, messages } = this.props;\n\n    return (\n      <SimpleForm onSubmit={this.handleSubmit}>\n        <fieldset disabled={this.state.isLoading}>\n          <FieldsGroup>\n            <div className='fields-row file-picker'>\n              <div className='fields-row__column fields-group fields-row__column-6'>\n                <SimpleInput\n                  type='file'\n                  accept={['.csv', 'text/csv']}\n                  label={intl.formatMessage(messages.input_label)}\n                  hint={intl.formatMessage(messages.input_hint)}\n                  onChange={this.handleFileChange}\n                  required\n                />\n              </div>\n            </div>\n          </FieldsGroup>\n        </fieldset>\n        <div className='actions'>\n          <button name='button' type='submit' className='btn button button-primary'>\n            {intl.formatMessage(messages.submit)}\n          </button>\n        </div>\n      </SimpleForm>\n    );\n  }\n\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport PropTypes from 'prop-types';\nimport Column from '../ui/components/column';\nimport {\n  importFollows,\n  importBlocks,\n  importMutes,\n} from 'soapbox/actions/import_data';\nimport CSVImporter from './components/csv_importer';\nimport { getFeatures } from 'soapbox/utils/features';\n\nconst messages = defineMessages({\n  heading: { id: 'column.import_data', defaultMessage: 'Import data' },\n  submit: { id: 'import_data.actions.import', defaultMessage: 'Import' },\n});\n\nconst followMessages = defineMessages({\n  input_label: { id: 'import_data.follows_label', defaultMessage: 'Follows' },\n  input_hint: { id: 'import_data.hints.follows', defaultMessage: 'CSV file containing a list of followed accounts' },\n  submit: { id: 'import_data.actions.import_follows', defaultMessage: 'Import follows' },\n});\n\nconst blockMessages = defineMessages({\n  input_label: { id: 'import_data.blocks_label', defaultMessage: 'Blocks' },\n  input_hint: { id: 'import_data.hints.blocks', defaultMessage: 'CSV file containing a list of blocked accounts' },\n  submit: { id: 'import_data.actions.import_blocks', defaultMessage: 'Import blocks' },\n});\n\nconst muteMessages = defineMessages({\n  input_label: { id: 'import_data.mutes_label', defaultMessage: 'Mutes' },\n  input_hint: { id: 'import_data.hints.mutes', defaultMessage: 'CSV file containing a list of muted accounts' },\n  submit: { id: 'import_data.actions.import_mutes', defaultMessage: 'Import mutes' },\n});\n\nconst mapStateToProps = state => ({\n  features: getFeatures(state.get('instance')),\n});\n\nexport default @connect(mapStateToProps)\n@injectIntl\nclass ImportData extends ImmutablePureComponent {\n\n  static propTypes = {\n    intl: PropTypes.object.isRequired,\n    features: PropTypes.object,\n  };\n\n  render() {\n    const { intl, features } = this.props;\n\n    return (\n      <Column icon='cloud-upload' heading={intl.formatMessage(messages.heading)} backBtnSlim>\n        <CSVImporter action={importFollows} messages={followMessages} />\n        <CSVImporter action={importBlocks} messages={blockMessages} />\n        {features.importMutes && <CSVImporter action={importMutes} messages={muteMessages} />}\n      </Column>\n    );\n  }\n\n}\n"],"sourceRoot":""}
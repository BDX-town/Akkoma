{"version":3,"sources":["webpack:///./app/soapbox/features/account_gallery/index.js"],"names":["LoadMoreMedia","props","onLoadMore","maxId","render","disabled","this","onClick","handleLoadMore","ImmutablePureComponent","PropTypes","string","func","isRequired","AccountGallery","connect","state","account","username","params","me","withReplies","get","accounts","getIn","accountFetchError","toLowerCase","accountId","accountUsername","find","acct","isBlocked","unavailable","isAccount","attachments","getAccountGallery","isLoading","hasMore","width","size","last","undefined","e","target","scrollTop","scrollHeight","clientHeight","handleScrollToBottom","dispatch","expandAccountMediaTimeline","preventDefault","attachment","media","index","openModal","status","findIndex","x","c","setState","offsetWidth","componentDidMount","fetchAccount","fetchAccountByUsername","componentDidUpdate","prevProps","loadOlder","visible","handleLoadOlder","className","id","defaultMessage","onScroll","handleScroll","style","display","exact","to","role","ref","handleRef","map","displayWidth","onOpenMedia","handleOpenMedia","object","ImmutablePropTypes","list","bool"],"mappings":"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","file":"js/features/account_gallery-0544d3d7047ebc4259a5.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport {\n  fetchAccount,\n  fetchAccountByUsername,\n} from 'soapbox/actions/accounts';\nimport { expandAccountMediaTimeline } from '../../actions/timelines';\nimport LoadingIndicator from 'soapbox/components/loading_indicator';\nimport Column from '../ui/components/column';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { getAccountGallery } from 'soapbox/selectors';\nimport MediaItem from './components/media_item';\nimport LoadMore from 'soapbox/components/load_more';\nimport MissingIndicator from 'soapbox/components/missing_indicator';\nimport { openModal } from 'soapbox/actions/modal';\nimport { NavLink } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nconst mapStateToProps = (state, { params: { username }, withReplies = false }) => {\n  const me = state.get('me');\n  const accounts = state.getIn(['accounts']);\n  const accountFetchError = (state.getIn(['accounts', -1, 'username'], '').toLowerCase() === username.toLowerCase());\n\n  let accountId = -1;\n  let accountUsername = username;\n  if (accountFetchError) {\n    accountId = null;\n  } else {\n    let account = accounts.find(acct => username.toLowerCase() === acct.getIn(['acct'], '').toLowerCase());\n    accountId = account ? account.getIn(['id'], null) : -1;\n    accountUsername = account ? account.getIn(['acct'], '') : '';\n  }\n\n  const isBlocked = state.getIn(['relationships', accountId, 'blocked_by'], false);\n  const unavailable = (me === accountId) ? false : isBlocked;\n\n  return {\n    accountId,\n    unavailable,\n    accountUsername,\n    isAccount: !!state.getIn(['accounts', accountId]),\n    attachments: getAccountGallery(state, accountId),\n    isLoading: state.getIn(['timelines', `account:${accountId}:media`, 'isLoading']),\n    hasMore: state.getIn(['timelines', `account:${accountId}:media`, 'hasMore']),\n  };\n};\n\nclass LoadMoreMedia extends ImmutablePureComponent {\n\n  static propTypes = {\n    maxId: PropTypes.string,\n    onLoadMore: PropTypes.func.isRequired,\n  };\n\n  handleLoadMore = () => {\n    this.props.onLoadMore(this.props.maxId);\n  }\n\n  render() {\n    return (\n      <LoadMore\n        disabled={this.props.disabled}\n        onClick={this.handleLoadMore}\n      />\n    );\n  }\n\n}\n\nexport default @connect(mapStateToProps)\nclass AccountGallery extends ImmutablePureComponent {\n\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    attachments: ImmutablePropTypes.list.isRequired,\n    isLoading: PropTypes.bool,\n    hasMore: PropTypes.bool,\n    isAccount: PropTypes.bool,\n    unavailable: PropTypes.bool,\n  };\n\n  state = {\n    width: 323,\n  };\n\n  componentDidMount() {\n    const { params: { username }, accountId } = this.props;\n\n    if (accountId && accountId !== -1) {\n      this.props.dispatch(fetchAccount(accountId));\n      this.props.dispatch(expandAccountMediaTimeline(accountId));\n    } else {\n      this.props.dispatch(fetchAccountByUsername(username));\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { accountId, params } = this.props;\n    if (accountId && accountId !== -1 && (accountId !== prevProps.accountId && accountId)) {\n      this.props.dispatch(fetchAccount(params.accountId));\n      this.props.dispatch(expandAccountMediaTimeline(accountId));\n    }\n  }\n\n  handleScrollToBottom = () => {\n    if (this.props.hasMore) {\n      this.handleLoadMore(this.props.attachments.size > 0 ? this.props.attachments.last().getIn(['status', 'id']) : undefined);\n    }\n  }\n\n  handleScroll = e => {\n    const { scrollTop, scrollHeight, clientHeight } = e.target;\n    const offset = scrollHeight - scrollTop - clientHeight;\n\n    if (150 > offset && !this.props.isLoading) {\n      this.handleScrollToBottom();\n    }\n  }\n\n  handleLoadMore = maxId => {\n    if (this.props.accountId && this.props.accountId !== -1) {\n      this.props.dispatch(expandAccountMediaTimeline(this.props.accountId, { maxId }));\n    }\n  };\n\n  handleLoadOlder = e => {\n    e.preventDefault();\n    this.handleScrollToBottom();\n  }\n\n  handleOpenMedia = attachment => {\n    if (attachment.get('type') === 'video') {\n      this.props.dispatch(openModal('VIDEO', { media: attachment, status: attachment.get('status'), account: attachment.get('account') }));\n    } else {\n      const media = attachment.getIn(['status', 'media_attachments']);\n      const index = media.findIndex(x => x.get('id') === attachment.get('id'));\n\n      this.props.dispatch(openModal('MEDIA', { media, index, status: attachment.get('status'), account: attachment.get('account') }));\n    }\n  }\n\n  handleRef = c => {\n    if (c) {\n      this.setState({ width: c.offsetWidth });\n    }\n  }\n\n  render() {\n    const { attachments, isLoading, hasMore, isAccount, accountId, unavailable, accountUsername } = this.props;\n    const { width } = this.state;\n\n    if (!isAccount && accountId !== -1) {\n      return (\n        <Column>\n          <MissingIndicator />\n        </Column>\n      );\n    }\n\n    if (accountId === -1 || (!attachments && isLoading)) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    let loadOlder = null;\n\n    if (hasMore && !(isLoading && attachments.size === 0)) {\n      loadOlder = <LoadMore visible={!isLoading} onClick={this.handleLoadOlder} />;\n    }\n\n    if (unavailable) {\n      return (\n        <Column>\n          <div className='empty-column-indicator'>\n            <FormattedMessage id='empty_column.account_unavailable' defaultMessage='Profile unavailable' />\n          </div>\n        </Column>\n      );\n    }\n\n    return (\n      <Column>\n        <div className='slist slist--flex' onScroll={this.handleScroll}>\n          <div className='account__section-headline'>\n            <div style={{ width: '100%', display: 'flex' }}>\n              <NavLink exact to={`/@${accountUsername}`}>\n                <FormattedMessage id='account.posts' defaultMessage='Posts' />\n              </NavLink>\n              <NavLink exact to={`/@${accountUsername}/with_replies`}>\n                <FormattedMessage id='account.posts_with_replies' defaultMessage='Posts and replies' />\n              </NavLink>\n              <NavLink exact to={`/@${accountUsername}/media`}>\n                <FormattedMessage id='account.media' defaultMessage='Media' />\n              </NavLink>\n            </div>\n          </div>\n\n          <div role='feed' className='account-gallery__container' ref={this.handleRef}>\n            {attachments.map((attachment, index) => attachment === null ? (\n              <LoadMoreMedia key={'more:' + attachments.getIn(index + 1, 'id')} maxId={index > 0 ? attachments.getIn(index - 1, 'id') : null} onLoadMore={this.handleLoadMore} />\n            ) : (\n              <MediaItem\n                key={`${attachment.getIn(['status', 'id'])}+${attachment.get('id')}`}\n                attachment={attachment}\n                displayWidth={width}\n                onOpenMedia={this.handleOpenMedia}\n              />\n            ))}\n\n            {\n              attachments.size === 0 &&\n              <div className='empty-column-indicator'>\n                <FormattedMessage id='account_gallery.none' defaultMessage='No media to show.' />\n              </div>\n            }\n\n            {loadOlder}\n          </div>\n\n          {isLoading && attachments.size === 0 && (\n            <div className='slist__append'>\n              <LoadingIndicator />\n            </div>\n          )}\n        </div>\n      </Column>\n    );\n  }\n\n}\n"],"sourceRoot":""}
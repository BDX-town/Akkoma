{"version":3,"sources":["webpack:///./app/soapbox/features/groups/index/card.js","webpack:///./app/soapbox/features/groups/index/index.js"],"names":["messages","defineMessages","members","view","join","role_member","role_admin","GroupCard","connect","state","id","group","getIn","relationships","injectIntl","getRole","this","props","intl","get","formatMessage","render","coverImageUrl","role","Link","to","className","alt","src","shortNumberFormat","ImmutablePureComponent","ImmutablePropTypes","map","heading","create","tab_featured","tab_member","tab_admin","Groups","activeTab","groupIds","componentDidMount","dispatch","fetchGroups","componentDidUpdate","oldProps","renderHeader","classNames","showCreateForm","params","PropTypes","object","isRequired","string","bool","func","groups","list"],"mappings":"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","file":"js/features/groups/index-79c3d19161384f191d12.chunk.js","sourcesContent":["import React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { shortNumberFormat } from '../../../utils/numbers';\nimport { connect } from 'react-redux';\n\nconst messages = defineMessages({\n  members: { id: 'groups.card.members', defaultMessage: 'Members' },\n  view: { id: 'groups.card.view', defaultMessage: 'View' },\n  join: { id: 'groups.card.join', defaultMessage: 'Join' },\n  role_member: { id: 'groups.card.roles.member', defaultMessage: 'You\\'re a member' },\n  role_admin: { id: 'groups.card.roles.admin', defaultMessage: 'You\\'re an admin' },\n});\n\nconst mapStateToProps = (state, { id }) => ({\n  group: state.getIn(['groups', id]),\n  relationships: state.getIn(['group_relationships', id]),\n});\n\nexport default @connect(mapStateToProps)\n@injectIntl\nclass GroupCard extends ImmutablePureComponent {\n\n    static propTypes = {\n      group: ImmutablePropTypes.map,\n      relationships: ImmutablePropTypes.map,\n    }\n\n    getRole() {\n      const { intl, relationships } = this.props;\n\n      if (relationships.get('admin')) return intl.formatMessage(messages.role_admin);\n      if (relationships.get('member')) return intl.formatMessage(messages.role_member);\n      return null;\n    }\n\n    render() {\n      const { intl, group } = this.props;\n      const coverImageUrl = group.get('cover_image_url');\n      const role = this.getRole();\n\n      return (\n        <Link to={`/groups/${group.get('id')}`} className='group-card'>\n          <div className='group-card__header'>{coverImageUrl && <img alt='' src={coverImageUrl} />}</div>\n          <div className='group-card__content'>\n            <div className='group-card__title'>{group.get('title')}</div>\n            <div className='group-card__meta'><strong>{shortNumberFormat(group.get('member_count'))}</strong> {intl.formatMessage(messages.members)}{role && <span> Â· {role}</span>}</div>\n            <div className='group-card__description'>{group.get('description')}</div>\n          </div>\n        </Link>\n      );\n    }\n\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { fetchGroups } from '../../../actions/groups';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport GroupCard from './card';\nimport GroupCreate from '../create';\n\nconst messages = defineMessages({\n  heading: { id: 'column.groups', defaultMessage: 'Groups' },\n  create: { id: 'groups.create', defaultMessage: 'Create group' },\n  tab_featured: { id: 'groups.tab_featured', defaultMessage: 'Featured' },\n  tab_member: { id: 'groups.tab_member', defaultMessage: 'Member' },\n  tab_admin: { id: 'groups.tab_admin', defaultMessage: 'Manage' },\n});\n\nconst mapStateToProps = (state, { activeTab }) => ({\n  groupIds: state.getIn(['group_lists', activeTab]),\n});\n\nexport default @connect(mapStateToProps)\n@injectIntl\nclass Groups extends ImmutablePureComponent {\n\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    activeTab: PropTypes.string.isRequired,\n    showCreateForm: PropTypes.bool,\n    dispatch: PropTypes.func.isRequired,\n    groups: ImmutablePropTypes.map,\n    groupIds: ImmutablePropTypes.list,\n    intl: PropTypes.object.isRequired,\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchGroups(this.props.activeTab));\n  }\n\n  componentDidUpdate(oldProps) {\n    if (this.props.activeTab && this.props.activeTab !== oldProps.activeTab) {\n      this.props.dispatch(fetchGroups(this.props.activeTab));\n    }\n  }\n\n  renderHeader() {\n    const { intl, activeTab } = this.props;\n\n    return (\n      <div className='group-column-header'>\n        <div className='group-column-header__cta'><Link to='/groups/create' className='button standard-small'>{intl.formatMessage(messages.create)}</Link></div>\n        <div className='group-column-header__title'>{intl.formatMessage(messages.heading)}</div>\n\n        <div className='column-header__wrapper'>\n          <h1 className='column-header'>\n            <Link to='/groups' className={classNames('btn grouped', { 'active': 'featured' === activeTab })}>\n              {intl.formatMessage(messages.tab_featured)}\n            </Link>\n\n            <Link to='/groups/browse/member' className={classNames('btn grouped', { 'active': 'member' === activeTab })}>\n              {intl.formatMessage(messages.tab_member)}\n            </Link>\n\n            <Link to='/groups/browse/admin' className={classNames('btn grouped', { 'active': 'admin' === activeTab })}>\n              {intl.formatMessage(messages.tab_admin)}\n            </Link>\n          </h1>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { groupIds, showCreateForm } = this.props;\n\n    return (\n      <div>\n        {!showCreateForm && this.renderHeader()}\n        {showCreateForm && <GroupCreate /> }\n\n        <div className='group-card-list'>\n          {groupIds.map(id => <GroupCard key={id} id={id} />)}\n        </div>\n      </div>\n    );\n  }\n\n}\n"],"sourceRoot":""}
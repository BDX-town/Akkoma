{"version":3,"sources":["webpack:///./app/soapbox/features/favourited_statuses/index.js"],"names":["Favourites","connect","state","username","params","me","get","meUsername","getIn","isMyAccount","toLowerCase","statusIds","isLoading","hasMore","injectIntl","props","dispatch","expandFavouritedStatuses","leading","componentDidMount","this","fetchFavouritedStatuses","render","emptyMessage","id","defaultMessage","scrollKey","onLoadMore","handleLoadMore","ImmutablePureComponent","PropTypes","func","isRequired","ImmutablePropTypes","list","intl","object","bool"],"mappings":"0SAyBMA,EAFUC,kBAXQ,SAACC,EAAD,GAAsC,IAAlBC,EAAiB,EAA3BC,OAAUD,SACpCE,EAAKH,EAAMI,IAAI,MACfC,EAAaL,EAAMM,MAAM,CAAC,WAAYH,EAAI,aAChD,MAAO,CACLI,YAAcN,EAASO,gBAAkBH,EAAWG,cACpDC,UAAWT,EAAMM,MAAM,CAAC,eAAgB,aAAc,UACtDI,UAAWV,EAAMM,MAAM,CAAC,eAAgB,aAAc,cAAc,GACpEK,UAAWX,EAAMM,MAAM,CAAC,eAAgB,aAAc,W,GAKzDM,a,mMAgBkB,IAAS,WACxB,EAAKC,MAAMC,SAASC,gBACnB,IAAK,CAAEC,SAAS,K,8CANnBC,kBAAA,WACEC,KAAKL,MAAMC,SAASK,gB,EAOtBC,OAAA,WAAU,IAAD,EACgDF,KAAKL,MAApDJ,EADD,EACCA,UAAWE,EADZ,EACYA,QAASD,EADrB,EACqBA,UAE5B,IAHO,EACgCH,YAGrC,OACE,YAAC,IAAD,UACE,YAAC,IAAD,KAKN,IAAMc,EAAe,YAAC,IAAD,CAAkBC,GAAG,mCAAmCC,eAAe,iFAE5F,OACE,YAAC,IAAD,UACE,YAAC,IAAD,CACEd,UAAWA,EACXe,UAAU,sBACVb,QAASA,EACTD,UAAWA,EACXe,WAAYP,KAAKQ,eACjBL,aAAcA,M,GAxCCM,K,0BAEJ,CACjBb,SAAUc,IAAUC,KAAKC,WACzBrB,UAAWsB,IAAmBC,KAAKF,WACnCG,KAAML,IAAUM,OAAOJ,WACvBnB,QAASiB,IAAUO,KACnBzB,UAAWkB,IAAUO,KACrB5B,YAAaqB,IAAUO,KAAKL,a","file":"js/features/favourited_statuses-f19e24e41a078ba3de67.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { fetchFavouritedStatuses, expandFavouritedStatuses } from '../../actions/favourites';\nimport Column from '../ui/components/column';\nimport StatusList from '../../components/status_list';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { debounce } from 'lodash';\nimport MissingIndicator from 'soapbox/components/missing_indicator';\n\nconst mapStateToProps = (state, { params: { username } }) => {\n  const me = state.get('me');\n  const meUsername = state.getIn(['accounts', me, 'username']);\n  return {\n    isMyAccount: (username.toLowerCase() === meUsername.toLowerCase()),\n    statusIds: state.getIn(['status_lists', 'favourites', 'items']),\n    isLoading: state.getIn(['status_lists', 'favourites', 'isLoading'], true),\n    hasMore: !!state.getIn(['status_lists', 'favourites', 'next']),\n  };\n};\n\nexport default @connect(mapStateToProps)\n@injectIntl\nclass Favourites extends ImmutablePureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    statusIds: ImmutablePropTypes.list.isRequired,\n    intl: PropTypes.object.isRequired,\n    hasMore: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    isMyAccount: PropTypes.bool.isRequired,\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchFavouritedStatuses());\n  }\n\n  handleLoadMore = debounce(() => {\n    this.props.dispatch(expandFavouritedStatuses());\n  }, 300, { leading: true })\n\n  render() {\n    const { statusIds, hasMore, isLoading, isMyAccount } = this.props;\n\n    if (!isMyAccount) {\n      return (\n        <Column>\n          <MissingIndicator />\n        </Column>\n      );\n    }\n\n    const emptyMessage = <FormattedMessage id='empty_column.favourited_statuses' defaultMessage=\"You don't have any liked posts yet. When you like one, it will show up here.\" />;\n\n    return (\n      <Column>\n        <StatusList\n          statusIds={statusIds}\n          scrollKey='favourited_statuses'\n          hasMore={hasMore}\n          isLoading={isLoading}\n          onLoadMore={this.handleLoadMore}\n          emptyMessage={emptyMessage}\n        />\n      </Column>\n    );\n  }\n\n}\n"],"sourceRoot":""}
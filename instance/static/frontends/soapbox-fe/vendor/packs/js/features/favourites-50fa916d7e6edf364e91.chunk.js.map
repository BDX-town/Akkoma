{"version":3,"sources":["webpack:///./app/soapbox/features/favourites/index.js"],"names":["Favourites","connect","state","props","accountIds","getIn","params","statusId","componentDidMount","this","dispatch","fetchFavourites","componentDidUpdate","prevProps","prevStatusId","render","emptyMessage","id","defaultMessage","scrollKey","map","withNote","ImmutablePureComponent","PropTypes","object","isRequired","func","ImmutablePropTypes","orderedSet"],"mappings":"kRAiBMA,EADUC,kBAJQ,SAACC,EAAOC,GAAR,MAAmB,CACzCC,WAAYF,EAAMG,MAAM,CAAC,aAAc,gBAAiBF,EAAMG,OAAOC,a,gHAYrEC,kBAAA,WACEC,KAAKN,MAAMO,SAASC,YAAgBF,KAAKN,MAAMG,OAAOC,Y,EAGxDK,mBAAA,SAAmBC,GAAY,IACrBN,EAAaE,KAAKN,MAAMG,OAAxBC,SAGJA,IAFqBM,EAAUP,OAA3BQ,cAEyBP,GAC/BE,KAAKN,MAAMO,SAASC,YAAgBJ,K,EAIxCQ,OAAA,WAAU,IACAX,EAAeK,KAAKN,MAApBC,WAER,IAAKA,EACH,OACE,YAAC,IAAD,UACE,YAAC,IAAD,KAKN,IAAMY,EAAe,YAAC,IAAD,CAAkBC,GAAG,0BAA0BC,eAAe,+EAEnF,OACE,YAAC,IAAD,UACE,YAAC,IAAD,CACEC,UAAU,aACVH,aAAcA,QAFhB,EAIGZ,EAAWgB,IAAI,SAAAH,GAAE,OAChB,YAAC,IAAD,CAA2BA,GAAIA,EAAII,UAAU,GAAtBJ,Q,GAzCVK,K,0BAEJ,CACjBhB,OAAQiB,IAAUC,OAAOC,WACzBf,SAAUa,IAAUG,KAAKD,WACzBrB,WAAYuB,IAAmBC,a","file":"js/features/favourites-50fa916d7e6edf364e91.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport LoadingIndicator from '../../components/loading_indicator';\nimport { fetchFavourites } from '../../actions/interactions';\nimport { FormattedMessage } from 'react-intl';\nimport AccountContainer from '../../containers/account_container';\nimport Column from '../ui/components/column';\nimport ScrollableList from '../../components/scrollable_list';\n\nconst mapStateToProps = (state, props) => ({\n  accountIds: state.getIn(['user_lists', 'favourited_by', props.params.statusId]),\n});\n\nexport default @connect(mapStateToProps)\nclass Favourites extends ImmutablePureComponent {\n\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    accountIds: ImmutablePropTypes.orderedSet,\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchFavourites(this.props.params.statusId));\n  }\n\n  componentDidUpdate(prevProps) {\n    const { statusId } = this.props.params;\n    const { prevStatusId } = prevProps.params;\n\n    if (statusId !== prevStatusId && statusId) {\n      this.props.dispatch(fetchFavourites(statusId));\n    }\n  }\n\n  render() {\n    const { accountIds } = this.props;\n\n    if (!accountIds) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    const emptyMessage = <FormattedMessage id='empty_column.favourites' defaultMessage='No one has liked this post yet. When someone does, they will show up here.' />;\n\n    return (\n      <Column>\n        <ScrollableList\n          scrollKey='favourites'\n          emptyMessage={emptyMessage}\n        >\n          {accountIds.map(id =>\n            <AccountContainer key={id} id={id} withNote={false} />,\n          )}\n        </ScrollableList>\n      </Column>\n    );\n  }\n\n}\n"],"sourceRoot":""}
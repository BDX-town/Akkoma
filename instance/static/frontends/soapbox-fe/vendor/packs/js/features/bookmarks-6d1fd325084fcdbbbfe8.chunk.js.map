{"version":3,"sources":["webpack:///./app/soapbox/features/bookmarks/index.js"],"names":["messages","defineMessages","heading","Bookmarks","connect","state","statusIds","getIn","isLoading","hasMore","injectIntl","props","dispatch","expandBookmarkedStatuses","leading","componentDidMount","this","fetchBookmarkedStatuses","render","intl","shouldUpdateScroll","columnId","multiColumn","pinned","emptyMessage","id","defaultMessage","icon","formatMessage","backBtnSlim","trackScroll","scrollKey","onLoadMore","handleLoadMore","bindToDocument","ImmutablePureComponent","router","PropTypes","object","func","isRequired","ImmutablePropTypes","list","string","bool"],"mappings":"wSAWMA,EAAWC,YAAe,CAC9BC,QAAQ,CAAD,oDAWHC,EAFUC,kBANQ,SAAAC,GAAK,MAAK,CAChCC,UAAWD,EAAME,MAAM,CAAC,eAAgB,YAAa,UACrDC,UAAWH,EAAME,MAAM,CAAC,eAAgB,YAAa,cAAc,GACnEE,UAAWJ,EAAME,MAAM,CAAC,eAAgB,YAAa,W,GAItDG,a,mMAuBkB,IAAS,WACxB,EAAKC,MAAMC,SAASC,gBACnB,IAAK,CAAEC,SAAS,K,8CAPnBC,kBAAA,YAEEH,EADqBI,KAAKL,MAAlBC,UACCK,gB,EAQXC,OAAA,WAAU,IAAD,EACoFF,KAAKL,MAAxFQ,EADD,EACCA,KAAMC,EADP,EACOA,mBAAoBd,EAD3B,EAC2BA,UAAWe,EADtC,EACsCA,SAAUC,EADhD,EACgDA,YAAab,EAD7D,EAC6DA,QAASD,EADtE,EACsEA,UACvEe,IAAWF,EAEXG,EAAe,YAAC,IAAD,CAAkBC,GAAG,yBAAyBC,eAAe,8EAElF,OACE,YAAC,IAAD,CAAQC,KAAK,WAAWzB,QAASiB,EAAKS,cAAc5B,EAASE,SAAU2B,aAAW,QAAlF,EACE,YAAC,IAAD,CACEC,aAAcP,EACdjB,UAAWA,EACXyB,UAAS,uBAAyBV,EAClCZ,QAASA,EACTD,UAAWA,EACXwB,WAAYhB,KAAKiB,eACjBb,mBAAoBA,EACpBI,aAAcA,EACdU,gBAAiBZ,M,GA5CHa,K,6BAEA,CACpBC,OAAQC,IAAUC,S,0BAGD,CACjB1B,SAAUyB,IAAUE,KAAKC,WACzBpB,mBAAoBiB,IAAUE,KAC9BjC,UAAWmC,IAAmBC,KAAKF,WACnCrB,KAAMkB,IAAUC,OAAOE,WACvBnB,SAAUgB,IAAUM,OACpBrB,YAAae,IAAUO,KACvBnC,QAAS4B,IAAUO,KACnBpC,UAAW6B,IAAUO,O","file":"js/features/bookmarks-6d1fd325084fcdbbbfe8.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport Column from '../ui/components/column';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport StatusList from '../../components/status_list';\nimport { fetchBookmarkedStatuses, expandBookmarkedStatuses } from '../../actions/bookmarks';\nimport { debounce } from 'lodash';\n\nconst messages = defineMessages({\n  heading: { id: 'column.bookmarks', defaultMessage: 'Bookmarks' },\n});\n\nconst mapStateToProps = state => ({\n  statusIds: state.getIn(['status_lists', 'bookmarks', 'items']),\n  isLoading: state.getIn(['status_lists', 'bookmarks', 'isLoading'], true),\n  hasMore: !!state.getIn(['status_lists', 'bookmarks', 'next']),\n});\n\nexport default @connect(mapStateToProps)\n@injectIntl\nclass Bookmarks extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    shouldUpdateScroll: PropTypes.func,\n    statusIds: ImmutablePropTypes.list.isRequired,\n    intl: PropTypes.object.isRequired,\n    columnId: PropTypes.string,\n    multiColumn: PropTypes.bool,\n    hasMore: PropTypes.bool,\n    isLoading: PropTypes.bool,\n  };\n\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(fetchBookmarkedStatuses());\n  }\n\n  handleLoadMore = debounce(() => {\n    this.props.dispatch(expandBookmarkedStatuses());\n  }, 300, { leading: true })\n\n\n  render() {\n    const { intl, shouldUpdateScroll, statusIds, columnId, multiColumn, hasMore, isLoading } = this.props;\n    const pinned = !!columnId;\n\n    const emptyMessage = <FormattedMessage id='empty_column.bookmarks' defaultMessage=\"You don't have any bookmarks yet. When you add one, it will show up here.\" />;\n\n    return (\n      <Column icon='bookmark' heading={intl.formatMessage(messages.heading)} backBtnSlim>\n        <StatusList\n          trackScroll={!pinned}\n          statusIds={statusIds}\n          scrollKey={`bookmarked_statuses-${columnId}`}\n          hasMore={hasMore}\n          isLoading={isLoading}\n          onLoadMore={this.handleLoadMore}\n          shouldUpdateScroll={shouldUpdateScroll}\n          emptyMessage={emptyMessage}\n          bindToDocument={!multiColumn}\n        />\n      </Column>\n    );\n  }\n\n}\n"],"sourceRoot":""}
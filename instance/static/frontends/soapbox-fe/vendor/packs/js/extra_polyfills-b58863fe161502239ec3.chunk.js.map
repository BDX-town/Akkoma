{"version":3,"sources":["webpack:///./app/soapbox/extra_polyfills.js","webpack:///./node_modules/intersection-observer/intersection-observer.js","webpack:///./node_modules/requestidlecallback/index.js","webpack:///./node_modules/object-fit-images/dist/ofi.common-js.js"],"names":["objectFitImages","document","registry","crossOriginUpdater","crossOriginRect","getFrameElement","doc","defaultView","frameElement","e","IntersectionObserverEntry","entry","this","time","target","rootBounds","ensureDOMRect","boundingClientRect","intersectionRect","getEmptyRect","isIntersecting","targetRect","targetArea","width","height","intersectionArea","intersectionRatio","Number","toFixed","IntersectionObserver","callback","opt_options","fn","timeout","timer","options","Error","root","nodeType","_checkForIntersections","bind","THROTTLE_TIMEOUT","setTimeout","_callback","_observationTargets","_queuedEntries","_rootMarginValues","_parseRootMargin","rootMargin","thresholds","_initThresholds","threshold","map","margin","value","unit","join","_monitoringDocuments","_monitoringUnsubscribes","addEvent","node","event","opt_useCapture","addEventListener","attachEvent","removeEvent","removeEventListener","detatchEvent","getBoundingClientRect","el","rect","err","top","right","bottom","left","y","x","convertFromParentRect","parentBoundingRect","parentIntersectionRect","containsDeep","parent","child","getParentNode","parentNode","host","assignedSlot","window","prototype","Object","defineProperty","get","frame","ownerDocument","POLL_INTERVAL","USE_MUTATION_OBSERVER","_setupCrossOriginUpdater","forEach","observer","_resetCrossOriginUpdater","observe","some","item","element","_registerInstance","push","_monitorIntersections","unobserve","filter","_unmonitorIntersections","length","_unregisterInstance","disconnect","_unmonitorAllIntersections","takeRecords","records","slice","opt_threshold","Array","isArray","sort","t","i","a","isNaN","opt_rootMargin","margins","split","parts","exec","parseFloat","monitoringInterval","domObserver","win","indexOf","setInterval","MutationObserver","attributes","childList","characterData","subtree","clearInterval","rootDoc","unsubscribe","index","itemDoc","splice","unsubscribes","rootIsInDom","rootRect","_rootIsInDom","_getRootRect","rootContainsTarget","_rootContainsTarget","oldEntry","_computeTargetAndRootIntersection","newEntry","performance","now","_hasCrossedThreshold","getComputedStyle","display","rect1","rect2","atRoot","frameRect","frameIntersect","parentRect","parentComputedStyle","body","documentElement","overflow","Math","max","min","html","clientWidth","clientHeight","_expandRectByRootMargin","newRect","oldRatio","newRatio","scheduleStart","throttleDelay","lazytimer","lazyraf","global","undefined","requestAnimationFrame","cancelRequestAnimationFrame","clearTimeout","tasks","runAttempts","isRunning","remainingTime","minThrottle","throttle","taskStart","tasklength","IdleDeadline","timeRemaining","Date","setInactive","debounce","id","timestamp","wait","check","last","abortRunning","onInputorMutation","scheduleLazy","scheduleAfterRaf","runTasks","scheduleRaf","task","len","timeThreshold","shift","requestIdleCallbackShim","cancelIdleCallbackShim","requestIdleCallback","cancelIdleCallback","name","capture","passive","rIC","timeRemainingProto","IdleCallbackDeadline","getOwnPropertyDescriptor","configurable","call","enumerable","request","cancel","OFI","propRegex","testImg","Image","style","supportsObjectFit","supportsObjectPosition","supportsOFI","supportsCurrentSrc","currentSrc","nativeGetAttribute","getAttribute","nativeSetAttribute","setAttribute","autoModeEnabled","setPlaceholder","img","placeholder","onImageReady","naturalWidth","fixOne","descriptors","pf","parsed","fontFamily","props","getStyle","ofi","skipTest","srcset","src","naturalHeight","prop","set","ss","console","warn","picturefill","_","ns","evaled","fillImg","reselect","curSrc","supported","backgroundImage","replace","backgroundPosition","backgroundRepeat","backgroundOrigin","test","backgroundSize","fix","imgs","opts","startAutoMode","getElementsByTagName","querySelectorAll","tagName","watchMQ","getOfiImageMaybe","HTMLImageElement","String","module","exports"],"mappings":"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","file":"js/extra_polyfills-b58863fe161502239ec3.chunk.js","sourcesContent":["'use strict';\n\nimport 'intersection-observer';\nimport 'requestidlecallback';\nimport objectFitImages  from 'object-fit-images';\n\nobjectFitImages();\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n(function () {\n  'use strict'; // Exit early if we're not running in a browser.\n\n  if (typeof window !== 'object') {\n    return;\n  } // Exit early if all IntersectionObserver and IntersectionObserverEntry\n  // features are natively supported.\n\n\n  if ('IntersectionObserver' in window && 'IntersectionObserverEntry' in window && 'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n    // Minimal polyfill for Edge 15's lack of `isIntersecting`\n    // See: https://github.com/w3c/IntersectionObserver/issues/211\n    if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n      Object.defineProperty(window.IntersectionObserverEntry.prototype, 'isIntersecting', {\n        get: function get() {\n          return this.intersectionRatio > 0;\n        }\n      });\n    }\n\n    return;\n  }\n  /**\n   * Returns the embedding frame element, if any.\n   * @param {!Document} doc\n   * @return {!Element}\n   */\n\n\n  function getFrameElement(doc) {\n    try {\n      return doc.defaultView && doc.defaultView.frameElement || null;\n    } catch (e) {\n      // Ignore the error.\n      return null;\n    }\n  }\n  /**\n   * A local reference to the root document.\n   */\n\n\n  var document = function (startDoc) {\n    var doc = startDoc;\n    var frame = getFrameElement(doc);\n\n    while (frame) {\n      doc = frame.ownerDocument;\n      frame = getFrameElement(doc);\n    }\n\n    return doc;\n  }(window.document);\n  /**\n   * An IntersectionObserver registry. This registry exists to hold a strong\n   * reference to IntersectionObserver instances currently observing a target\n   * element. Without this registry, instances without another reference may be\n   * garbage collected.\n   */\n\n\n  var registry = [];\n  /**\n   * The signal updater for cross-origin intersection. When not null, it means\n   * that the polyfill is configured to work in a cross-origin mode.\n   * @type {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n   */\n\n  var crossOriginUpdater = null;\n  /**\n   * The current cross-origin intersection. Only used in the cross-origin mode.\n   * @type {DOMRect|ClientRect}\n   */\n\n  var crossOriginRect = null;\n  /**\n   * Creates the global IntersectionObserverEntry constructor.\n   * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n   * @param {Object} entry A dictionary of instance properties.\n   * @constructor\n   */\n\n  function IntersectionObserverEntry(entry) {\n    this.time = entry.time;\n    this.target = entry.target;\n    this.rootBounds = ensureDOMRect(entry.rootBounds);\n    this.boundingClientRect = ensureDOMRect(entry.boundingClientRect);\n    this.intersectionRect = ensureDOMRect(entry.intersectionRect || getEmptyRect());\n    this.isIntersecting = !!entry.intersectionRect; // Calculates the intersection ratio.\n\n    var targetRect = this.boundingClientRect;\n    var targetArea = targetRect.width * targetRect.height;\n    var intersectionRect = this.intersectionRect;\n    var intersectionArea = intersectionRect.width * intersectionRect.height; // Sets intersection ratio.\n\n    if (targetArea) {\n      // Round the intersection ratio to avoid floating point math issues:\n      // https://github.com/w3c/IntersectionObserver/issues/324\n      this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n    } else {\n      // If area is zero and is intersecting, sets to 1, otherwise to 0\n      this.intersectionRatio = this.isIntersecting ? 1 : 0;\n    }\n  }\n  /**\n   * Creates the global IntersectionObserver constructor.\n   * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n   * @param {Function} callback The function to be invoked after intersection\n   *     changes have queued. The function is not invoked if the queue has\n   *     been emptied by calling the `takeRecords` method.\n   * @param {Object=} opt_options Optional configuration options.\n   * @constructor\n   */\n\n\n  function IntersectionObserver(callback, opt_options) {\n    var options = opt_options || {};\n\n    if (typeof callback != 'function') {\n      throw new Error('callback must be a function');\n    }\n\n    if (options.root && options.root.nodeType != 1) {\n      throw new Error('root must be an Element');\n    } // Binds and throttles `this._checkForIntersections`.\n\n\n    this._checkForIntersections = throttle(this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT); // Private properties.\n\n    this._callback = callback;\n    this._observationTargets = [];\n    this._queuedEntries = [];\n    this._rootMarginValues = this._parseRootMargin(options.rootMargin); // Public properties.\n\n    this.thresholds = this._initThresholds(options.threshold);\n    this.root = options.root || null;\n    this.rootMargin = this._rootMarginValues.map(function (margin) {\n      return margin.value + margin.unit;\n    }).join(' ');\n    /** @private @const {!Array<!Document>} */\n\n    this._monitoringDocuments = [];\n    /** @private @const {!Array<function()>} */\n\n    this._monitoringUnsubscribes = [];\n  }\n  /**\n   * The minimum interval within which the document will be checked for\n   * intersection changes.\n   */\n\n\n  IntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n  /**\n   * The frequency in which the polyfill polls for intersection changes.\n   * this can be updated on a per instance basis and must be set prior to\n   * calling `observe` on the first target.\n   */\n\n  IntersectionObserver.prototype.POLL_INTERVAL = null;\n  /**\n   * Use a mutation observer on the root element\n   * to detect intersection changes.\n   */\n\n  IntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n  /**\n   * Sets up the polyfill in the cross-origin mode. The result is the\n   * updater function that accepts two arguments: `boundingClientRect` and\n   * `intersectionRect` - just as these fields would be available to the\n   * parent via `IntersectionObserverEntry`. This function should be called\n   * each time the iframe receives intersection information from the parent\n   * window, e.g. via messaging.\n   * @return {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n   */\n\n  IntersectionObserver._setupCrossOriginUpdater = function () {\n    if (!crossOriginUpdater) {\n      /**\n       * @param {DOMRect|ClientRect} boundingClientRect\n       * @param {DOMRect|ClientRect} intersectionRect\n       */\n      crossOriginUpdater = function crossOriginUpdater(boundingClientRect, intersectionRect) {\n        if (!boundingClientRect || !intersectionRect) {\n          crossOriginRect = getEmptyRect();\n        } else {\n          crossOriginRect = convertFromParentRect(boundingClientRect, intersectionRect);\n        }\n\n        registry.forEach(function (observer) {\n          observer._checkForIntersections();\n        });\n      };\n    }\n\n    return crossOriginUpdater;\n  };\n  /**\n   * Resets the cross-origin mode.\n   */\n\n\n  IntersectionObserver._resetCrossOriginUpdater = function () {\n    crossOriginUpdater = null;\n    crossOriginRect = null;\n  };\n  /**\n   * Starts observing a target element for intersection changes based on\n   * the thresholds values.\n   * @param {Element} target The DOM element to observe.\n   */\n\n\n  IntersectionObserver.prototype.observe = function (target) {\n    var isTargetAlreadyObserved = this._observationTargets.some(function (item) {\n      return item.element == target;\n    });\n\n    if (isTargetAlreadyObserved) {\n      return;\n    }\n\n    if (!(target && target.nodeType == 1)) {\n      throw new Error('target must be an Element');\n    }\n\n    this._registerInstance();\n\n    this._observationTargets.push({\n      element: target,\n      entry: null\n    });\n\n    this._monitorIntersections(target.ownerDocument);\n\n    this._checkForIntersections();\n  };\n  /**\n   * Stops observing a target element for intersection changes.\n   * @param {Element} target The DOM element to observe.\n   */\n\n\n  IntersectionObserver.prototype.unobserve = function (target) {\n    this._observationTargets = this._observationTargets.filter(function (item) {\n      return item.element != target;\n    });\n\n    this._unmonitorIntersections(target.ownerDocument);\n\n    if (this._observationTargets.length == 0) {\n      this._unregisterInstance();\n    }\n  };\n  /**\n   * Stops observing all target elements for intersection changes.\n   */\n\n\n  IntersectionObserver.prototype.disconnect = function () {\n    this._observationTargets = [];\n\n    this._unmonitorAllIntersections();\n\n    this._unregisterInstance();\n  };\n  /**\n   * Returns any queue entries that have not yet been reported to the\n   * callback and clears the queue. This can be used in conjunction with the\n   * callback to obtain the absolute most up-to-date intersection information.\n   * @return {Array} The currently queued entries.\n   */\n\n\n  IntersectionObserver.prototype.takeRecords = function () {\n    var records = this._queuedEntries.slice();\n\n    this._queuedEntries = [];\n    return records;\n  };\n  /**\n   * Accepts the threshold value from the user configuration object and\n   * returns a sorted array of unique threshold values. If a value is not\n   * between 0 and 1 and error is thrown.\n   * @private\n   * @param {Array|number=} opt_threshold An optional threshold value or\n   *     a list of threshold values, defaulting to [0].\n   * @return {Array} A sorted list of unique and valid threshold values.\n   */\n\n\n  IntersectionObserver.prototype._initThresholds = function (opt_threshold) {\n    var threshold = opt_threshold || [0];\n    if (!Array.isArray(threshold)) threshold = [threshold];\n    return threshold.sort().filter(function (t, i, a) {\n      if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n        throw new Error('threshold must be a number between 0 and 1 inclusively');\n      }\n\n      return t !== a[i - 1];\n    });\n  };\n  /**\n   * Accepts the rootMargin value from the user configuration object\n   * and returns an array of the four margin values as an object containing\n   * the value and unit properties. If any of the values are not properly\n   * formatted or use a unit other than px or %, and error is thrown.\n   * @private\n   * @param {string=} opt_rootMargin An optional rootMargin value,\n   *     defaulting to '0px'.\n   * @return {Array<Object>} An array of margin objects with the keys\n   *     value and unit.\n   */\n\n\n  IntersectionObserver.prototype._parseRootMargin = function (opt_rootMargin) {\n    var marginString = opt_rootMargin || '0px';\n    var margins = marginString.split(/\\s+/).map(function (margin) {\n      var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n\n      if (!parts) {\n        throw new Error('rootMargin must be specified in pixels or percent');\n      }\n\n      return {\n        value: parseFloat(parts[1]),\n        unit: parts[2]\n      };\n    }); // Handles shorthand.\n\n    margins[1] = margins[1] || margins[0];\n    margins[2] = margins[2] || margins[0];\n    margins[3] = margins[3] || margins[1];\n    return margins;\n  };\n  /**\n   * Starts polling for intersection changes if the polling is not already\n   * happening, and if the page's visibility state is visible.\n   * @param {!Document} doc\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._monitorIntersections = function (doc) {\n    var win = doc.defaultView;\n\n    if (!win) {\n      // Already destroyed.\n      return;\n    }\n\n    if (this._monitoringDocuments.indexOf(doc) != -1) {\n      // Already monitoring.\n      return;\n    } // Private state for monitoring.\n\n\n    var callback = this._checkForIntersections;\n    var monitoringInterval = null;\n    var domObserver = null; // If a poll interval is set, use polling instead of listening to\n    // resize and scroll events or DOM mutations.\n\n    if (this.POLL_INTERVAL) {\n      monitoringInterval = win.setInterval(callback, this.POLL_INTERVAL);\n    } else {\n      addEvent(win, 'resize', callback, true);\n      addEvent(doc, 'scroll', callback, true);\n\n      if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in win) {\n        domObserver = new win.MutationObserver(callback);\n        domObserver.observe(doc, {\n          attributes: true,\n          childList: true,\n          characterData: true,\n          subtree: true\n        });\n      }\n    }\n\n    this._monitoringDocuments.push(doc);\n\n    this._monitoringUnsubscribes.push(function () {\n      // Get the window object again. When a friendly iframe is destroyed, it\n      // will be null.\n      var win = doc.defaultView;\n\n      if (win) {\n        if (monitoringInterval) {\n          win.clearInterval(monitoringInterval);\n        }\n\n        removeEvent(win, 'resize', callback, true);\n      }\n\n      removeEvent(doc, 'scroll', callback, true);\n\n      if (domObserver) {\n        domObserver.disconnect();\n      }\n    }); // Also monitor the parent.\n\n\n    if (doc != (this.root && this.root.ownerDocument || document)) {\n      var frame = getFrameElement(doc);\n\n      if (frame) {\n        this._monitorIntersections(frame.ownerDocument);\n      }\n    }\n  };\n  /**\n   * Stops polling for intersection changes.\n   * @param {!Document} doc\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._unmonitorIntersections = function (doc) {\n    var index = this._monitoringDocuments.indexOf(doc);\n\n    if (index == -1) {\n      return;\n    }\n\n    var rootDoc = this.root && this.root.ownerDocument || document; // Check if any dependent targets are still remaining.\n\n    var hasDependentTargets = this._observationTargets.some(function (item) {\n      var itemDoc = item.element.ownerDocument; // Target is in this context.\n\n      if (itemDoc == doc) {\n        return true;\n      } // Target is nested in this context.\n\n\n      while (itemDoc && itemDoc != rootDoc) {\n        var frame = getFrameElement(itemDoc);\n        itemDoc = frame && frame.ownerDocument;\n\n        if (itemDoc == doc) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n\n    if (hasDependentTargets) {\n      return;\n    } // Unsubscribe.\n\n\n    var unsubscribe = this._monitoringUnsubscribes[index];\n\n    this._monitoringDocuments.splice(index, 1);\n\n    this._monitoringUnsubscribes.splice(index, 1);\n\n    unsubscribe(); // Also unmonitor the parent.\n\n    if (doc != rootDoc) {\n      var frame = getFrameElement(doc);\n\n      if (frame) {\n        this._unmonitorIntersections(frame.ownerDocument);\n      }\n    }\n  };\n  /**\n   * Stops polling for intersection changes.\n   * @param {!Document} doc\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._unmonitorAllIntersections = function () {\n    var unsubscribes = this._monitoringUnsubscribes.slice(0);\n\n    this._monitoringDocuments.length = 0;\n    this._monitoringUnsubscribes.length = 0;\n\n    for (var i = 0; i < unsubscribes.length; i++) {\n      unsubscribes[i]();\n    }\n  };\n  /**\n   * Scans each observation target for intersection changes and adds them\n   * to the internal entries queue. If new entries are found, it\n   * schedules the callback to be invoked.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._checkForIntersections = function () {\n    if (!this.root && crossOriginUpdater && !crossOriginRect) {\n      // Cross origin monitoring, but no initial data available yet.\n      return;\n    }\n\n    var rootIsInDom = this._rootIsInDom();\n\n    var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n    this._observationTargets.forEach(function (item) {\n      var target = item.element;\n      var targetRect = getBoundingClientRect(target);\n\n      var rootContainsTarget = this._rootContainsTarget(target);\n\n      var oldEntry = item.entry;\n\n      var intersectionRect = rootIsInDom && rootContainsTarget && this._computeTargetAndRootIntersection(target, targetRect, rootRect);\n\n      var newEntry = item.entry = new IntersectionObserverEntry({\n        time: now(),\n        target: target,\n        boundingClientRect: targetRect,\n        rootBounds: crossOriginUpdater && !this.root ? null : rootRect,\n        intersectionRect: intersectionRect\n      });\n\n      if (!oldEntry) {\n        this._queuedEntries.push(newEntry);\n      } else if (rootIsInDom && rootContainsTarget) {\n        // If the new entry intersection ratio has crossed any of the\n        // thresholds, add a new entry.\n        if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n          this._queuedEntries.push(newEntry);\n        }\n      } else {\n        // If the root is not in the DOM or target is not contained within\n        // root but the previous entry for this target had an intersection,\n        // add a new record indicating removal.\n        if (oldEntry && oldEntry.isIntersecting) {\n          this._queuedEntries.push(newEntry);\n        }\n      }\n    }, this);\n\n    if (this._queuedEntries.length) {\n      this._callback(this.takeRecords(), this);\n    }\n  };\n  /**\n   * Accepts a target and root rect computes the intersection between then\n   * following the algorithm in the spec.\n   * TODO(philipwalton): at this time clip-path is not considered.\n   * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n   * @param {Element} target The target DOM element\n   * @param {Object} targetRect The bounding rect of the target.\n   * @param {Object} rootRect The bounding rect of the root after being\n   *     expanded by the rootMargin value.\n   * @return {?Object} The final intersection rect object or undefined if no\n   *     intersection is found.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._computeTargetAndRootIntersection = function (target, targetRect, rootRect) {\n    // If the element isn't displayed, an intersection can't happen.\n    if (window.getComputedStyle(target).display == 'none') return;\n    var intersectionRect = targetRect;\n    var parent = getParentNode(target);\n    var atRoot = false;\n\n    while (!atRoot && parent) {\n      var parentRect = null;\n      var parentComputedStyle = parent.nodeType == 1 ? window.getComputedStyle(parent) : {}; // If the parent isn't displayed, an intersection can't happen.\n\n      if (parentComputedStyle.display == 'none') return null;\n\n      if (parent == this.root || parent.nodeType ==\n      /* DOCUMENT */\n      9) {\n        atRoot = true;\n\n        if (parent == this.root || parent == document) {\n          if (crossOriginUpdater && !this.root) {\n            if (!crossOriginRect || crossOriginRect.width == 0 && crossOriginRect.height == 0) {\n              // A 0-size cross-origin intersection means no-intersection.\n              parent = null;\n              parentRect = null;\n              intersectionRect = null;\n            } else {\n              parentRect = crossOriginRect;\n            }\n          } else {\n            parentRect = rootRect;\n          }\n        } else {\n          // Check if there's a frame that can be navigated to.\n          var frame = getParentNode(parent);\n          var frameRect = frame && getBoundingClientRect(frame);\n\n          var frameIntersect = frame && this._computeTargetAndRootIntersection(frame, frameRect, rootRect);\n\n          if (frameRect && frameIntersect) {\n            parent = frame;\n            parentRect = convertFromParentRect(frameRect, frameIntersect);\n          } else {\n            parent = null;\n            intersectionRect = null;\n          }\n        }\n      } else {\n        // If the element has a non-visible overflow, and it's not the <body>\n        // or <html> element, update the intersection rect.\n        // Note: <body> and <html> cannot be clipped to a rect that's not also\n        // the document rect, so no need to compute a new intersection.\n        var doc = parent.ownerDocument;\n\n        if (parent != doc.body && parent != doc.documentElement && parentComputedStyle.overflow != 'visible') {\n          parentRect = getBoundingClientRect(parent);\n        }\n      } // If either of the above conditionals set a new parentRect,\n      // calculate new intersection data.\n\n\n      if (parentRect) {\n        intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n      }\n\n      if (!intersectionRect) break;\n      parent = parent && getParentNode(parent);\n    }\n\n    return intersectionRect;\n  };\n  /**\n   * Returns the root rect after being expanded by the rootMargin value.\n   * @return {ClientRect} The expanded root rect.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._getRootRect = function () {\n    var rootRect;\n\n    if (this.root) {\n      rootRect = getBoundingClientRect(this.root);\n    } else {\n      // Use <html>/<body> instead of window since scroll bars affect size.\n      var html = document.documentElement;\n      var body = document.body;\n      rootRect = {\n        top: 0,\n        left: 0,\n        right: html.clientWidth || body.clientWidth,\n        width: html.clientWidth || body.clientWidth,\n        bottom: html.clientHeight || body.clientHeight,\n        height: html.clientHeight || body.clientHeight\n      };\n    }\n\n    return this._expandRectByRootMargin(rootRect);\n  };\n  /**\n   * Accepts a rect and expands it by the rootMargin value.\n   * @param {DOMRect|ClientRect} rect The rect object to expand.\n   * @return {ClientRect} The expanded rect.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._expandRectByRootMargin = function (rect) {\n    var margins = this._rootMarginValues.map(function (margin, i) {\n      return margin.unit == 'px' ? margin.value : margin.value * (i % 2 ? rect.width : rect.height) / 100;\n    });\n\n    var newRect = {\n      top: rect.top - margins[0],\n      right: rect.right + margins[1],\n      bottom: rect.bottom + margins[2],\n      left: rect.left - margins[3]\n    };\n    newRect.width = newRect.right - newRect.left;\n    newRect.height = newRect.bottom - newRect.top;\n    return newRect;\n  };\n  /**\n   * Accepts an old and new entry and returns true if at least one of the\n   * threshold values has been crossed.\n   * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n   *    particular target element or null if no previous entry exists.\n   * @param {IntersectionObserverEntry} newEntry The current entry for a\n   *    particular target element.\n   * @return {boolean} Returns true if a any threshold has been crossed.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._hasCrossedThreshold = function (oldEntry, newEntry) {\n    // To make comparing easier, an entry that has a ratio of 0\n    // but does not actually intersect is given a value of -1\n    var oldRatio = oldEntry && oldEntry.isIntersecting ? oldEntry.intersectionRatio || 0 : -1;\n    var newRatio = newEntry.isIntersecting ? newEntry.intersectionRatio || 0 : -1; // Ignore unchanged ratios\n\n    if (oldRatio === newRatio) return;\n\n    for (var i = 0; i < this.thresholds.length; i++) {\n      var threshold = this.thresholds[i]; // Return true if an entry matches a threshold or if the new ratio\n      // and the old ratio are on the opposite sides of a threshold.\n\n      if (threshold == oldRatio || threshold == newRatio || threshold < oldRatio !== threshold < newRatio) {\n        return true;\n      }\n    }\n  };\n  /**\n   * Returns whether or not the root element is an element and is in the DOM.\n   * @return {boolean} True if the root element is an element and is in the DOM.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._rootIsInDom = function () {\n    return !this.root || containsDeep(document, this.root);\n  };\n  /**\n   * Returns whether or not the target element is a child of root.\n   * @param {Element} target The target element to check.\n   * @return {boolean} True if the target element is a child of root.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._rootContainsTarget = function (target) {\n    return containsDeep(this.root || document, target) && (!this.root || this.root.ownerDocument == target.ownerDocument);\n  };\n  /**\n   * Adds the instance to the global IntersectionObserver registry if it isn't\n   * already present.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._registerInstance = function () {\n    if (registry.indexOf(this) < 0) {\n      registry.push(this);\n    }\n  };\n  /**\n   * Removes the instance from the global IntersectionObserver registry.\n   * @private\n   */\n\n\n  IntersectionObserver.prototype._unregisterInstance = function () {\n    var index = registry.indexOf(this);\n    if (index != -1) registry.splice(index, 1);\n  };\n  /**\n   * Returns the result of the performance.now() method or null in browsers\n   * that don't support the API.\n   * @return {number} The elapsed time since the page was requested.\n   */\n\n\n  function now() {\n    return window.performance && performance.now && performance.now();\n  }\n  /**\n   * Throttles a function and delays its execution, so it's only called at most\n   * once within a given time period.\n   * @param {Function} fn The function to throttle.\n   * @param {number} timeout The amount of time that must pass before the\n   *     function can be called again.\n   * @return {Function} The throttled function.\n   */\n\n\n  function throttle(fn, timeout) {\n    var timer = null;\n    return function () {\n      if (!timer) {\n        timer = setTimeout(function () {\n          fn();\n          timer = null;\n        }, timeout);\n      }\n    };\n  }\n  /**\n   * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n   * @param {Node} node The DOM node to add the event handler to.\n   * @param {string} event The event name.\n   * @param {Function} fn The event handler to add.\n   * @param {boolean} opt_useCapture Optionally adds the even to the capture\n   *     phase. Note: this only works in modern browsers.\n   */\n\n\n  function addEvent(node, event, fn, opt_useCapture) {\n    if (typeof node.addEventListener == 'function') {\n      node.addEventListener(event, fn, opt_useCapture || false);\n    } else if (typeof node.attachEvent == 'function') {\n      node.attachEvent('on' + event, fn);\n    }\n  }\n  /**\n   * Removes a previously added event handler from a DOM node.\n   * @param {Node} node The DOM node to remove the event handler from.\n   * @param {string} event The event name.\n   * @param {Function} fn The event handler to remove.\n   * @param {boolean} opt_useCapture If the event handler was added with this\n   *     flag set to true, it should be set to true here in order to remove it.\n   */\n\n\n  function removeEvent(node, event, fn, opt_useCapture) {\n    if (typeof node.removeEventListener == 'function') {\n      node.removeEventListener(event, fn, opt_useCapture || false);\n    } else if (typeof node.detatchEvent == 'function') {\n      node.detatchEvent('on' + event, fn);\n    }\n  }\n  /**\n   * Returns the intersection between two rect objects.\n   * @param {Object} rect1 The first rect.\n   * @param {Object} rect2 The second rect.\n   * @return {?Object|?ClientRect} The intersection rect or undefined if no\n   *     intersection is found.\n   */\n\n\n  function computeRectIntersection(rect1, rect2) {\n    var top = Math.max(rect1.top, rect2.top);\n    var bottom = Math.min(rect1.bottom, rect2.bottom);\n    var left = Math.max(rect1.left, rect2.left);\n    var right = Math.min(rect1.right, rect2.right);\n    var width = right - left;\n    var height = bottom - top;\n    return width >= 0 && height >= 0 && {\n      top: top,\n      bottom: bottom,\n      left: left,\n      right: right,\n      width: width,\n      height: height\n    } || null;\n  }\n  /**\n   * Shims the native getBoundingClientRect for compatibility with older IE.\n   * @param {Element} el The element whose bounding rect to get.\n   * @return {DOMRect|ClientRect} The (possibly shimmed) rect of the element.\n   */\n\n\n  function getBoundingClientRect(el) {\n    var rect;\n\n    try {\n      rect = el.getBoundingClientRect();\n    } catch (err) {// Ignore Windows 7 IE11 \"Unspecified error\"\n      // https://github.com/w3c/IntersectionObserver/pull/205\n    }\n\n    if (!rect) return getEmptyRect(); // Older IE\n\n    if (!(rect.width && rect.height)) {\n      rect = {\n        top: rect.top,\n        right: rect.right,\n        bottom: rect.bottom,\n        left: rect.left,\n        width: rect.right - rect.left,\n        height: rect.bottom - rect.top\n      };\n    }\n\n    return rect;\n  }\n  /**\n   * Returns an empty rect object. An empty rect is returned when an element\n   * is not in the DOM.\n   * @return {ClientRect} The empty rect.\n   */\n\n\n  function getEmptyRect() {\n    return {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  /**\n   * Ensure that the result has all of the necessary fields of the DOMRect.\n   * Specifically this ensures that `x` and `y` fields are set.\n   *\n   * @param {?DOMRect|?ClientRect} rect\n   * @return {?DOMRect}\n   */\n\n\n  function ensureDOMRect(rect) {\n    // A `DOMRect` object has `x` and `y` fields.\n    if (!rect || 'x' in rect) {\n      return rect;\n    } // A IE's `ClientRect` type does not have `x` and `y`. The same is the case\n    // for internally calculated Rect objects. For the purposes of\n    // `IntersectionObserver`, it's sufficient to simply mirror `left` and `top`\n    // for these fields.\n\n\n    return {\n      top: rect.top,\n      y: rect.top,\n      bottom: rect.bottom,\n      left: rect.left,\n      x: rect.left,\n      right: rect.right,\n      width: rect.width,\n      height: rect.height\n    };\n  }\n  /**\n   * Inverts the intersection and bounding rect from the parent (frame) BCR to\n   * the local BCR space.\n   * @param {DOMRect|ClientRect} parentBoundingRect The parent's bound client rect.\n   * @param {DOMRect|ClientRect} parentIntersectionRect The parent's own intersection rect.\n   * @return {ClientRect} The local root bounding rect for the parent's children.\n   */\n\n\n  function convertFromParentRect(parentBoundingRect, parentIntersectionRect) {\n    var top = parentIntersectionRect.top - parentBoundingRect.top;\n    var left = parentIntersectionRect.left - parentBoundingRect.left;\n    return {\n      top: top,\n      left: left,\n      height: parentIntersectionRect.height,\n      width: parentIntersectionRect.width,\n      bottom: top + parentIntersectionRect.height,\n      right: left + parentIntersectionRect.width\n    };\n  }\n  /**\n   * Checks to see if a parent element contains a child element (including inside\n   * shadow DOM).\n   * @param {Node} parent The parent element.\n   * @param {Node} child The child element.\n   * @return {boolean} True if the parent node contains the child node.\n   */\n\n\n  function containsDeep(parent, child) {\n    var node = child;\n\n    while (node) {\n      if (node == parent) return true;\n      node = getParentNode(node);\n    }\n\n    return false;\n  }\n  /**\n   * Gets the parent node of an element or its host element if the parent node\n   * is a shadow root.\n   * @param {Node} node The node whose parent to get.\n   * @return {Node|null} The parent node or null if no parent exists.\n   */\n\n\n  function getParentNode(node) {\n    var parent = node.parentNode;\n\n    if (node.nodeType ==\n    /* DOCUMENT */\n    9 && node != document) {\n      // If this node is a document node, look for the embedding frame.\n      return getFrameElement(node);\n    }\n\n    if (parent && parent.nodeType == 11 && parent.host) {\n      // If the parent is a shadow root, return the host element.\n      return parent.host;\n    }\n\n    if (parent && parent.assignedSlot) {\n      // If the parent is distributed in a <slot>, return the parent of a slot.\n      return parent.assignedSlot.parentNode;\n    }\n\n    return parent;\n  } // Exposes the constructors globally.\n\n\n  window.IntersectionObserver = IntersectionObserver;\n  window.IntersectionObserverEntry = IntersectionObserverEntry;\n})();","(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory();\n  } else {\n    window.idleCallbackShim = factory();\n  }\n})(function () {\n  'use strict';\n\n  var scheduleStart, throttleDelay, lazytimer, lazyraf;\n  var root = typeof window != 'undefined' ? window : typeof global != undefined ? global : this || {};\n  var requestAnimationFrame = root.cancelRequestAnimationFrame && root.requestAnimationFrame || setTimeout;\n  var cancelRequestAnimationFrame = root.cancelRequestAnimationFrame || clearTimeout;\n  var tasks = [];\n  var runAttempts = 0;\n  var isRunning = false;\n  var remainingTime = 7;\n  var minThrottle = 35;\n  var throttle = 125;\n  var index = 0;\n  var taskStart = 0;\n  var tasklength = 0;\n  var IdleDeadline = {\n    get didTimeout() {\n      return false;\n    },\n\n    timeRemaining: function timeRemaining() {\n      var timeRemaining = remainingTime - (Date.now() - taskStart);\n      return timeRemaining < 0 ? 0 : timeRemaining;\n    }\n  };\n  var setInactive = debounce(function () {\n    remainingTime = 22;\n    throttle = 66;\n    minThrottle = 0;\n  });\n\n  function debounce(fn) {\n    var id, timestamp;\n    var wait = 99;\n\n    var check = function check() {\n      var last = Date.now() - timestamp;\n\n      if (last < wait) {\n        id = setTimeout(check, wait - last);\n      } else {\n        id = null;\n        fn();\n      }\n    };\n\n    return function () {\n      timestamp = Date.now();\n\n      if (!id) {\n        id = setTimeout(check, wait);\n      }\n    };\n  }\n\n  function abortRunning() {\n    if (isRunning) {\n      if (lazyraf) {\n        cancelRequestAnimationFrame(lazyraf);\n      }\n\n      if (lazytimer) {\n        clearTimeout(lazytimer);\n      }\n\n      isRunning = false;\n    }\n  }\n\n  function onInputorMutation() {\n    if (throttle != 125) {\n      remainingTime = 7;\n      throttle = 125;\n      minThrottle = 35;\n\n      if (isRunning) {\n        abortRunning();\n        scheduleLazy();\n      }\n    }\n\n    setInactive();\n  }\n\n  function scheduleAfterRaf() {\n    lazyraf = null;\n    lazytimer = setTimeout(runTasks, 0);\n  }\n\n  function scheduleRaf() {\n    lazytimer = null;\n    requestAnimationFrame(scheduleAfterRaf);\n  }\n\n  function scheduleLazy() {\n    if (isRunning) {\n      return;\n    }\n\n    throttleDelay = throttle - (Date.now() - taskStart);\n    scheduleStart = Date.now();\n    isRunning = true;\n\n    if (minThrottle && throttleDelay < minThrottle) {\n      throttleDelay = minThrottle;\n    }\n\n    if (throttleDelay > 9) {\n      lazytimer = setTimeout(scheduleRaf, throttleDelay);\n    } else {\n      throttleDelay = 0;\n      scheduleRaf();\n    }\n  }\n\n  function runTasks() {\n    var task, i, len;\n    var timeThreshold = remainingTime > 9 ? 9 : 1;\n    taskStart = Date.now();\n    isRunning = false;\n    lazytimer = null;\n\n    if (runAttempts > 2 || taskStart - throttleDelay - 50 < scheduleStart) {\n      for (i = 0, len = tasks.length; i < len && IdleDeadline.timeRemaining() > timeThreshold; i++) {\n        task = tasks.shift();\n        tasklength++;\n\n        if (task) {\n          task(IdleDeadline);\n        }\n      }\n    }\n\n    if (tasks.length) {\n      scheduleLazy();\n    } else {\n      runAttempts = 0;\n    }\n  }\n\n  function requestIdleCallbackShim(task) {\n    index++;\n    tasks.push(task);\n    scheduleLazy();\n    return index;\n  }\n\n  function cancelIdleCallbackShim(id) {\n    var index = id - 1 - tasklength;\n\n    if (tasks[index]) {\n      tasks[index] = null;\n    }\n  }\n\n  if (!root.requestIdleCallback || !root.cancelIdleCallback) {\n    root.requestIdleCallback = requestIdleCallbackShim;\n    root.cancelIdleCallback = cancelIdleCallbackShim;\n\n    if (root.document && document.addEventListener) {\n      root.addEventListener('scroll', onInputorMutation, true);\n      root.addEventListener('resize', onInputorMutation);\n      document.addEventListener('focus', onInputorMutation, true);\n      document.addEventListener('mouseover', onInputorMutation, true);\n      ['click', 'keypress', 'touchstart', 'mousedown'].forEach(function (name) {\n        document.addEventListener(name, onInputorMutation, {\n          capture: true,\n          passive: true\n        });\n      });\n\n      if (root.MutationObserver) {\n        new MutationObserver(onInputorMutation).observe(document.documentElement, {\n          childList: true,\n          subtree: true,\n          attributes: true\n        });\n      }\n    }\n  } else {\n    try {\n      root.requestIdleCallback(function () {}, {\n        timeout: 0\n      });\n    } catch (e) {\n      (function (rIC) {\n        var timeRemainingProto, timeRemaining;\n\n        root.requestIdleCallback = function (fn, timeout) {\n          if (timeout && typeof timeout.timeout == 'number') {\n            return rIC(fn, timeout.timeout);\n          }\n\n          return rIC(fn);\n        };\n\n        if (root.IdleCallbackDeadline && (timeRemainingProto = IdleCallbackDeadline.prototype)) {\n          timeRemaining = Object.getOwnPropertyDescriptor(timeRemainingProto, 'timeRemaining');\n\n          if (!timeRemaining || !timeRemaining.configurable || !timeRemaining.get) {\n            return;\n          }\n\n          Object.defineProperty(timeRemainingProto, 'timeRemaining', {\n            value: function value() {\n              return timeRemaining.get.call(this);\n            },\n            enumerable: true,\n            configurable: true\n          });\n        }\n      })(root.requestIdleCallback);\n    }\n  }\n\n  return {\n    request: requestIdleCallbackShim,\n    cancel: cancelIdleCallbackShim\n  };\n});","/*! npm.im/object-fit-images 3.2.4 */\n'use strict';\n\nvar OFI = 'bfred-it:object-fit-images';\nvar propRegex = /(object-fit|object-position)\\s*:\\s*([-.\\w\\s%]+)/g;\nvar testImg = typeof Image === 'undefined' ? {\n  style: {\n    'object-position': 1\n  }\n} : new Image();\nvar supportsObjectFit = 'object-fit' in testImg.style;\nvar supportsObjectPosition = 'object-position' in testImg.style;\nvar supportsOFI = 'background-size' in testImg.style;\nvar supportsCurrentSrc = typeof testImg.currentSrc === 'string';\nvar nativeGetAttribute = testImg.getAttribute;\nvar nativeSetAttribute = testImg.setAttribute;\nvar autoModeEnabled = false;\n\nfunction createPlaceholder(w, h) {\n  return \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='\" + w + \"' height='\" + h + \"'%3E%3C/svg%3E\";\n}\n\nfunction polyfillCurrentSrc(el) {\n  if (el.srcset && !supportsCurrentSrc && window.picturefill) {\n    var pf = window.picturefill._; // parse srcset with picturefill where currentSrc isn't available\n\n    if (!el[pf.ns] || !el[pf.ns].evaled) {\n      // force synchronous srcset parsing\n      pf.fillImg(el, {\n        reselect: true\n      });\n    }\n\n    if (!el[pf.ns].curSrc) {\n      // force picturefill to parse srcset\n      el[pf.ns].supported = false;\n      pf.fillImg(el, {\n        reselect: true\n      });\n    } // retrieve parsed currentSrc, if any\n\n\n    el.currentSrc = el[pf.ns].curSrc || el.src;\n  }\n}\n\nfunction getStyle(el) {\n  var style = getComputedStyle(el).fontFamily;\n  var parsed;\n  var props = {};\n\n  while ((parsed = propRegex.exec(style)) !== null) {\n    props[parsed[1]] = parsed[2];\n  }\n\n  return props;\n}\n\nfunction setPlaceholder(img, width, height) {\n  // Default: fill width, no height\n  var placeholder = createPlaceholder(width || 1, height || 0); // Only set placeholder if it's different\n\n  if (nativeGetAttribute.call(img, 'src') !== placeholder) {\n    nativeSetAttribute.call(img, 'src', placeholder);\n  }\n}\n\nfunction onImageReady(img, callback) {\n  // naturalWidth is only available when the image headers are loaded,\n  // this loop will poll it every 100ms.\n  if (img.naturalWidth) {\n    callback(img);\n  } else {\n    setTimeout(onImageReady, 100, img, callback);\n  }\n}\n\nfunction fixOne(el) {\n  var style = getStyle(el);\n  var ofi = el[OFI];\n  style['object-fit'] = style['object-fit'] || 'fill'; // default value\n  // Avoid running where unnecessary, unless OFI had already done its deed\n\n  if (!ofi.img) {\n    // fill is the default behavior so no action is necessary\n    if (style['object-fit'] === 'fill') {\n      return;\n    } // Where object-fit is supported and object-position isn't (Safari < 10)\n\n\n    if (!ofi.skipTest && // unless user wants to apply regardless of browser support\n    supportsObjectFit && // if browser already supports object-fit\n    !style['object-position'] // unless object-position is used\n    ) {\n        return;\n      }\n  } // keep a clone in memory while resetting the original to a blank\n\n\n  if (!ofi.img) {\n    ofi.img = new Image(el.width, el.height);\n    ofi.img.srcset = nativeGetAttribute.call(el, \"data-ofi-srcset\") || el.srcset;\n    ofi.img.src = nativeGetAttribute.call(el, \"data-ofi-src\") || el.src; // preserve for any future cloneNode calls\n    // https://github.com/bfred-it/object-fit-images/issues/53\n\n    nativeSetAttribute.call(el, \"data-ofi-src\", el.src);\n\n    if (el.srcset) {\n      nativeSetAttribute.call(el, \"data-ofi-srcset\", el.srcset);\n    }\n\n    setPlaceholder(el, el.naturalWidth || el.width, el.naturalHeight || el.height); // remove srcset because it overrides src\n\n    if (el.srcset) {\n      el.srcset = '';\n    }\n\n    try {\n      keepSrcUsable(el);\n    } catch (err) {\n      if (window.console) {\n        console.warn('https://bit.ly/ofi-old-browser');\n      }\n    }\n  }\n\n  polyfillCurrentSrc(ofi.img);\n  el.style.backgroundImage = \"url(\\\"\" + (ofi.img.currentSrc || ofi.img.src).replace(/\"/g, '\\\\\"') + \"\\\")\";\n  el.style.backgroundPosition = style['object-position'] || 'center';\n  el.style.backgroundRepeat = 'no-repeat';\n  el.style.backgroundOrigin = 'content-box';\n\n  if (/scale-down/.test(style['object-fit'])) {\n    onImageReady(ofi.img, function () {\n      if (ofi.img.naturalWidth > el.width || ofi.img.naturalHeight > el.height) {\n        el.style.backgroundSize = 'contain';\n      } else {\n        el.style.backgroundSize = 'auto';\n      }\n    });\n  } else {\n    el.style.backgroundSize = style['object-fit'].replace('none', 'auto').replace('fill', '100% 100%');\n  }\n\n  onImageReady(ofi.img, function (img) {\n    setPlaceholder(el, img.naturalWidth, img.naturalHeight);\n  });\n}\n\nfunction keepSrcUsable(el) {\n  var descriptors = {\n    get: function get(prop) {\n      return el[OFI].img[prop ? prop : 'src'];\n    },\n    set: function set(value, prop) {\n      el[OFI].img[prop ? prop : 'src'] = value;\n      nativeSetAttribute.call(el, \"data-ofi-\" + prop, value); // preserve for any future cloneNode\n\n      fixOne(el);\n      return value;\n    }\n  };\n  Object.defineProperty(el, 'src', descriptors);\n  Object.defineProperty(el, 'currentSrc', {\n    get: function get() {\n      return descriptors.get('currentSrc');\n    }\n  });\n  Object.defineProperty(el, 'srcset', {\n    get: function get() {\n      return descriptors.get('srcset');\n    },\n    set: function set(ss) {\n      return descriptors.set(ss, 'srcset');\n    }\n  });\n}\n\nfunction hijackAttributes() {\n  function getOfiImageMaybe(el, name) {\n    return el[OFI] && el[OFI].img && (name === 'src' || name === 'srcset') ? el[OFI].img : el;\n  }\n\n  if (!supportsObjectPosition) {\n    HTMLImageElement.prototype.getAttribute = function (name) {\n      return nativeGetAttribute.call(getOfiImageMaybe(this, name), name);\n    };\n\n    HTMLImageElement.prototype.setAttribute = function (name, value) {\n      return nativeSetAttribute.call(getOfiImageMaybe(this, name), name, String(value));\n    };\n  }\n}\n\nfunction fix(imgs, opts) {\n  var startAutoMode = !autoModeEnabled && !imgs;\n  opts = opts || {};\n  imgs = imgs || 'img';\n\n  if (supportsObjectPosition && !opts.skipTest || !supportsOFI) {\n    return false;\n  } // use imgs as a selector or just select all images\n\n\n  if (imgs === 'img') {\n    imgs = document.getElementsByTagName('img');\n  } else if (typeof imgs === 'string') {\n    imgs = document.querySelectorAll(imgs);\n  } else if (!('length' in imgs)) {\n    imgs = [imgs];\n  } // apply fix to all\n\n\n  for (var i = 0; i < imgs.length; i++) {\n    imgs[i][OFI] = imgs[i][OFI] || {\n      skipTest: opts.skipTest\n    };\n    fixOne(imgs[i]);\n  }\n\n  if (startAutoMode) {\n    document.body.addEventListener('load', function (e) {\n      if (e.target.tagName === 'IMG') {\n        fix(e.target, {\n          skipTest: opts.skipTest\n        });\n      }\n    }, true);\n    autoModeEnabled = true;\n    imgs = 'img'; // reset to a generic selector for watchMQ\n  } // if requested, watch media queries for object-fit change\n\n\n  if (opts.watchMQ) {\n    window.addEventListener('resize', fix.bind(null, imgs, {\n      skipTest: opts.skipTest\n    }));\n  }\n}\n\nfix.supportsObjectFit = supportsObjectFit;\nfix.supportsObjectPosition = supportsObjectPosition;\nhijackAttributes();\nmodule.exports = fix;"],"sourceRoot":""}